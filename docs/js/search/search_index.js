var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/modules/SenzingSdkModule.html",[0,2.549,1,2.34]],["body/modules/SenzingSdkModule.html",[0,4.25,1,3.646,2,2.872,3,0.293,4,3.23,5,0.223,6,3.774,7,0.64,8,2.213,9,2.983,10,1.767,11,2.313,12,5.754,13,4.354,14,2.391,15,4.354,16,2.939,17,2.939,18,3.142,19,2.439,20,2.759,21,2.939,22,2.939,23,2.939,24,3.142,25,2.939,26,2.939,27,3.774,28,3.774,29,4.354,30,2.872,31,2.605,32,2.605,33,2.213,34,2.605,35,2.605,36,2.872,37,1.606,38,2.605,39,2.872,40,3.774,41,0.845,42,3.511,43,3.23,44,3.774,45,0.02,46,0.892,47,3.23,48,0.674,49,2.872,50,2.391,51,0.914,52,3.511,53,2.605,54,0.603,55,0.534,56,0.324,57,3.774,58,3.871,59,2.213,60,0.845,61,3.511,62,4.354,63,2.605,64,1.359,65,2.605,66,3.774,67,2.605,68,1.606,69,4.354,70,3.774,71,3.871,72,2.605,73,3.223,74,3.612,75,3.23,76,4.354,77,3.23,78,2.872,79,3.23,80,3.511,81,3.511,82,2.872,83,4.354,84,3.871,85,2.872,86,3.23,87,2.605,88,2.872,89,2.605,90,3.23,91,3.363,92,4.354,93,2.872,94,2.872,95,4.354,96,2.872,97,4.925,98,3.23,99,3.23,100,0.718,101,3.23,102,3.871,103,2.605,104,3.774,105,3.774,106,2.605,107,3.23,108,2.213,109,2.872,110,2.213,111,1.222,112,3.23,113,1.703,114,1.928,115,3.774,116,3.23,117,2.061,118,0.01,119,0.014,120,0.01]],["title/classes/SzBulkDataAnalysis.html",[100,0.702,121,2.549]],["body/classes/SzBulkDataAnalysis.html",[3,0.413,5,0.234,45,0.02,56,0.461,118,0.015,119,0.017,120,0.015,121,3.679,122,1.725,123,4.056,124,5.33,125,0.376,126,0.785,127,6.333,128,6.333,129,6.333,130,5.421,131,6.333,132,5.421,133,3.679,134,0.895,135,2.187]],["title/injectables/SzBulkDataService.html",[31,2.549,136,1.571]],["body/injectables/SzBulkDataService.html",[3,0.186,5,0.315,7,0.408,30,2.797,31,1.659,33,2.156,34,2.537,41,1,45,0.02,46,1.272,48,0.807,51,1.145,54,0.974,55,0.901,56,0.458,59,2.93,60,0.539,64,2.444,91,1.313,118,0.015,119,0.01,120,0.007,121,3.08,125,0.169,126,0.456,134,0.95,137,1.085,138,0.821,139,1.878,140,2.404,141,0.631,142,2.404,143,1.371,144,1.83,145,5.384,146,4.997,147,4.636,148,2.404,149,1.659,150,3.146,151,3.676,152,1.963,153,3.676,154,3.676,155,3.676,156,3.676,157,3.676,158,4.997,159,4.997,160,3.676,161,3.676,162,3.676,163,3.676,164,3.676,165,3.676,166,3.676,167,3.676,168,3.676,169,3.676,170,3.676,171,3.396,172,3.676,173,3.676,174,3.803,175,3.676,176,3.676,177,4.462,178,1.324,179,0.568,180,2.404,181,3.676,182,3.676,183,4.997,184,2.404,185,2.404,186,2.404,187,2.404,188,2.404,189,3.166,190,2.404,191,3.676,192,2.126,193,4.997,194,3.329,195,2.537,196,3.464,197,4.462,198,2.404,199,2.404,200,3.676,201,1.912,202,2.404,203,1.83,204,2.404,205,1.659,206,1.523,207,2.404,208,2.156,209,2.827,210,2.404,211,2.058,212,1.523,213,2.404,214,2.404,215,3.329,216,4.277,217,1.659,218,2.058,219,1.83,220,3.327,221,2.156,222,1.746,223,1.427,224,3.062,225,4.997,226,2.329,227,2.797,228,2.058,229,2.058,230,2.404,231,2.156,232,1.878,233,3.676,234,2.058,235,3.676,236,4.997,237,3.1,238,2.93,239,6.092,240,1.762,241,2.404,242,2.404,243,1.83,244,1.83,245,1.659,246,1.83,247,2.404,248,2.404]],["title/components/SzConfigurationAboutComponent.html",[16,1.886,249,1.134]],["body/components/SzConfigurationAboutComponent.html",[3,0.275,5,0.156,7,0.601,10,1.497,16,2.845,17,1.81,18,1.935,19,1.699,20,1.699,21,1.81,22,1.81,23,1.81,24,1.935,25,1.81,26,1.81,41,1.092,45,0.02,46,0.837,48,0.47,51,0.876,52,3.844,54,0.779,55,0.889,56,0.354,60,0.794,113,3.259,114,1.81,117,1.935,118,0.01,119,0.013,120,0.01,125,0.25,126,0.604,152,1.706,179,0.837,201,1.803,220,1.935,223,1.034,249,1.088,250,1.699,251,3.033,252,3.004,253,3.544,254,3.544,255,1.508,256,2.697,257,1.599,258,2.697,259,2.697,260,3.544,261,3.033,262,4.873,263,2.446,264,2.446,265,2.078,266,3.872,267,2.078,268,4.873,269,2.078,270,3.544,271,4.768,272,4.873,273,5.57,274,3.844,275,3.033,276,2.336,277,3.033,278,3.033,279,3.064,280,3.544,281,3.544,282,2.245,283,3.689,284,4.14,285,2.446,286,3.544,287,2.446,288,2.697,289,2.661,290,2.245,291,3.709,292,3.544,293,5.57,294,2.245,295,1.935,296,3.544,297,1.81,298,2.245,299,3.033,300,4.873,301,2.661,302,2.245,303,3.363,304,4.873,305,3.363,306,2.697,307,2.845,308,4.341,309,2.858,310,2.446,311,4.873,312,3.544,313,3.064,314,2.078,315,3.544,316,3.544,317,2.078,318,2.078,319,2.078,320,1.348,321,1.853,322,2.078,323,1.599,324,2.078,325,2.078,326,2.078,327,1.214,328,2.078,329,2.078,330,2.078,331,2.078,332,2.078,333,2.078]],["title/components/SzConfigurationComponent.html",[17,1.886,249,1.134]],["body/components/SzConfigurationComponent.html",[3,0.243,5,0.138,7,0.532,10,1.601,16,1.601,17,2.663,18,1.712,19,1.503,20,1.503,21,1.601,22,1.601,23,1.601,24,1.712,25,1.601,26,1.601,32,3.598,45,0.02,46,1.477,48,0.853,51,1.123,54,1.051,55,0.946,56,0.451,60,0.702,65,3.924,67,3.924,89,2.163,111,1.015,113,3.131,114,1.601,118,0.009,119,0.012,120,0.009,125,0.221,134,0.971,136,1.334,141,1.578,178,1.611,179,0.741,192,1.334,201,1.688,215,3.058,223,1.396,224,1.414,250,2.144,251,2.683,252,2.352,255,1.903,257,3.02,265,1.838,266,3.79,279,1.601,313,2.904,314,1.838,317,1.838,318,1.838,319,1.838,320,1.192,321,1.701,322,1.838,323,1.414,324,1.838,325,1.838,326,1.838,327,1.114,328,1.838,329,1.838,330,1.838,331,1.838,332,1.838,333,1.838,334,3.135,335,3.135,336,1.601,337,2.386,338,2.683,339,3.135,340,3.135,341,3.058,342,3.135,343,2.683,344,3.303,345,1.986,346,3.135,347,2.683,348,2.386,349,3.135,350,2.683,351,2.833,352,4.866,353,5.35,354,5.35,355,5.35,356,3.404,357,3.828,358,3.135,359,3.135,360,2.82,361,3.828,362,3.334,363,3.828,364,3.924,365,3.828,366,3.404,367,3.828,368,3.828,369,3.828,370,4.866,371,3.828,372,3.404,373,3.828,374,2.096,375,2.442,376,3.404,377,2.683,378,1.838,379,2.683,380,2.683,381,2.683,382,2.683,383,2.683,384,2.683,385,2.683,386,2.683]],["title/injectables/SzConfigurationService.html",[32,2.549,136,1.571]],["body/injectables/SzConfigurationService.html",[1,2.177,3,0.266,5,0.151,7,0.583,9,2.798,10,1.055,32,2.371,37,2.332,41,1.069,45,0.02,46,1.56,48,0.892,49,2.615,50,2.177,51,1.209,52,3.782,54,1.107,55,0.952,56,0.449,60,0.77,65,3.292,67,3.292,72,2.371,76,4.083,111,1.112,118,0.009,119,0.013,120,0.009,125,0.242,126,0.592,134,0.933,136,1.462,137,1.55,138,1.173,139,2.437,141,1.252,152,1.817,178,1.718,179,0.812,192,2.03,215,2.798,223,1.429,252,2.152,255,1.462,257,2.807,258,4.171,259,2.615,271,4.691,275,2.941,277,2.941,278,2.941,336,2.437,341,2.798,344,2.177,350,2.941,352,4.083,353,4.691,354,4.691,355,4.691,360,2.473,361,2.941,362,2.798,363,2.941,364,3.782,365,2.941,366,2.615,367,2.941,368,2.941,369,2.941,370,4.083,371,2.941,372,2.615,373,2.941,374,1.918,375,1.876,376,2.615,378,2.015,381,2.941,382,2.941,383,2.941,384,2.941,385,2.941,386,2.941,387,3.436,388,4.77,389,2.941,390,2.152,391,2.941,392,2.941,393,2.615,394,3.436,395,3.436,396,3.436,397,2.615,398,2.615,399,3.436,400,3.436,401,2.615,402,3.436,403,2.941,404,2.941,405,3.436,406,3.436,407,4.171,408,3.436,409,5.92,410,2.838,411,5.48,412,4.77,413,5.48,414,3.436,415,5.48,416,3.436,417,3.436,418,3.436]],["title/classes/SzDataSourceRecordAnalysis.html",[100,0.702,133,2.549]],["body/classes/SzDataSourceRecordAnalysis.html",[3,0.429,5,0.243,45,0.02,56,0.437,118,0.015,119,0.018,120,0.015,122,1.792,123,4.213,125,0.39,126,0.803,130,5.543,132,5.543,133,3.821,134,0.783,135,2.097,194,3.798,419,5.536]],["title/injectables/SzDataSourcesService.html",[33,2.166,136,1.571]],["body/injectables/SzDataSourcesService.html",[3,0.38,5,0.215,7,0.832,11,1.971,14,4.129,33,2.876,41,1.349,45,0.02,48,0.798,51,1.171,54,0.963,55,0.851,56,0.383,60,1.098,63,3.384,118,0.013,119,0.016,120,0.013,125,0.346,134,0.851,137,2.213,138,1.674,152,1.864,179,1.159,189,4.129,209,4.499,227,3.732,255,2.087,257,2.213,420,4.904,421,3.732,422,3.384,423,2.876,424,4.197,425,3.815,426,4.197,427,4.197,428,6.022,429,6.517,430,6.517,431,4.197,432,4.129,433,4.904]],["title/components/SzEntityDetailGraphFilterComponent.html",[19,1.77,249,1.134]],["body/components/SzEntityDetailGraphFilterComponent.html",[3,0.121,5,0.069,7,0.265,10,0.8,14,2.121,16,0.799,17,0.799,18,0.854,19,1.605,20,0.75,21,0.799,22,0.799,23,0.799,24,0.854,25,0.799,26,0.799,33,1.964,37,1.425,41,0.584,45,0.021,46,1.23,48,0.621,50,1.65,51,1.002,54,0.794,55,0.764,56,0.432,60,0.35,64,0.563,68,1.425,113,2.958,114,0.799,117,0.854,118,0.004,119,0.007,120,0.004,125,0.184,126,0.323,134,0.788,135,1.609,141,0.41,143,1.028,144,1.983,150,2.23,152,1.639,171,2.548,178,0.938,179,0.369,194,1.528,201,2.105,205,1.798,209,2.749,212,1.65,220,1.829,222,1.594,223,1.411,224,0.705,232,0.799,237,0.854,243,1.19,244,1.19,245,1.079,246,1.19,249,1.028,250,0.75,252,0.705,263,1.079,264,1.079,265,0.917,266,3.197,267,0.917,269,0.917,274,2.311,279,0.799,282,0.991,283,2.748,284,1.079,285,1.798,287,1.079,289,2.37,290,0.991,294,2.121,295,3.045,297,0.799,301,3.197,302,1.65,303,1.079,307,3.293,308,1.079,309,2.748,310,2.696,313,2.848,314,0.917,317,0.917,318,0.917,319,0.917,320,1.98,321,2.375,322,0.917,323,0.705,324,0.917,325,0.917,326,0.917,327,0.649,328,0.917,329,0.917,330,0.917,331,0.917,332,0.917,333,0.917,348,1.19,351,1.65,356,1.983,374,1.884,377,1.338,378,2.748,379,1.338,380,1.338,410,1.605,434,1.564,435,1.564,436,1.564,437,4.244,438,1.564,439,1.19,440,1.564,441,1.564,442,3.714,443,1.564,444,0.917,445,1.564,446,1.338,447,1.564,448,1.564,449,1.564,450,2.866,451,2.605,452,1.564,453,2.605,454,3.348,455,2.605,456,3.348,457,2.605,458,2.605,459,3.348,460,2.866,461,2.605,462,2.605,463,3.348,464,3.348,465,2.605,466,2.605,467,3.566,468,2.605,469,2.605,470,1.983,471,2.23,472,3.714,473,3.714,474,2.866,475,2.605,476,2.866,477,3.343,478,2.605,479,2.605,480,2.605,481,2.605,482,2.605,483,2.605,484,2.23,485,2.972,486,3.343,487,2.605,488,2.605,489,2.605,490,1.338,491,3.906,492,1.983,493,2.23,494,2.291,495,1.19,496,1.338,497,2.605,498,2.121,499,1.564,500,2.866,501,1.19,502,0.854,503,2.23,504,1.564,505,1.564,506,0.991,507,1.564,508,1.564,509,1.564,510,1.338,511,2.952,512,1.338,513,1.564,514,3.302,515,1.338,516,1.564,517,2.121,518,1.564,519,1.564,520,1.564,521,2.605,522,1.564,523,1.564,524,1.564,525,1.564,526,1.564,527,1.19,528,1.19,529,1.338,530,2.291,531,2.749,532,2.545,533,3.906,534,3.566,535,3.906,536,1.338,537,0.854,538,1.564,539,1.564,540,1.564,541,1.564,542,2.605,543,1.564,544,2.605,545,3.906,546,2.605,547,1.983,548,2.605,549,2.23,550,2.23,551,2.605,552,2.605,553,2.605,554,2.23,555,2.972,556,3.343,557,2.23,558,2.605,559,1.983,560,1.983,561,2.605,562,3.906,563,2.605,564,2.605,565,2.605,566,2.605,567,1.564,568,1.338,569,2.972,570,1.338,571,2.23,572,1.19,573,2.866,574,2.216,575,2.696,576,3.961,577,1.079,578,1.079,579,1.564,580,1.338,581,2.545,582,1.564,583,1.564,584,1.564,585,3.714,586,1.564,587,2.121,588,1.564,589,1.564,590,2.605,591,3.343,592,2.866,593,1.564,594,1.338,595,1.564,596,2.696,597,2.605,598,1.798,599,1.564,600,1.564,601,1.564,602,1.338,603,1.564,604,4.969,605,2.605,606,2.605,607,1.564,608,3.348,609,2.23,610,1.338,611,1.564,612,2.605,613,1.564,614,1.65,615,1.19,616,1.19,617,2.866,618,1.19,619,1.338,620,1.338,621,1.338,622,1.564,623,0.991,624,1.564,625,1.338,626,1.564,627,1.079,628,1.338,629,1.19,630,1.564,631,1.19,632,1.564,633,1.564,634,0.991,635,1.564,636,2.866,637,1.564,638,1.338,639,1.564,640,1.564,641,1.564]],["title/interfaces/SzEntityDetailSectionData.html",[642,1.571,643,3.161]],["body/interfaces/SzEntityDetailSectionData.html",[3,0.338,5,0.191,45,0.02,48,0.863,56,0.475,118,0.012,119,0.015,120,0.012,125,0.307,126,0.693,134,1.056,135,2.298,194,3.621,215,3.279,320,1.657,502,2.379,643,3.729,644,1.657,645,3.315,646,3.007,647,6.174,648,5.284,649,6.174,650,4.698,651,4.698,652,6.174,653,6.174,654,6.174,655,6.174,656,6.174,657,6.174,658,4.698,659,6.174,660,6.174,661,6.174,662,4.785,663,5.591]],["title/interfaces/SzEntityDetailSectionSummary.html",[642,1.571,664,3.161]],["body/interfaces/SzEntityDetailSectionSummary.html",[3,0.428,5,0.243,45,0.019,56,0.411,118,0.015,119,0.018,120,0.015,125,0.389,126,0.802,134,0.914,135,2.093,320,2.1,502,3.016,644,2.1,645,4.202,646,3.811,664,4.726,665,4.022,666,5.87]],["title/components/SzEntityRecordViewerComponent.html",[20,1.77,249,1.134]],["body/components/SzEntityRecordViewerComponent.html",[3,0.197,5,0.111,7,0.43,10,1.176,16,1.296,17,1.296,18,1.386,19,1.217,20,2.211,21,1.296,22,1.296,23,1.296,24,1.386,25,1.296,26,1.296,41,0.858,45,0.021,46,0.905,48,0.508,51,0.923,54,0.612,55,0.726,56,0.351,60,0.568,68,1.63,108,1.488,113,3.189,114,1.296,117,1.386,118,0.007,119,0.01,120,0.013,122,0.822,125,0.179,126,0.475,134,0.652,143,0.779,152,1.005,178,1.379,179,0.905,196,1.488,201,2.153,222,1.522,223,1.17,226,2.426,232,1.296,249,1.417,250,1.217,252,1.145,265,1.488,266,3.632,267,1.488,269,1.488,282,1.608,283,3.718,284,4.376,285,4.376,289,3.383,290,1.608,294,3.255,295,3.528,297,1.956,298,2.426,299,3.278,301,1.386,307,2.356,309,2.705,310,3.183,313,3.164,314,1.488,317,1.488,318,1.488,319,1.488,320,0.965,321,1.457,322,1.488,323,3.066,324,1.488,325,1.488,326,1.488,327,1.28,328,1.488,329,1.488,330,1.488,331,1.488,332,1.488,333,1.488,351,2.426,360,1.145,374,1.854,375,1.386,511,1.386,528,1.931,530,2.246,550,3.278,569,2.915,570,2.172,571,2.172,572,2.915,573,2.172,575,3.806,576,3.51,580,3.278,581,2.705,587,2.922,631,1.931,634,3.255,636,3.278,662,3.278,667,2.538,668,2.538,669,1.608,670,2.538,671,1.752,672,2.538,673,2.538,674,1.752,675,2.538,676,2.172,677,2.538,678,2.538,679,2.538,680,2.538,681,2.538,682,4.196,683,3.83,684,2.538,685,5.514,686,3.83,687,3.83,688,5.137,689,3.83,690,3.83,691,3.83,692,3.83,693,2.538,694,4.196,695,2.538,696,2.538,697,2.915,698,2.915,699,2.538,700,2.172,701,2.538,702,2.538,703,4.995,704,2.643,705,4.397,706,2.538,707,1.608,708,2.538,709,2.538,710,2.172,711,2.172,712,2.172,713,2.538,714,2.172,715,2.538,716,2.538,717,3.83,718,2.538,719,4.397,720,2.538,721,3.83,722,2.538,723,3.91,724,4.397,725,3.83,726,2.538,727,2.172,728,2.538,729,2.538,730,2.538,731,3.83,732,3.948,733,2.538,734,3.278,735,2.538,736,3.83,737,2.538,738,2.538,739,2.172]],["title/interfaces/SzEntitySearchParams.html",[642,1.571,740,1.77]],["body/interfaces/SzEntitySearchParams.html",[3,0.256,5,0.145,7,0.56,45,0.02,48,1.011,54,0.528,56,0.475,118,0.009,119,0.013,120,0.009,125,0.233,126,0.576,134,1.078,257,1.491,327,0.823,362,1.937,644,1.256,645,2.514,740,1.584,741,3.304,742,2.093,743,2.828,744,4.593,745,5.366,746,4.593,747,4.593,748,4.593,749,5.366,750,5.366,751,4.593,752,4.593,753,4.593,754,4.084,755,4.593,756,3.703,757,5.366,758,5.366,759,4.593,760,5.366,761,5.366,762,5.366,763,5.366,764,5.366,765,5.366,766,5.366,767,5.366,768,5.366,769,5.366,770,5.366,771,5.366,772,5.366,773,4.593]],["title/injectables/SzEntityTypesService.html",[34,2.549,136,1.571]],["body/injectables/SzEntityTypesService.html",[3,0.373,5,0.211,7,0.815,11,1.932,14,4.092,34,3.316,41,1.332,45,0.02,48,0.788,51,1.16,54,0.951,55,0.841,56,0.411,59,2.818,60,1.076,63,3.316,118,0.013,119,0.016,120,0.013,125,0.339,134,0.954,137,2.168,138,1.64,152,1.855,179,1.135,189,4.092,201,2.185,211,5.09,221,3.788,227,3.657,255,2.045,257,2.168,421,3.657,422,3.316,423,2.818,424,4.113,425,3.768,426,4.113,427,4.113,431,4.113,432,4.092,774,4.805,775,5.947,776,6.458,777,6.458,778,4.805,779,5.947]],["title/classes/SzFolio.html",[100,0.702,780,2.34]],["body/classes/SzFolio.html",[3,0.373,5,0.212,7,0.817,11,2.599,41,1.448,45,0.02,46,1.407,48,0.789,51,1.07,54,0.952,55,0.981,56,0.411,100,0.916,118,0.013,119,0.016,120,0.013,122,1.559,125,0.339,126,0.802,134,0.681,152,1.856,222,1.264,223,1.022,574,3.042,780,3.051,781,2.824,782,4.279,783,4.122,784,4.816,785,3.324,786,4.122,787,3.861,788,3.665,789,4.397,790,3.492,791,3.791,792,3.665,793,2.46,794,3.665,795,3.665,796,3.665]],["title/classes/SzFolioItem.html",[100,0.702,787,2.017]],["body/classes/SzFolioItem.html",[3,0.397,5,0.225,7,0.869,45,0.019,46,1.211,48,0.68,51,0.921,54,0.82,55,0.976,56,0.394,100,0.975,118,0.014,119,0.017,120,0.014,122,1.66,125,0.361,126,0.767,134,0.725,143,2.17,178,2.228,223,1.088,574,3.525,781,3.006,787,3.379,790,4.143,793,3.525,797,4.763,798,5.126,799,4.708,800,4.388,801,4.388]],["title/injectables/SzFoliosService.html",[35,2.549,136,1.571]],["body/injectables/SzFoliosService.html",[3,0.337,5,0.191,7,0.737,11,1.748,35,3,37,2.376,38,4.257,41,1.251,45,0.02,46,1.319,48,0.818,51,1.108,54,0.986,55,0.872,56,0.428,60,0.974,87,3,110,2.55,118,0.012,119,0.015,120,0.012,125,0.306,126,0.692,137,1.962,138,1.484,143,1.335,152,1.863,178,2.011,179,1.027,189,2.754,222,1.466,223,1.309,327,1.677,336,2.221,410,2.957,421,3.309,490,3.721,581,2.55,627,3,697,3.309,714,3.721,782,2.754,802,4.348,803,3.721,804,3.721,805,6.168,806,4.123,807,4.265,808,5.583,809,6.508,810,5.583,811,5.583,812,4.348,813,4.249,814,3.721,815,2.55,816,4.348,817,3.721,818,4.348,819,4.348,820,4.348,821,3.309,822,4.348,823,4.779,824,5.583,825,4.249,826,2.754,827,4.348]],["title/classes/SzGraphPrefs.html",[100,0.702,828,2.549]],["body/classes/SzGraphPrefs.html",[3,0.184,5,0.104,7,0.403,37,1.55,41,0.816,45,0.02,46,1.548,48,0.869,51,1.284,54,1.048,55,0.926,56,0.431,60,0.532,64,1.595,68,1.55,73,3.146,100,0.452,111,1.179,118,0.006,119,0.01,120,0.006,122,0.769,125,0.167,126,0.549,134,0.799,135,2.091,138,0.811,139,2.262,141,0.956,152,1.667,178,1.312,179,0.86,192,2.404,201,2.121,206,1.505,209,3.146,219,1.808,222,1.303,223,1.478,224,1.072,231,1.393,232,1.213,237,1.989,238,1.393,240,1.746,245,1.639,276,2.38,279,2.735,295,1.989,321,2.149,374,2.744,375,1.989,390,1.072,410,2.123,442,3.117,444,1.393,450,3.117,467,3.37,470,3.37,471,3.791,472,3.791,473,3.791,474,3.791,486,3.117,495,1.808,517,1.505,530,3.313,531,2.307,532,2.597,549,3.117,554,3.117,555,3.779,556,3.117,557,4.25,559,2.771,560,2.771,698,2.549,703,2.771,719,3.117,734,3.117,828,1.639,829,1.393,830,2.307,831,1.505,832,1.393,833,1.393,834,1.808,835,1.213,836,1.505,837,2.375,838,2.375,839,2.375,840,2.375,841,1.808,842,3.695,843,2.513,844,2.307,845,2.136,846,2.597,847,2.806,848,3.791,849,4.429,850,4.429,851,4.429,852,4.429,853,3.427,854,2.597,855,2.375,856,2.375,857,3.641,858,2.375,859,2.375,860,2.033,861,2.375,862,2.375,863,2.513,864,3.056,865,1.86,866,2.307,867,2.307,868,1.639,869,2.597,870,1.639,871,1.505,872,1.639,873,1.505,874,1.639,875,1.505,876,1.393,877,1.505,878,1.213,879,1.505,880,1.213,881,1.989,882,1.639,883,1.505,884,1.393,885,2.033,886,4.965,887,2.033,888,2.375,889,3.641,890,3.641,891,2.375,892,2.375,893,3.117,894,3.427,895,4.965,896,3.779,897,2.375,898,2.375,899,3.641,900,4.25,901,2.375,902,2.375,903,3.641,904,2.307,905,3.641,906,2.771,907,2.375,908,2.375,909,3.641,910,2.375,911,2.375,912,2.375,913,2.375,914,4.965,915,2.375,916,2.375,917,2.375,918,2.375,919,3.641,920,3.641,921,3.641,922,3.117,923,2.375,924,2.375,925,3.641,926,2.375]],["title/interfaces/SzMatchFields.html",[642,1.571,927,3.161]],["body/interfaces/SzMatchFields.html",[3,0.429,5,0.243,45,0.019,56,0.412,118,0.015,119,0.018,120,0.015,125,0.39,126,0.803,134,1,644,2.106,927,4.739,928,3.821,929,5.536,930,5.536,931,6.865,932,6.865]],["title/interfaces/SzNetworkGraphInputs.html",[642,1.571,933,3.161]],["body/interfaces/SzNetworkGraphInputs.html",[3,0.434,5,0.246,45,0.019,56,0.356,118,0.015,119,0.018,120,0.015,125,0.394,126,0.808,143,2.117,321,2.128,374,2.619,477,5.901,644,2.128,933,4.788,934,5.594,935,5.594]],["title/injectables/SzPdfUtilService.html",[36,2.81,136,1.571]],["body/injectables/SzPdfUtilService.html",[3,0.355,5,0.201,7,0.777,10,1.407,36,3.485,41,1.293,45,0.02,46,1.082,48,0.838,51,1.037,54,1.01,55,0.893,56,0.402,59,2.686,60,1.026,118,0.016,119,0.016,120,0.012,125,0.323,134,0.816,135,1.868,137,2.066,138,1.563,143,1.407,152,1.742,179,1.082,208,3.384,217,3.161,222,1.515,223,1.225,327,1.141,336,2.339,432,4.203,629,3.485,740,2.767,894,3.983,936,5.678,937,4.579,938,4.579,939,3.485,940,4.579,941,3.92,942,5.771,943,5.771,944,3.485,945,4.809,946,5.678,947,4.579,948,3.656,949,5.771,950,5.771,951,5.771,952,3.485,953,4.579,954,6.319,955,4.94,956,3.92,957,4.579,958,4.579,959,4.579,960,4.579]],["title/components/SzPoweredByComponent.html",[21,1.886,249,1.134]],["body/components/SzPoweredByComponent.html",[3,0.31,5,0.175,7,0.677,8,2.341,10,1.622,16,2.039,17,2.039,18,2.18,19,1.914,20,1.914,21,3.023,22,2.039,23,2.039,24,2.18,25,2.039,26,2.039,41,1.183,45,0.02,46,0.943,51,0.717,55,0.747,60,0.894,102,3.038,113,3.309,114,3.637,117,2.18,118,0.011,119,0.014,120,0.011,125,0.281,141,1.048,149,3.645,179,1.248,201,1.916,222,1.048,223,0.847,249,1.226,250,1.914,252,2.383,257,1.801,263,2.755,264,2.755,265,2.341,266,3.946,267,2.341,269,2.341,274,4.085,282,2.529,289,2.18,290,2.529,297,2.039,301,2.884,302,2.529,305,4.085,308,2.755,313,3.217,314,2.341,317,2.341,318,2.341,319,2.341,320,1.518,321,2.009,322,2.341,323,1.801,324,2.341,325,2.341,326,2.341,327,1.315,328,2.341,329,2.341,330,2.341,331,2.341,332,2.341,333,2.341,351,3.346,425,2.529,587,2.529,591,3.417,594,4.52,598,2.755,615,4.504,616,4.019,623,2.529,634,2.529,789,2.529,961,3.992,962,3.992,963,3.992,964,3.038,965,3.992,966,3.417,967,3.417,968,5.281,969,3.992,970,3.992,971,3.417,972,3.038,973,3.992,974,5.281,975,3.992,976,3.038]],["title/injectables/SzPrefsService.html",[37,1.571,136,1.571]],["body/injectables/SzPrefsService.html",[3,0.229,5,0.13,7,0.501,37,2.689,41,0.96,45,0.021,46,1.012,48,0.888,50,1.871,51,0.994,53,4.053,54,0.685,55,0.606,56,0.402,60,1.316,61,2.038,64,2.115,68,1.257,74,1.732,91,2.34,100,0.562,106,2.038,111,1.632,118,0.008,119,0.012,120,0.008,125,0.208,126,0.531,134,0.782,137,1.333,138,1.008,139,2.825,143,0.907,147,2.248,152,1.877,179,1.012,192,1.257,201,0.956,212,2.715,220,2.34,222,1.699,223,1.374,237,1.613,249,1.316,255,1.257,276,1.416,320,1.63,321,2.104,336,1.509,341,2.513,360,1.333,378,2.513,390,1.933,398,2.248,410,3.213,439,3.261,444,1.732,502,2.34,517,1.871,560,2.248,698,2.496,828,3.48,829,1.732,831,1.871,832,2.513,844,3.195,845,2.513,846,2.957,847,3.195,871,3.195,873,1.871,875,1.871,876,2.513,877,1.871,878,1.509,879,1.871,880,1.509,881,3.021,883,1.871,884,2.513,976,2.248,977,2.954,978,4.285,979,2.528,980,2.954,981,2.528,982,4.285,983,2.954,984,1.871,985,2.954,986,2.528,987,2.954,988,2.954,989,2.954,990,2.528,991,2.954,992,2.954,993,2.954,994,2.528,995,3.667,996,4.285,997,4.285,998,6.125,999,5.042,1000,4.662,1001,2.954,1002,4.285,1003,4.285,1004,4.285,1005,5.531,1006,4.285,1007,4.285,1008,4.285,1009,5.531,1010,5.531,1011,2.954,1012,4.285,1013,2.954,1014,2.954,1015,4.285,1016,2.954,1017,3.667,1018,3.667,1019,3.261,1020,4.285,1021,4.285,1022,2.954,1023,2.954,1024,2.528,1025,2.954,1026,2.954,1027,2.954,1028,4.285,1029,2.954,1030,2.954,1031,2.954,1032,4.316,1033,2.528,1034,3.48,1035,3.48]],["title/interfaces/SzRawData.html",[642,1.571,1036,3.161]],["body/interfaces/SzRawData.html",[3,0.265,5,0.15,45,0.02,48,1,56,0.476,118,0.009,119,0.013,120,0.009,125,0.241,126,0.589,134,1.079,135,1.911,644,1.298,646,2.356,744,4.675,746,4.675,747,4.675,748,4.675,751,4.675,752,4.675,753,4.675,754,4.156,755,4.675,759,4.675,773,4.675,928,2.356,1036,2.922,1037,2.922,1038,5.461,1039,5.461,1040,5.461,1041,5.461,1042,5.461,1043,5.461,1044,5.461,1045,5.461,1046,5.461,1047,5.461,1048,5.461,1049,5.461,1050,5.461,1051,5.461,1052,4.675,1053,5.461,1054,5.461,1055,5.461,1056,5.461,1057,5.461]],["title/interfaces/SzRawDataMatches.html",[642,1.571,1058,2.81]],["body/interfaces/SzRawDataMatches.html",[3,0.428,5,0.243,45,0.019,56,0.411,118,0.015,119,0.018,120,0.015,125,0.389,126,0.802,134,1,143,1.696,644,2.1,754,5.219,928,3.811,1037,4.726,1052,5.87,1058,4.202,1059,5.522]],["title/classes/SzSdkPrefsBase.html",[100,0.702,836,2.34]],["body/classes/SzSdkPrefsBase.html",[3,0.329,5,0.186,7,0.72,41,1.366,45,0.02,46,1.003,48,0.563,51,1.096,54,0.679,55,0.6,56,0.41,64,1.529,68,1.806,100,0.807,111,1.974,118,0.012,119,0.015,120,0.012,122,1.374,125,0.299,126,0.756,134,0.912,138,1.449,139,2.808,141,1.114,152,1.889,192,2.595,222,1.601,223,1.453,224,1.915,231,2.489,232,2.168,237,2.318,238,2.489,240,2.035,255,1.806,276,2.923,279,2.168,374,1.706,390,1.915,444,2.489,532,3.224,698,2.91,783,3.633,785,2.929,828,2.929,829,2.489,831,2.689,836,2.689,842,4.208,843,3.794,844,3.483,845,3.224,846,3.576,847,3.863,853,2.929,863,2.929,864,3.794,865,2.168,866,2.689,867,2.689,868,2.929,869,2.489,870,2.929,871,2.689,872,2.929,873,2.689,874,2.929,875,2.689,876,2.489,877,2.689,878,2.168,879,2.689,880,2.168,881,3.002,882,2.929,883,2.689,884,2.489,1032,3.633,1034,2.929,1035,2.929,1060,3.633,1061,4.244]],["title/interfaces/SzSdkPrefsModel.html",[642,1.571,1000,2.81]],["body/interfaces/SzSdkPrefsModel.html",[3,0.406,5,0.23,7,0.888,45,0.02,48,0.974,56,0.442,118,0.014,119,0.017,120,0.014,125,0.369,126,0.777,138,1.788,141,1.375,321,2.551,410,2.512,581,3.072,627,3.616,644,1.992,742,3.319,829,3.072,869,3.072,1000,3.987,1017,5.741,1018,5.741,1019,5.105,1060,4.484,1062,5.239]],["title/interfaces/SzSearchEvent.html",[642,1.571,813,2.81]],["body/interfaces/SzSearchEvent.html",[3,0.43,5,0.244,45,0.019,56,0.413,118,0.015,119,0.018,120,0.019,125,0.391,126,0.804,138,1.895,407,5.23,644,2.111,740,3.11,813,4.224,948,4.109,1063,4.751]],["title/classes/SzSearchFormPrefs.html",[100,0.702,1034,2.549]],["body/classes/SzSearchFormPrefs.html",[3,0.227,5,0.128,7,0.495,37,1.809,41,0.952,45,0.02,46,1.488,47,2.501,48,0.835,51,1.252,54,1.007,55,0.89,56,0.425,60,0.654,64,1.052,68,1.243,100,0.808,111,1.376,118,0.008,119,0.012,120,0.008,122,0.946,125,0.206,126,0.621,134,0.89,135,1.622,138,0.997,139,1.492,141,1.116,152,1.798,178,1.531,179,1.004,192,2.342,206,1.851,208,1.713,221,2.493,222,1.445,223,1.453,224,1.318,226,3.866,231,1.713,232,1.492,238,1.713,240,2.038,276,2.638,279,1.492,327,1.52,374,2.212,375,2.321,390,1.318,401,2.223,410,2.803,444,1.713,511,3.005,517,1.851,530,2.493,532,2.939,534,4.644,698,2.842,756,3.798,782,1.851,793,1.492,806,3.866,807,2.693,815,1.713,826,1.851,829,1.713,830,2.693,831,1.851,832,1.713,833,1.713,834,2.223,835,1.492,836,1.851,841,2.223,842,4.036,843,2.934,844,2.693,845,3.429,846,2.939,847,3.175,853,2.016,863,2.934,864,3.458,865,2.171,866,2.693,867,2.693,868,2.016,869,1.713,870,2.016,871,1.851,872,2.016,873,1.851,874,2.016,875,2.693,876,1.713,877,1.851,878,1.492,879,1.851,880,1.492,881,2.321,882,2.016,883,1.851,884,1.713,984,1.851,1034,2.016,1064,2.921,1065,2.921,1066,2.501,1067,2.223,1068,5.011,1069,5.011,1070,5.011,1071,5.011,1072,5.011,1073,2.921,1074,2.921,1075,3.814,1076,2.921,1077,1.851,1078,2.223,1079,2.921,1080,2.223,1081,2.501,1082,2.921,1083,2.921,1084,2.501,1085,2.921,1086,4.251,1087,3.638,1088,4.251,1089,2.921,1090,2.921,1091,4.251,1092,3.638,1093,4.251,1094,2.921,1095,2.921,1096,5.503,1097,2.921,1098,2.921,1099,2.921,1100,2.921,1101,4.251,1102,4.251,1103,2.921]],["title/classes/SzSearchHistoryFolio.html",[100,0.702,826,2.34]],["body/classes/SzSearchHistoryFolio.html",[3,0.213,5,0.121,7,0.466,11,2.604,14,1.742,41,0.911,42,2.806,45,0.02,46,1.348,48,0.886,51,1.257,54,1.081,55,1.018,56,0.456,59,2.384,60,0.616,64,0.99,68,1.17,100,0.773,111,1.566,118,0.007,119,0.011,120,0.007,122,0.89,125,0.287,126,0.6,134,0.756,135,1.933,141,1.27,143,0.844,152,1.913,178,1.464,179,0.65,215,2.837,222,1.568,223,1.268,226,1.742,327,1.58,374,2.149,375,1.501,390,1.24,391,2.353,494,1.612,496,2.353,537,2.22,574,3.366,581,1.612,585,3.48,698,1.834,742,3.387,780,1.742,781,1.612,782,3.784,787,3.599,789,4.485,790,3.135,791,3.502,792,3.094,793,3.05,794,3.682,795,3.094,796,4.341,804,2.353,806,3.065,807,3.915,814,4.141,815,1.612,821,2.092,826,2.576,832,1.612,835,1.404,845,2.384,846,3.135,878,1.404,884,1.612,906,2.092,984,1.742,1033,2.353,1075,2.092,1087,2.353,1104,2.749,1105,2.749,1106,2.749,1107,4.066,1108,4.066,1109,4.066,1110,4.066,1111,4.066,1112,2.353,1113,4.759,1114,2.749,1115,2.749,1116,2.749,1117,2.353,1118,3.48,1119,2.353,1120,2.353,1121,2.749,1122,1.897,1123,2.749,1124,2.749,1125,2.749,1126,1.612,1127,4.066,1128,2.749,1129,2.749,1130,2.749,1131,2.749,1132,2.749,1133,1.897,1134,2.749,1135,1.897,1136,2.749,1137,2.353,1138,2.353,1139,2.092,1140,2.749,1141,2.749,1142,2.749,1143,2.749,1144,2.749,1145,2.749,1146,2.353]],["title/classes/SzSearchHistoryFolioItem.html",[100,0.702,1113,2.549]],["body/classes/SzSearchHistoryFolioItem.html",[3,0.367,5,0.208,7,0.802,45,0.019,48,0.627,54,0.756,55,1.046,56,0.439,60,1.06,100,0.899,111,1.532,118,0.013,119,0.016,120,0.013,122,1.532,125,0.333,126,0.73,134,0.907,141,1.546,143,1.97,178,2.121,179,1.118,196,2.774,327,1.178,574,3.596,669,2.997,740,3.075,781,2.774,790,4.232,793,3.596,797,4.065,799,5.357,807,2.997,835,3.008,984,2.997,1113,3.265,1126,3.454,1147,4.049,1148,4.049,1149,4.731]],["title/classes/SzSearchParamsFolio.html",[100,0.702,815,2.166]],["body/classes/SzSearchParamsFolio.html",[3,0.356,5,0.202,7,0.778,11,2.543,41,1.294,45,0.02,46,1.365,48,0.838,51,1.038,54,1.011,55,1.023,56,0.444,59,2.691,60,1.028,111,1.486,118,0.013,119,0.016,120,0.013,122,1.486,125,0.323,126,0.717,134,0.817,152,1.834,179,1.084,222,1.205,223,0.974,327,1.439,537,2.506,574,2.952,780,2.908,781,2.691,782,4.007,787,3.737,789,4.493,790,3.389,791,3.709,792,3.493,793,2.952,794,3.493,795,3.493,796,3.493,797,3.167,806,2.908,815,2.691,835,2.344,906,3.493,1112,3.928,1126,3.709]],["title/classes/SzSearchParamsFolioItem.html",[100,0.702,1126,2.166]],["body/classes/SzSearchParamsFolioItem.html",[3,0.374,5,0.212,7,0.819,45,0.02,46,1.14,48,0.79,51,0.867,54,1.081,55,1.024,56,0.43,60,1.081,82,3.673,111,2.095,118,0.013,119,0.016,120,0.013,122,1.563,125,0.34,126,0.739,134,0.843,141,1.267,143,2.076,178,2.148,179,1.14,223,1.024,327,1.485,574,3.453,669,3.058,740,3.103,781,2.831,787,2.636,790,3.964,793,3.453,797,4.116,799,5.144,800,4.131,801,4.131,835,2.465,984,3.058,1126,2.831,1148,4.131]],["title/interfaces/SzSearchResultEntityData.html",[642,1.571,1150,3.161]],["body/interfaces/SzSearchResultEntityData.html",[3,0.303,5,0.172,45,0.02,48,1.006,56,0.476,118,0.014,119,0.014,120,0.011,125,0.275,126,0.645,134,1.018,135,2.021,201,1.264,327,0.973,644,1.485,646,2.695,648,5.01,650,4.455,928,2.695,1058,3.961,1150,3.342,1151,3.342,1152,5.854,1153,5.854,1154,5.854,1155,5.854,1156,5.01,1157,5.854,1158,5.854,1159,5.854,1160,5.854,1161,5.854,1162,5.854,1163,5.01,1164,5.854,1165,5.854,1166,5.854,1167,5.854,1168,5.854,1169,5.854,1170,5.854,1171,5.854,1172,5.854,1173,5.204,1174,5.204]],["title/components/SzSearchResultsComponent.html",[25,1.886,249,1.134]],["body/components/SzSearchResultsComponent.html",[3,0.15,5,0.085,7,0.328,10,0.951,16,0.987,17,0.987,18,1.055,19,0.926,20,0.926,21,0.987,22,0.987,23,0.987,24,2.117,25,2.265,26,0.987,37,1.318,41,0.694,45,0.02,46,1.147,48,0.588,51,1.118,54,0.977,55,0.825,56,0.381,60,0.433,64,0.696,68,0.822,85,1.471,91,1.055,107,1.654,113,3.277,114,0.987,117,1.055,118,0.013,119,0.008,120,0.02,125,0.136,126,0.384,135,1.255,141,1.274,143,0.951,152,1.634,171,2.95,178,1.116,179,0.457,194,1.133,196,3.191,201,1.255,212,1.962,215,1.133,220,2.117,222,0.813,223,1.099,224,0.872,240,0.926,243,1.471,244,1.471,245,1.334,246,1.471,249,1.491,250,0.926,252,0.872,255,0.822,256,1.471,263,1.334,264,1.334,265,1.133,266,3.4,267,1.133,269,1.133,274,2.675,282,1.224,289,3.088,291,4.99,294,4.006,295,3.743,297,3.056,298,2.456,301,2.117,305,2.675,307,1.582,309,3.037,313,3.52,314,1.133,317,1.133,318,1.133,319,1.133,320,0.735,321,1.178,322,1.133,323,0.872,324,1.133,325,1.133,326,1.133,327,1.82,328,1.133,329,1.133,330,1.133,331,1.133,332,1.133,333,1.133,348,2.357,351,1.962,356,2.357,372,2.357,374,0.777,393,1.471,410,1.485,446,1.654,460,3.318,476,2.651,492,2.357,493,2.651,500,2.651,502,1.692,503,1.654,511,2.828,512,1.654,514,1.471,531,2.809,537,1.692,559,1.471,574,0.987,575,1.334,578,1.334,596,3.349,598,2.675,614,1.962,615,2.95,616,3.375,620,1.654,621,1.654,623,3.075,634,1.962,665,1.133,666,3.318,669,1.962,697,1.471,705,1.654,727,2.651,740,1.485,789,2.809,830,3.075,866,1.224,946,3.318,948,3.582,971,2.651,995,1.654,1019,2.357,1067,1.471,1122,2.675,1151,1.654,1156,2.651,1163,2.651,1175,1.932,1176,1.932,1177,1.932,1178,1.471,1179,1.654,1180,1.932,1181,1.932,1182,3.318,1183,1.932,1184,1.932,1185,3.098,1186,1.932,1187,3.098,1188,3.098,1189,3.098,1190,3.098,1191,3.098,1192,3.877,1193,4.652,1194,3.098,1195,3.098,1196,4.434,1197,1.932,1198,3.098,1199,2.138,1200,1.932,1201,1.932,1202,1.654,1203,1.932,1204,3.098,1205,1.654,1206,1.471,1207,1.654,1208,1.932,1209,1.654,1210,1.932,1211,1.932,1212,1.932,1213,1.932,1214,1.932,1215,1.932,1216,1.932,1217,1.932,1218,2.651,1219,3.098,1220,1.932,1221,3.098,1222,3.098,1223,3.098,1224,3.098,1225,1.932,1226,2.651,1227,1.932,1228,1.932,1229,1.932,1230,2.651,1231,2.651,1232,1.932,1233,1.932,1234,2.651,1235,1.932,1236,1.932,1237,2.651,1238,1.932,1239,2.651,1240,1.932,1241,2.651,1242,1.932,1243,1.654,1244,1.932,1245,1.932,1246,1.932,1247,1.932,1248,1.932,1249,1.932,1250,1.932,1251,1.932,1252,1.932,1253,1.932]],["title/classes/SzSearchResultsPrefs.html",[100,0.702,1035,2.549]],["body/classes/SzSearchResultsPrefs.html",[3,0.18,5,0.102,7,0.394,37,1.524,41,0.802,45,0.02,46,1.54,48,0.864,51,1.281,54,1.042,55,0.922,56,0.432,60,0.52,64,1.573,68,1.524,73,2.269,100,0.442,111,1.159,118,0.012,119,0.01,120,0.019,122,0.752,125,0.164,126,0.542,134,0.694,135,2.111,138,0.793,139,1.187,141,0.94,143,2.003,144,2.725,152,1.657,178,1.29,179,0.846,192,2.089,195,4.159,201,1.159,206,1.472,222,1.289,223,1.454,224,1.048,231,1.363,232,1.187,238,1.363,240,1.717,249,1.1,276,2.353,279,1.187,320,1.362,321,1.867,323,1.616,327,1.755,374,2.833,390,1.048,410,2.094,444,1.363,485,2.725,517,1.472,530,3.702,532,2.562,658,2.725,698,2.527,703,2.725,732,4.201,756,2.471,829,1.363,830,2.269,831,1.472,832,1.363,833,1.363,834,1.768,835,1.187,836,1.472,841,1.768,842,3.659,843,2.471,844,2.269,845,2.1,846,2.562,847,2.768,848,3.739,853,1.604,863,2.471,864,3.015,865,1.829,866,2.269,867,2.269,868,1.604,869,1.363,870,1.604,871,1.472,872,1.604,873,1.472,874,1.604,875,1.472,876,1.363,877,1.472,878,1.187,879,1.472,880,1.187,881,1.955,882,1.604,883,1.472,884,1.363,885,1.989,887,1.989,952,3.735,1035,1.604,1066,1.989,1067,1.768,1202,3.065,1254,2.324,1255,2.324,1256,1.989,1257,2.324,1258,1.768,1259,4.368,1260,4.368,1261,4.368,1262,4.368,1263,4.368,1264,4.368,1265,4.368,1266,4.368,1267,4.368,1268,4.368,1269,2.324,1270,2.324,1271,2.324,1272,2.324,1273,2.324,1274,3.581,1275,3.581,1276,3.581,1277,2.324,1278,2.324,1279,3.581,1280,6.025,1281,2.324,1282,2.324,1283,6.025,1284,6.025,1285,5.157,1286,6.025,1287,2.324,1288,2.324,1289,2.324,1290,2.324,1291,2.324,1292,2.324,1293,4.201,1294,2.324,1295,2.324,1296,3.581,1297,3.581,1298,2.324,1299,2.324,1300,2.324]],["title/injectables/SzSearchService.html",[38,2.549,136,1.571]],["body/injectables/SzSearchService.html",[3,0.277,5,0.157,38,2.466,41,1.098,45,0.02,46,1.322,48,0.864,51,1.253,54,1.067,55,0.921,56,0.414,64,2.015,111,1.587,118,0.01,119,0.013,120,0.017,125,0.252,126,0.608,134,0.693,135,1.949,137,1.612,138,1.22,143,1.097,152,1.959,179,0.844,189,3.997,194,2.095,220,3.288,221,2.095,222,1.656,223,1.416,224,2.524,226,3.105,232,2.504,323,1.612,327,1.717,357,4.195,397,2.719,407,2.719,432,3.814,498,2.264,511,1.951,529,3.058,536,3.058,537,1.951,650,3.73,671,2.466,740,2.682,742,3.105,803,4.195,854,2.095,944,2.719,945,4.258,948,3.105,952,2.719,1063,3.058,1080,2.719,1209,4.788,1301,4.901,1302,4.901,1303,5.594,1304,5.594,1305,4.901,1306,4.901,1307,5.594,1308,5.594,1309,4.901,1310,4.901,1311,4.901,1312,3.573,1313,3.573,1314,6.02,1315,4.901,1316,3.573,1317,4.901,1318,4.788,1319,3.573,1320,3.573,1321,3.573,1322,3.573,1323,2.719,1324,3.573,1325,3.573]],["title/classes/SzServerError.html",[100,0.702,1326,3.161]],["body/classes/SzServerError.html",[3,0.358,5,0.203,41,1.3,42,4.957,45,0.02,48,0.882,51,1.196,54,1.064,55,0.941,56,0.464,118,0.013,119,0.016,120,0.013,122,1.495,125,0.326,126,0.72,134,0.941,320,2.207,374,1.857,498,3.676,506,3.676,671,4.004,700,4.966,1326,6.202,1327,4.619,1328,4.619,1329,5.802,1330,5.802,1331,5.802,1332,5.802,1333,5.802,1334,5.802,1335,3.953,1336,4.619,1337,4.619,1338,5.802,1339,4.619,1340,4.619]],["title/injectables/SzUIEventService.html",[39,2.81,136,1.571]],["body/injectables/SzUIEventService.html",[3,0.416,5,0.236,7,0.911,39,4.087,45,0.018,48,0.712,54,0.858,55,0.759,56,0.342,60,1.203,110,3.149,118,0.015,119,0.017,120,0.015,137,2.423,138,1.833,141,1.41,179,1.269,237,2.933,249,1.649,255,2.285,389,4.596,432,4.44,439,4.087,577,3.706,627,3.706,881,2.933,944,4.087,945,5.158,1084,4.596,1341,5.37,1342,5.37,1343,5.37,1344,5.37]],["title/changelog.html",[904,1.962,1345,2.138,1346,2.651]],["body/changelog.html",[5,0.101,8,1.351,9,2.086,10,1.894,11,1.43,19,1.104,20,1.104,22,1.817,23,1.177,26,1.177,30,2.707,31,1.59,33,1.351,35,1.59,37,0.98,45,0.012,53,1.59,55,0.822,56,0.147,64,2.464,74,1.351,84,2.707,86,1.972,100,0.438,103,1.59,106,3.372,108,1.351,109,1.753,111,0.746,113,2.974,118,0.006,119,0.01,120,0.018,121,1.59,122,0.746,126,0.286,133,1.59,139,1.817,141,0.605,143,0.708,149,2.455,192,1.514,201,1.407,205,1.59,206,1.46,209,1.46,216,1.972,222,0.934,229,1.972,237,1.942,240,1.705,249,1.934,252,1.039,257,2.383,259,1.753,276,1.104,283,2.086,295,3.281,297,1.817,298,2.254,307,1.177,320,1.353,321,2.535,323,1.039,327,1.745,336,2.219,337,1.753,345,1.46,360,1.039,362,2.865,378,1.351,398,1.753,422,1.59,425,1.46,467,1.753,470,1.753,494,1.351,506,2.254,510,1.972,514,1.753,515,1.972,528,1.753,530,1.351,537,1.942,568,1.972,577,3.372,596,2.455,609,1.972,610,1.972,614,1.46,625,1.972,628,1.972,642,0.98,651,1.753,658,1.753,665,1.351,669,1.46,671,2.455,682,2.707,694,3.307,698,1.605,707,2.753,711,1.972,712,3.045,723,1.753,756,1.59,780,2.254,787,1.942,788,1.753,791,2.086,793,1.177,806,1.46,807,1.46,815,2.086,821,1.753,826,1.46,833,1.351,835,2.496,854,1.351,865,1.177,869,1.351,894,2.455,900,3.045,936,3.045,941,1.972,955,1.972,956,1.972,986,3.045,1024,1.972,1075,2.707,1078,1.753,1092,1.972,1113,1.59,1119,1.972,1122,1.59,1126,2.086,1135,1.59,1138,3.045,1193,1.753,1206,1.753,1207,1.972,1239,1.972,1258,1.753,1293,1.972,1346,3.045,1347,2.304,1348,2.999,1349,2.304,1350,2.304,1351,2.304,1352,2.304,1353,2.304,1354,3.557,1355,2.304,1356,1.972,1357,5.895,1358,2.304,1359,2.304,1360,2.304,1361,3.557,1362,2.304,1363,2.304,1364,2.304,1365,2.304,1366,2.304,1367,2.304,1368,3.557,1369,2.304,1370,2.304,1371,2.304,1372,2.304,1373,2.304,1374,2.304,1375,2.304,1376,2.304,1377,3.045,1378,2.304,1379,5.581,1380,4.886,1381,2.304,1382,3.557,1383,5.818,1384,2.304,1385,4.182,1386,2.304,1387,3.557,1388,3.557,1389,1.753,1390,2.304,1391,2.304,1392,2.304,1393,2.304,1394,1.59,1395,2.304,1396,2.304,1397,2.304,1398,2.304,1399,2.304,1400,2.304,1401,2.304,1402,2.304,1403,3.557,1404,2.304,1405,3.045,1406,2.304,1407,2.304,1408,3.045,1409,2.304,1410,2.304,1411,2.304,1412,2.304,1413,2.304,1414,2.304,1415,2.707,1416,2.304,1417,1.753,1418,2.304,1419,1.972,1420,2.304,1421,2.304,1422,1.972,1423,1.972,1424,2.304,1425,2.304,1426,2.707,1427,2.304,1428,2.304,1429,3.557,1430,2.304,1431,2.304,1432,2.304,1433,2.304,1434,1.972,1435,2.304,1436,2.304,1437,2.304,1438,2.304,1439,2.304,1440,1.59,1441,2.304,1442,2.304,1443,2.304,1444,2.304,1445,2.304,1446,2.304,1447,2.304,1448,2.304,1449,2.304,1450,2.304,1451,2.304,1452,2.304,1453,2.304,1454,2.304,1455,2.304,1456,2.304,1457,2.304,1458,2.304,1459,3.557,1460,4.345,1461,2.304,1462,2.304,1463,2.304,1464,2.304,1465,2.304,1466,2.304,1467,2.304,1468,2.304,1469,3.557,1470,2.304,1471,1.972,1472,2.304,1473,3.045,1474,2.304,1475,2.304,1476,2.304,1477,2.304,1478,2.304,1479,2.304,1480,3.557,1481,2.304,1482,3.557,1483,5.281,1484,1.972,1485,2.304,1486,3.557,1487,2.304,1488,3.557,1489,2.304,1490,3.045,1491,2.999,1492,2.304,1493,3.557,1494,2.304,1495,2.304,1496,2.304,1497,2.304,1498,1.972,1499,1.972,1500,1.972,1501,1.972,1502,1.972,1503,2.304,1504,2.304,1505,3.557,1506,1.59,1507,2.304,1508,2.304,1509,2.304,1510,2.304,1511,2.304,1512,2.304,1513,1.753,1514,3.557,1515,2.304,1516,2.304,1517,2.304,1518,2.304,1519,3.557,1520,2.304,1521,2.304,1522,2.304,1523,2.304,1524,2.304,1525,1.972,1526,2.304,1527,1.972,1528,2.304,1529,1.972,1530,1.753,1531,2.304,1532,2.304,1533,2.304,1534,2.304,1535,2.304,1536,2.304,1537,2.304,1538,2.304,1539,2.304,1540,1.46,1541,1.753,1542,2.304,1543,1.753]],["title/contributing.html",[904,1.962,1345,2.138,1544,2.651]],["body/contributing.html",[5,0.15,8,1.999,10,1.047,45,0.018,61,4.281,71,2.594,74,1.999,103,2.352,111,1.103,118,0.009,119,0.013,120,0.009,135,1.103,141,0.895,208,3.46,341,1.999,360,2.141,364,4.281,392,2.917,397,5.193,401,2.594,423,1.999,492,3.61,506,3.93,527,2.594,651,2.594,860,2.917,865,3.014,939,4.49,964,2.594,1118,2.917,1120,2.917,1133,2.352,1146,2.917,1178,2.594,1285,4.671,1323,3.61,1348,3.766,1417,4.153,1419,5.639,1473,4.061,1506,3.766,1513,4.72,1540,2.16,1544,4.671,1545,3.409,1546,3.409,1547,4.671,1548,3.409,1549,2.917,1550,3.409,1551,3.006,1552,3.409,1553,3.409,1554,5.457,1555,3.409,1556,5.457,1557,3.409,1558,5.9,1559,3.409,1560,5.361,1561,6.202,1562,3.409,1563,4.744,1564,5.977,1565,3.409,1566,2.594,1567,4.671,1568,2.917,1569,3.409,1570,3.409,1571,3.409,1572,2.917,1573,2.917,1574,6.588,1575,5.9,1576,5.639,1577,3.409,1578,6.719,1579,2.917,1580,5.05,1581,3.409,1582,4.061,1583,4.061,1584,4.744,1585,2.917,1586,3.409,1587,3.409,1588,2.917,1589,2.917,1590,6.422,1591,3.409,1592,5.457,1593,3.409,1594,3.409,1595,4.744,1596,5.9,1597,4.061,1598,3.409,1599,3.409,1600,2.917,1601,3.409,1602,3.409,1603,5.457,1604,3.409,1605,3.409,1606,3.409,1607,3.409,1608,3.409,1609,3.409,1610,3.409,1611,3.409,1612,3.409,1613,3.409,1614,4.744,1615,3.409,1616,3.409,1617,3.409,1618,3.409,1619,3.409,1620,3.409,1621,4.744,1622,2.917,1623,3.409,1624,3.409,1625,2.917,1626,2.917,1627,3.409,1628,3.409,1629,3.409]],["title/dependencies.html",[1394,3.06,1491,2.138]],["body/dependencies.html",[10,1.453,45,0.021,80,3.265,81,3.265,93,4.482,94,4.482,96,3.6,118,0.013,119,0.016,120,0.013,134,0.669,257,2.135,321,1.799,362,2.774,366,3.6,682,3.6,698,2.657,723,3.6,922,4.049,981,4.049,1389,3.6,1394,3.265,1525,4.049,1630,4.731,1631,7.366,1632,4.731,1633,4.731,1634,4.731,1635,4.731,1636,4.731,1637,4.731,1638,4.731,1639,4.731,1640,4.049,1641,5.89,1642,4.731,1643,4.731,1644,4.731,1645,4.731,1646,3.6,1647,4.731,1648,4.731,1649,4.731,1650,4.731,1651,5.89,1652,4.731,1653,4.731,1654,4.731,1655,4.731,1656,4.731,1657,4.731,1658,4.731,1659,4.731,1660,4.731,1661,4.731]],["title/miscellaneous/enumerations.html",[1662,2.138,1663,3.795]],["body/miscellaneous/enumerations.html",[45,0.018,118,0.016,119,0.018,120,0.016,123,4.336,125,0.402,1582,4.877,1662,3.932,1663,4.877,1664,6.586,1665,5.698,1666,6.586,1667,5.698,1668,5.698,1669,5.698]],["title/miscellaneous/functions.html",[1662,2.138,1670,3.795]],["body/miscellaneous/functions.html",[45,0.019,48,0.726,51,0.985,54,0.876,55,0.775,56,0.349,58,4.17,118,0.015,119,0.018,120,0.015,125,0.386,141,1.438,203,4.17,219,4.17,223,1.163,276,2.627,390,2.472,532,3.214,698,2.472,791,3.214,1137,4.69,1318,4.69,1662,3.782,1670,4.69,1671,6.437,1672,5.48,1673,5.48,1674,5.48,1675,5.48]],["title/index.html",[125,0.218,904,1.962,1345,2.138]],["body/index.html",[0,2.274,1,2.935,4,1.788,5,0.092,8,3.869,9,2.717,10,2.064,11,2.027,13,2.82,15,2.82,29,2.82,41,0.468,43,1.788,45,0.02,49,3.105,50,2.585,51,0.375,52,3.197,53,2.816,54,0.741,56,0.133,58,2.508,61,3.197,62,2.82,63,1.441,64,0.752,65,2.274,67,1.441,68,0.889,69,3.493,71,3.105,72,1.441,73,2.088,74,2.717,75,1.788,77,1.788,78,3.526,79,2.82,80,3.698,81,3.871,82,1.589,83,1.788,84,2.508,87,2.274,88,1.589,89,3.48,90,1.788,91,3.519,92,3.965,93,2.508,94,2.508,95,3.965,96,3.105,97,4.801,98,2.82,99,2.82,100,0.959,101,2.82,102,4.078,103,1.441,106,2.816,108,2.393,109,1.589,110,1.225,111,0.676,112,1.788,114,1.067,117,1.799,118,0.014,119,0.009,120,0.014,135,0.676,141,0.548,143,1.012,147,3.105,152,1.216,192,0.889,195,2.274,196,1.225,201,0.676,208,1.225,220,1.141,221,1.225,222,0.865,228,1.788,234,1.788,238,1.225,249,1.423,252,2.275,257,3.006,258,1.589,266,1.141,267,1.225,269,1.225,279,1.067,307,1.067,327,1.256,336,1.683,337,1.589,341,1.225,344,3.195,345,2.088,347,1.788,360,1.841,362,3.664,364,1.441,376,1.589,390,1.487,403,1.788,404,1.788,423,2.957,425,4.18,437,1.589,484,1.788,494,1.225,495,1.589,498,2.585,501,2.508,511,2.53,527,4.269,547,1.589,587,2.088,644,0.794,665,1.225,674,1.441,676,2.82,704,1.441,740,1.956,742,1.323,785,1.441,786,1.788,823,1.788,825,1.589,832,1.225,854,1.932,867,1.323,876,1.225,878,1.067,880,1.067,896,1.589,948,3.195,966,1.788,972,1.589,990,1.788,1078,1.589,1117,1.788,1133,2.274,1135,1.441,1139,1.589,1182,2.82,1199,1.441,1206,1.589,1218,1.788,1256,1.788,1258,2.508,1348,2.816,1356,1.788,1357,1.788,1377,3.493,1389,1.589,1394,1.441,1415,3.105,1422,2.82,1423,1.788,1426,1.589,1440,1.441,1471,1.788,1484,1.788,1491,2.274,1498,1.788,1499,2.82,1500,1.788,1502,1.788,1506,2.274,1529,1.788,1530,1.589,1551,3.395,1564,2.82,1566,1.589,1589,3.493,1600,1.788,1622,1.788,1625,3.965,1640,1.788,1676,2.088,1677,2.088,1678,2.088,1679,2.088,1680,1.788,1681,3.295,1682,2.088,1683,1.788,1684,2.088,1685,2.088,1686,3.526,1687,5.358,1688,2.088,1689,2.088,1690,1.788,1691,1.788,1692,3.295,1693,2.088,1694,2.088,1695,2.82,1696,2.088,1697,1.441,1698,1.441,1699,2.82,1700,2.088,1701,1.788,1702,2.82,1703,1.788,1704,2.088,1705,3.493,1706,2.088,1707,2.088,1708,2.088,1709,2.088,1710,4.081,1711,3.295,1712,2.088,1713,3.295,1714,2.088,1715,2.088,1716,2.088,1717,2.088,1718,2.088,1719,2.088,1720,2.088,1721,2.088,1722,2.088,1723,2.088,1724,2.088,1725,2.088,1726,3.295,1727,2.088,1728,2.088,1729,2.088,1730,2.088,1731,3.295,1732,2.088,1733,2.088,1734,2.088,1735,2.088,1736,2.088,1737,3.295,1738,2.088,1739,2.088,1740,2.088,1741,3.295,1742,3.295,1743,2.088,1744,2.088,1745,2.088,1746,2.088,1747,2.088,1748,2.088,1749,2.088,1750,2.088,1751,1.323,1752,1.589,1753,2.088,1754,2.088,1755,2.088,1756,2.088,1757,2.088,1758,1.788,1759,1.788,1760,2.088,1761,2.088,1762,2.088,1763,2.088,1764,3.295,1765,2.088,1766,2.088,1767,2.088,1768,3.295,1769,2.088,1770,2.088,1771,1.788,1772,2.088,1773,3.295,1774,1.788,1775,1.788,1776,2.088,1777,2.088,1778,2.088,1779,3.295,1780,2.088,1781,2.088,1782,2.088,1783,2.088,1784,2.088,1785,2.088,1786,2.088,1787,2.088,1788,3.295,1789,2.088,1790,2.088,1791,2.088,1792,2.088,1793,2.088,1794,1.788,1795,2.088,1796,2.088,1797,2.088,1798,2.088,1799,2.088,1800,1.788,1801,2.088,1802,2.088,1803,2.088,1804,2.088,1805,3.295,1806,2.088,1807,2.088,1808,2.088,1809,1.589]],["title/license.html",[904,1.962,1345,2.138,1560,2.357]],["body/license.html",[5,0.237,7,0.289,11,1.124,45,0.01,55,0.503,60,0.381,88,2.127,91,0.93,100,0.324,118,0.008,119,0.008,120,0.005,149,1.175,201,1.859,203,1.296,212,1.079,217,2.454,218,1.457,221,0.998,224,1.261,231,1.639,252,0.768,255,1.189,256,1.296,261,1.457,276,2.342,289,1.526,306,1.296,336,0.87,341,0.998,343,1.457,344,1.079,345,1.079,360,2.591,375,2.247,378,0.998,393,3.459,423,0.998,437,3.132,485,1.296,494,0.998,498,3.806,501,3.132,502,0.93,506,2.253,534,4.654,555,1.296,614,2.607,634,1.079,644,0.648,665,0.998,674,1.175,710,1.457,743,1.457,785,1.175,788,1.296,854,0.998,878,0.87,880,1.816,881,0.93,893,2.392,896,1.296,967,3.043,976,1.296,994,2.392,1077,2.879,1080,1.296,1081,1.457,1139,1.296,1147,1.457,1179,1.457,1199,1.175,1323,2.706,1335,1.457,1417,1.296,1426,2.706,1434,1.457,1440,2.454,1490,1.457,1501,2.392,1506,2.454,1513,1.296,1527,1.457,1540,1.079,1547,3.89,1549,1.457,1551,2.253,1560,5.355,1568,1.457,1572,4.612,1573,4.776,1576,1.457,1579,1.457,1580,4.916,1583,3.523,1585,3.89,1588,2.392,1597,1.457,1626,3.043,1646,1.296,1680,1.457,1686,1.296,1699,1.457,1702,1.457,1751,1.079,1752,1.296,1759,3.043,1775,6.041,1794,3.89,1800,1.457,1809,1.296,1810,4.115,1811,3.556,1812,1.702,1813,1.702,1814,1.702,1815,6.116,1816,4.115,1817,4.545,1818,1.702,1819,6.297,1820,5.743,1821,1.457,1822,1.702,1823,1.702,1824,5.743,1825,6.116,1826,4.885,1827,2.795,1828,1.702,1829,4.545,1830,1.702,1831,1.702,1832,1.702,1833,5.58,1834,4.115,1835,2.795,1836,2.795,1837,1.702,1838,3.556,1839,2.795,1840,2.795,1841,1.702,1842,6.506,1843,2.795,1844,4.885,1845,1.702,1846,2.795,1847,1.702,1848,1.702,1849,1.702,1850,1.702,1851,1.702,1852,1.702,1853,1.702,1854,3.556,1855,2.795,1856,1.702,1857,1.702,1858,4.885,1859,5.58,1860,4.115,1861,2.795,1862,1.702,1863,1.702,1864,1.702,1865,1.702,1866,1.702,1867,1.702,1868,3.556,1869,2.795,1870,1.702,1871,5.58,1872,2.392,1873,1.702,1874,2.795,1875,6.506,1876,6.563,1877,1.702,1878,1.702,1879,1.702,1880,1.702,1881,1.702,1882,1.702,1883,2.795,1884,2.795,1885,1.702,1886,1.702,1887,1.702,1888,4.115,1889,1.702,1890,2.795,1891,2.795,1892,2.795,1893,1.702,1894,1.702,1895,1.702,1896,1.702,1897,2.795,1898,1.702,1899,1.702,1900,3.556,1901,1.702,1902,1.702,1903,3.556,1904,1.702,1905,1.702,1906,1.702,1907,4.115,1908,1.702,1909,1.702,1910,2.795,1911,3.556,1912,2.795,1913,2.795,1914,2.795,1915,2.795,1916,2.795,1917,3.556,1918,2.795,1919,2.795,1920,2.795,1921,2.795,1922,1.702,1923,2.795,1924,1.702,1925,4.545,1926,5.16,1927,3.556,1928,2.795,1929,2.795,1930,1.702,1931,1.457,1932,3.556,1933,2.795,1934,1.702,1935,1.702,1936,1.702,1937,3.556,1938,1.702,1939,1.457,1940,1.702,1941,2.795,1942,1.702,1943,1.702,1944,1.702,1945,1.702,1946,1.702,1947,1.702,1948,1.702,1949,2.795,1950,1.702,1951,1.702,1952,1.702,1953,1.702,1954,1.702,1955,1.702,1956,1.702,1957,1.702,1958,1.702,1959,1.702,1960,1.702,1961,5.388,1962,1.702,1963,1.702,1964,1.702,1965,1.702,1966,4.115,1967,2.795,1968,4.115,1969,1.702,1970,1.702,1971,1.702,1972,1.702,1973,3.556,1974,1.702,1975,1.702,1976,2.795,1977,1.702,1978,1.702,1979,1.702,1980,2.392,1981,1.702,1982,1.702,1983,1.702,1984,1.702,1985,1.702,1986,1.457,1987,1.702,1988,1.702,1989,3.556,1990,4.115,1991,1.702,1992,1.702,1993,1.702,1994,1.702,1995,1.702,1996,1.702,1997,1.702,1998,2.795,1999,1.702,2000,1.702,2001,1.702,2002,1.702,2003,4.115,2004,1.702,2005,1.702,2006,1.702,2007,1.702,2008,1.702,2009,1.702,2010,4.115,2011,3.556,2012,3.556,2013,3.556,2014,2.795,2015,3.556,2016,2.795,2017,2.795,2018,2.795,2019,2.795,2020,1.702,2021,1.702,2022,1.702,2023,1.702,2024,1.702,2025,1.702,2026,2.795,2027,1.702,2028,1.702,2029,1.702,2030,4.545,2031,1.702,2032,1.702,2033,1.702,2034,1.702,2035,1.702,2036,1.702,2037,1.702,2038,1.702,2039,4.545,2040,1.702,2041,1.702,2042,1.702,2043,1.702,2044,1.702,2045,1.702,2046,1.702,2047,1.702,2048,1.702,2049,1.702,2050,1.702,2051,1.702,2052,1.702,2053,1.702,2054,1.702,2055,1.702,2056,1.702,2057,1.702,2058,1.702,2059,2.795,2060,1.702,2061,1.702,2062,1.702,2063,1.702,2064,1.702,2065,1.702,2066,1.702,2067,1.702,2068,1.702,2069,1.702,2070,1.702,2071,1.702,2072,1.702,2073,1.702,2074,2.795,2075,2.795,2076,1.702,2077,1.702,2078,1.702,2079,1.702,2080,1.702,2081,1.702,2082,1.457,2083,1.702,2084,1.702,2085,1.702,2086,1.702,2087,1.702,2088,1.702,2089,1.702,2090,1.702,2091,1.702,2092,1.702]],["title/modules.html",[2,3.815]],["body/modules.html",[1,3.708,2,4.455,45,0.018,118,0.016,119,0.018,120,0.016,1691,5.01]],["title/overview.html",[704,3.46]],["body/overview.html",[0,3.953,10,1.759,45,0.018,118,0.016,119,0.018,120,0.016,122,1.854,137,2.585,494,3.359,629,5.027,644,2.179,704,3.953,1385,4.903,2093,5.728]],["title/additional-documentation/themes.html",[1077,1.962,1751,1.962,2094,2.138]],["body/additional-documentation/themes.html",[10,1.437,11,2.352,45,0.017,110,2.744,113,3.105,118,0.013,119,0.016,120,0.013,174,3.561,222,1.228,223,0.993,240,2.243,249,1.437,250,3.06,283,3.431,287,4.037,288,3.561,297,2.39,301,2.555,302,2.965,303,4.037,307,3.415,309,2.744,313,2.39,327,1.714,345,4.043,360,2.111,423,3.431,511,2.555,578,3.229,618,3.561,623,2.965,674,4.404,707,4.043,791,2.744,833,3.431,854,2.744,865,2.39,939,3.561,1133,3.229,1540,2.965,1541,4.857,1543,3.561,1697,3.229,1698,3.229,1752,3.561,1931,4.005,1939,4.005,2082,4.005,2094,4.037,2095,4.679,2096,4.679,2097,4.679,2098,5.85,2099,4.679,2100,4.679,2101,4.679,2102,4.679,2103,4.679,2104,4.679,2105,5.007,2106,5.007,2107,4.679,2108,5.85,2109,5.85]],["title/additional-documentation/themes/pre-built.html",[1077,1.69,1697,1.841,1698,1.841,1751,1.69]],["body/additional-documentation/themes/pre-built.html",[5,0.29,8,2.404,9,3.151,10,2.082,11,2.41,42,2.829,45,0.016,72,2.829,73,3.405,74,3.151,78,3.119,80,2.829,85,4.09,87,2.829,89,4.392,91,2.238,108,2.404,110,2.404,116,3.508,118,0.011,119,0.015,120,0.011,141,1.076,192,1.744,196,2.404,208,2.404,217,2.829,222,1.076,250,1.965,344,4.032,422,4.138,531,2.597,547,3.119,638,3.508,694,3.119,707,3.799,817,3.508,825,4.563,833,2.404,880,2.093,894,2.829,979,3.508,1178,3.119,1199,3.709,1348,4.392,1408,3.508,1415,3.119,1440,4.392,1491,2.829,1530,3.119,1543,4.843,1551,2.597,1566,3.119,1567,3.508,1646,3.119,1683,4.599,1695,3.508,1697,4.138,1698,3.709,1701,4.599,1703,3.508,1705,3.508,1758,3.508,1771,4.599,1774,3.508,1809,3.119,1821,3.508,1872,3.508,1986,3.508,2094,3.709,2110,4.098,2111,4.098,2112,4.098,2113,4.098,2114,4.098,2115,4.098,2116,3.508,2117,4.098,2118,4.098,2119,4.098,2120,4.098,2121,5.374,2122,4.098,2123,5.995,2124,4.098,2125,4.098,2126,4.098,2127,4.599,2128,4.098,2129,4.098,2130,5.374,2131,4.098,2132,4.098,2133,4.098,2134,4.098,2135,4.098,2136,4.098,2137,4.098,2138,4.098,2139,4.098,2140,4.098,2141,5.374,2142,4.098,2143,4.098,2144,4.098,2145,4.098,2146,4.098,2147,4.098,2148,4.098,2149,4.098,2150,4.098,2151,4.098,2152,4.098]],["title/additional-documentation/themes/customizing.html",[1077,1.962,1751,1.962,2153,2.651]],["body/additional-documentation/themes/customizing.html",[9,1.641,10,0.86,45,0.011,55,0.73,64,0.614,81,1.177,108,1,113,3.419,118,0.005,119,0.008,120,0.019,174,2.13,195,1.177,201,2.371,205,1.177,223,0.362,240,2.823,250,0.818,255,0.726,283,4.022,284,3.966,285,4.401,287,3.721,288,1.298,289,2.944,290,1.773,291,5.438,294,3.937,295,3.902,297,3.324,298,1.08,301,3.049,302,2.255,303,3.853,305,1.932,306,1.298,307,3.486,308,2.457,309,3.525,310,1.177,313,2.852,320,2.779,323,2.206,327,1.82,338,1.46,360,0.769,390,1.263,502,3.885,531,2.882,537,0.931,569,2.709,572,2.13,575,3.374,576,1.298,577,1.177,578,3.139,581,1,587,1.08,592,4.184,596,2.457,598,2.457,602,1.46,614,1.08,617,3.526,618,2.709,619,2.395,623,3.73,631,1.298,665,1,707,1.773,724,5.039,739,3.047,830,2.882,865,1.43,964,1.298,972,1.298,1122,3.374,1135,1.177,1193,4.481,1205,1.46,1226,4.184,1230,1.46,1231,1.46,1234,1.46,1237,3.893,1241,1.46,1243,1.46,1405,4.42,1540,2.255,1541,4.249,1551,1.08,1686,2.13,1690,1.46,1980,1.46,2094,1.932,2105,1.46,2106,3.047,2116,1.46,2127,1.46,2153,1.46,2154,1.705,2155,1.705,2156,1.705,2157,1.705,2158,1.705,2159,1.705,2160,1.705,2161,1.705,2162,1.705,2163,2.799,2164,1.705,2165,4.549,2166,1.705,2167,3.559,2168,1.705,2169,1.705,2170,4.549,2171,1.705,2172,3.559,2173,4.888,2174,2.799,2175,1.705,2176,1.705,2177,2.799,2178,1.705,2179,4.119,2180,5.747,2181,1.705,2182,1.705,2183,1.705,2184,2.799,2185,1.705,2186,1.705,2187,5.747,2188,1.705,2189,1.705,2190,1.705,2191,1.705,2192,1.705,2193,1.705,2194,2.799,2195,1.705,2196,1.705,2197,5.164]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"modules/SenzingSdkModule.html":{},"classes/SzBulkDataAnalysis.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzMatchFields.html":{},"interfaces/SzNetworkGraphInputs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"injectables/SzUIEventService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["0",{"_index":307,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["0\">matches",{"_index":1221,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["0\">name",{"_index":1224,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["0\">possible",{"_index":1222,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["0\">possibly",{"_index":1223,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["0(replace",{"_index":1124,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["0.0.4",{"_index":1466,"title":{},"body":{"changelog.html":{}}}],["0.11.1",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["0.25em",{"_index":2176,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["0.4em",{"_index":2191,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["0.5em",{"_index":2177,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["0.8.26",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["000",{"_index":286,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["000000",{"_index":2171,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["00000073",{"_index":612,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["05",{"_index":1521,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1520,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1460,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1430,"title":{},"body":{"changelog.html":{}}}],["0c9bf4",{"_index":2172,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["0e2863",{"_index":2162,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["1",{"_index":494,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzSearchHistoryFolio.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1(ignore",{"_index":1123,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["1(update",{"_index":1125,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["1.0.0",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":1519,"title":{},"body":{"changelog.html":{}}}],["1.0.6",{"_index":1488,"title":{},"body":{"changelog.html":{}}}],["1.0.7",{"_index":1480,"title":{},"body":{"changelog.html":{}}}],["1.0.8",{"_index":1459,"title":{},"body":{"changelog.html":{}}}],["1.0.9",{"_index":1429,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1403,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1382,"title":{},"body":{"changelog.html":{}}}],["1.2em",{"_index":597,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["1.3.0",{"_index":1354,"title":{},"body":{"changelog.html":{}}}],["1.5.3",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":1243,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["1.8.1",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["1.8em",{"_index":2182,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["1.9.0",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":629,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzPdfUtilService.html":{},"overview.html":{}}}],["100",{"_index":609,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"changelog.html":{}}}],["1000px",{"_index":1228,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["100px",{"_index":2189,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["102",{"_index":1448,"title":{},"body":{"changelog.html":{}}}],["104",{"_index":1428,"title":{},"body":{"changelog.html":{}}}],["105",{"_index":1427,"title":{},"body":{"changelog.html":{}}}],["109",{"_index":1395,"title":{},"body":{"changelog.html":{}}}],["10px",{"_index":303,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["11",{"_index":1385,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["110",{"_index":1396,"title":{},"body":{"changelog.html":{}}}],["112",{"_index":1397,"title":{},"body":{"changelog.html":{}}}],["114",{"_index":1398,"title":{},"body":{"changelog.html":{}}}],["115",{"_index":610,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"changelog.html":{}}}],["12",{"_index":1384,"title":{},"body":{"changelog.html":{}}}],["120px",{"_index":611,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["121",{"_index":1399,"title":{},"body":{"changelog.html":{}}}],["123",{"_index":1400,"title":{},"body":{"changelog.html":{}}}],["125",{"_index":1401,"title":{},"body":{"changelog.html":{}}}],["126",{"_index":1402,"title":{},"body":{"changelog.html":{}}}],["133",{"_index":1381,"title":{},"body":{"changelog.html":{}}}],["13px",{"_index":2175,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["14",{"_index":2093,"title":{},"body":{"overview.html":{}}}],["14px",{"_index":594,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzPoweredByComponent.html":{}}}],["150px",{"_index":1240,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["15px",{"_index":602,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["16px",{"_index":2193,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["175px",{"_index":2184,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["18px",{"_index":603,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["19",{"_index":1481,"title":{},"body":{"changelog.html":{}}}],["1em",{"_index":569,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["1px",{"_index":284,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["2",{"_index":1258,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{},"changelog.html":{},"index.html":{}}}],["2.0",{"_index":1811,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":496,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzSearchHistoryFolio.html":{}}}],["2004",{"_index":1813,"title":{},"body":{"license.html":{}}}],["200px",{"_index":1241,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["2019",{"_index":1383,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":1355,"title":{},"body":{"changelog.html":{}}}],["20px",{"_index":2180,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["22px",{"_index":2174,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["23",{"_index":1431,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":2196,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["26",{"_index":1522,"title":{},"body":{"changelog.html":{}}}],["28px",{"_index":2192,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["2b7169",{"_index":2163,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["2em",{"_index":728,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["2px",{"_index":308,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzPoweredByComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["3",{"_index":1256,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{},"index.html":{}}}],["30",{"_index":1461,"title":{},"body":{"changelog.html":{}}}],["30px",{"_index":2106,"title":{},"body":{"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["34px",{"_index":2186,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["38",{"_index":1523,"title":{},"body":{"changelog.html":{}}}],["39",{"_index":1515,"title":{},"body":{"changelog.html":{}}}],["3px",{"_index":288,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["4",{"_index":1717,"title":{},"body":{"index.html":{}}}],["40",{"_index":1524,"title":{},"body":{"changelog.html":{}}}],["400px",{"_index":1229,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["40px",{"_index":1236,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["47",{"_index":1514,"title":{},"body":{"changelog.html":{}}}],["48px",{"_index":2190,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["4px",{"_index":302,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzPoweredByComponent.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["5",{"_index":495,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"index.html":{}}}],["5.9.1",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":306,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"license.html":{},"additional-documentation/themes/customizing.html":{}}}],["56",{"_index":1516,"title":{},"body":{"changelog.html":{}}}],["5e5e5e",{"_index":2179,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["5em",{"_index":727,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["5px",{"_index":617,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["5s",{"_index":626,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["6",{"_index":1356,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.3.3",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1517,"title":{},"body":{"changelog.html":{}}}],["600",{"_index":1234,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["60px",{"_index":2188,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["63",{"_index":1518,"title":{},"body":{"changelog.html":{}}}],["65",{"_index":1477,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":1478,"title":{},"body":{"changelog.html":{}}}],["69",{"_index":1479,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":619,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["7.1.0",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["7.x.x",{"_index":1676,"title":{},"body":{"index.html":{}}}],["70",{"_index":1476,"title":{},"body":{"changelog.html":{}}}],["700",{"_index":1242,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["71",{"_index":1475,"title":{},"body":{"changelog.html":{}}}],["717171",{"_index":731,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["74",{"_index":1474,"title":{},"body":{"changelog.html":{}}}],["78",{"_index":1458,"title":{},"body":{"changelog.html":{}}}],["79",{"_index":1457,"title":{},"body":{"changelog.html":{}}}],["7b00ad",{"_index":2169,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["7px",{"_index":591,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzPoweredByComponent.html":{}}}],["80",{"_index":635,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["8080",{"_index":1500,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["808285",{"_index":2173,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["82",{"_index":1456,"title":{},"body":{"changelog.html":{}}}],["82848647",{"_index":2185,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["84",{"_index":1455,"title":{},"body":{"changelog.html":{}}}],["86",{"_index":1454,"title":{},"body":{"changelog.html":{}}}],["88",{"_index":1453,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":618,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["9",{"_index":1823,"title":{},"body":{"license.html":{}}}],["90",{"_index":1452,"title":{},"body":{"changelog.html":{}}}],["909090",{"_index":729,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["92",{"_index":1451,"title":{},"body":{"changelog.html":{}}}],["94",{"_index":1450,"title":{},"body":{"changelog.html":{}}}],["95989a",{"_index":2165,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["96",{"_index":1449,"title":{},"body":{"changelog.html":{}}}],["999",{"_index":722,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["_architect.build.options.styles",{"_index":2138,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["_data",{"_index":799,"title":{},"body":{"classes/SzFolioItem.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolioItem.html":{}}}],["_datasources",{"_index":150,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{}}}],["_datasources[i",{"_index":562,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["_entitytypes",{"_index":151,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["_escaping_",{"_index":2144,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["_layoutclasses",{"_index":685,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["_ls",{"_index":1010,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["_searchresults",{"_index":1187,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["_searchvalue",{"_index":1188,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["_showlinklabels",{"_index":453,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["a09020",{"_index":2164,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["aborted",{"_index":1669,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["about'},{'name",{"_index":317,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["about.component.html",{"_index":270,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["about.component.scss",{"_index":268,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["about.component.ts",{"_index":254,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["about/sz",{"_index":253,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["above",{"_index":1199,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["absolute",{"_index":605,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["abstract",{"_index":790,"title":{},"body":{"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{}}}],["acceptance",{"_index":2057,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":1575,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1626,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["accepts",{"_index":1757,"title":{},"body":{"index.html":{}}}],["access",{"_index":421,"title":{},"body":{"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"injectables/SzFoliosService.html":{}}}],["accessed",{"_index":369,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["accessing",{"_index":2147,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["accessors",{"_index":178,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["accesstoken",{"_index":352,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["act",{"_index":2061,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1831,"title":{},"body":{"license.html":{}}}],["action",{"_index":1232,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["activate",{"_index":702,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["active",{"_index":719,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["active/focused",{"_index":565,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["actively",{"_index":717,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["activeview",{"_index":706,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["acts",{"_index":2037,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":333,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["actually",{"_index":1808,"title":{},"body":{"index.html":{}}}],["add",{"_index":11,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"injectables/SzFoliosService.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{}}}],["add(item",{"_index":794,"title":{},"body":{"classes/SzFolio.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{}}}],["adddatasources",{"_index":428,"title":{},"body":{"injectables/SzDataSourcesService.html":{}}}],["adddatasources(datasources",{"_index":433,"title":{},"body":{"injectables/SzDataSourcesService.html":{}}}],["added",{"_index":1357,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["addendum",{"_index":1982,"title":{},"body":{"license.html":{}}}],["addentitytypes",{"_index":775,"title":{},"body":{"injectables/SzEntityTypesService.html":{}}}],["addentitytypes(entitytypes",{"_index":778,"title":{},"body":{"injectables/SzEntityTypesService.html":{}}}],["adding",{"_index":103,"title":{},"body":{"modules/SenzingSdkModule.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["additional",{"_index":1077,"title":{"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}},"body":{"classes/SzSearchFormPrefs.html":{},"license.html":{}}}],["additions",{"_index":1889,"title":{},"body":{"license.html":{}}}],["addr_city",{"_index":744,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzRawData.html":{}}}],["addr_full",{"_index":745,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["addr_line1",{"_index":746,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzRawData.html":{}}}],["addr_line2",{"_index":1038,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["addr_postal_code",{"_index":747,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzRawData.html":{}}}],["addr_state",{"_index":748,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzRawData.html":{}}}],["addr_type",{"_index":749,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["address",{"_index":1787,"title":{},"body":{"index.html":{}}}],["addressdata",{"_index":647,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["addressdatamatches",{"_index":1152,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["addtosearchhistory",{"_index":810,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["addtosearchhistory(data",{"_index":812,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["adheres",{"_index":1351,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":1361,"title":{},"body":{"changelog.html":{}}}],["adminservice",{"_index":184,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["advanced",{"_index":394,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["advised",{"_index":2054,"title":{},"body":{"license.html":{}}}],["against",{"_index":1501,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["againt",{"_index":1320,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["agree",{"_index":2064,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":2013,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1576,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["agreements",{"_index":1561,"title":{},"body":{"contributing.html":{}}}],["ahead",{"_index":1386,"title":{},"body":{"changelog.html":{}}}],["align",{"_index":615,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["alleging",{"_index":1946,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1482,"title":{},"body":{"changelog.html":{}}}],["allowed",{"_index":1101,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["allowedtypeattributes",{"_index":1072,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["allowing",{"_index":438,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["alone",{"_index":1938,"title":{},"body":{"license.html":{}}}],["along",{"_index":1974,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1981,"title":{},"body":{"license.html":{}}}],["already",{"_index":1118,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"contributing.html":{}}}],["ambiguous",{"_index":2168,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["analysis",{"_index":216,"title":{},"body":{"injectables/SzBulkDataService.html":{},"changelog.html":{}}}],["analysis.ts",{"_index":124,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{}}}],["analysisbydatasource",{"_index":127,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{}}}],["analyze",{"_index":145,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["analyze(file",{"_index":185,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["analyzed",{"_index":225,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["analyzingfile",{"_index":153,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["analze",{"_index":186,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["and(b",{"_index":1958,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":1963,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":1969,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1434,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["angular",{"_index":89,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationComponent.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["angular.json",{"_index":2136,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["angular/animations",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":96,"title":{},"body":{"modules/SenzingSdkModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/elements",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":93,"title":{},"body":{"modules/SenzingSdkModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":1880,"title":{},"body":{"license.html":{}}}],["anywhere",{"_index":992,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["aot",{"_index":1766,"title":{},"body":{"index.html":{}}}],["apache",{"_index":1810,"title":{},"body":{"license.html":{}}}],["api",{"_index":257,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"components/SzPoweredByComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["api.yaml#l172",{"_index":427,"title":{},"body":{"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{}}}],["api/blob/master/senzing",{"_index":426,"title":{},"body":{"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{}}}],["apiconfigfactory",{"_index":57,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["apiconfigservice",{"_index":359,"title":{},"body":{"components/SzConfigurationComponent.html":{}}}],["apiconfiguration",{"_index":271,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["apikeys",{"_index":353,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["apiproperties",{"_index":272,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["app",{"_index":1687,"title":{},"body":{"index.html":{}}}],["app's",{"_index":1708,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":98,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["app.component.css",{"_index":1732,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":1710,"title":{},"body":{"index.html":{}}}],["app.component.html(or",{"_index":1721,"title":{},"body":{"index.html":{}}}],["app.component.ts",{"_index":1728,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":83,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["appcomponent",{"_index":97,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["appear",{"_index":1978,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1874,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":2011,"title":{},"body":{"license.html":{}}}],["application",{"_index":76,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzConfigurationService.html":{}}}],["application's",{"_index":2115,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["applications",{"_index":12,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["applied",{"_index":708,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["applies",{"_index":1931,"title":{},"body":{"license.html":{},"additional-documentation/themes.html":{}}}],["apply",{"_index":893,"title":{},"body":{"classes/SzGraphPrefs.html":{},"license.html":{}}}],["appmodule",{"_index":101,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["appropriate",{"_index":1139,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"index.html":{},"license.html":{}}}],["appropriateness",{"_index":2025,"title":{},"body":{"license.html":{}}}],["archives",{"_index":2084,"title":{},"body":{"license.html":{}}}],["area",{"_index":1441,"title":{},"body":{"changelog.html":{}}}],["arial",{"_index":2161,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["arising",{"_index":2043,"title":{},"body":{"license.html":{}}}],["array",{"_index":14,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzSearchHistoryFolio.html":{}}}],["artifacts",{"_index":1570,"title":{},"body":{"contributing.html":{}}}],["asconfigurationparameters",{"_index":411,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["asking",{"_index":1555,"title":{},"body":{"contributing.html":{}}}],["asserted",{"_index":2070,"title":{},"body":{"license.html":{}}}],["associated",{"_index":203,"title":{},"body":{"injectables/SzBulkDataService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["assume",{"_index":2027,"title":{},"body":{"license.html":{}}}],["attach",{"_index":2071,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1873,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":230,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["attribute",{"_index":952,"title":{},"body":{"injectables/SzPdfUtilService.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{}}}],["attribute?.attr",{"_index":1219,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["attribute?.value",{"_index":1253,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["attribute?.value}}&nbsp",{"_index":1220,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["attributedatamatches",{"_index":1153,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["attributedisplay",{"_index":1189,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["attribution",{"_index":1966,"title":{},"body":{"license.html":{}}}],["authentication",{"_index":373,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["authorized",{"_index":1827,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1868,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1447,"title":{},"body":{"changelog.html":{}}}],["autofill",{"_index":1088,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["automagically",{"_index":1074,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["automated",{"_index":1528,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1699,"title":{},"body":{"index.html":{},"license.html":{}}}],["away",{"_index":549,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["back",{"_index":1114,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["background",{"_index":294,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["bad",{"_index":2132,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["base",{"_index":783,"title":{},"body":{"classes/SzFolio.html":{},"classes/SzSdkPrefsBase.html":{}}}],["based",{"_index":788,"title":{},"body":{"classes/SzFolio.html":{},"changelog.html":{},"license.html":{}}}],["based(ie",{"_index":1412,"title":{},"body":{"changelog.html":{}}}],["basepath",{"_index":65,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"index.html":{}}}],["basic",{"_index":515,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"changelog.html":{}}}],["basically",{"_index":1021,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["basis",{"_index":2014,"title":{},"body":{"license.html":{}}}],["before",{"_index":1285,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{},"contributing.html":{}}}],["behalf",{"_index":1585,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["behavior",{"_index":238,"title":{},"body":{"injectables/SzBulkDataService.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"index.html":{}}}],["behaviorsubject",{"_index":871,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["behaviorsubject(this.tojsonobject",{"_index":872,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["behaviorsubject(undefined",{"_index":236,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["being",{"_index":196,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzSearchHistoryFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["belonging",{"_index":895,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["below",{"_index":1752,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/themes.html":{}}}],["beneficial",{"_index":1852,"title":{},"body":{"license.html":{}}}],["bestname",{"_index":648,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzSearchResultEntityData.html":{}}}],["better",{"_index":1508,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":559,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"components/SzSearchResultsComponent.html":{}}}],["bind",{"_index":1179,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"license.html":{}}}],["block",{"_index":575,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["blue",{"_index":1252,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["body",{"_index":2105,"title":{},"body":{"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["boilerplate",{"_index":2072,"title":{},"body":{"license.html":{}}}],["bold",{"_index":299,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityRecordViewerComponent.html":{}}}],["bool",{"_index":516,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["boolean",{"_index":374,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzNetworkGraphInputs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"classes/SzServerError.html":{}}}],["bootstrap",{"_index":99,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["border",{"_index":283,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"changelog.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["both",{"_index":2154,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["bottom",{"_index":310,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["bound",{"_index":1739,"title":{},"body":{"index.html":{}}}],["box",{"_index":1726,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":2075,"title":{},"body":{"license.html":{}}}],["branch",{"_index":1621,"title":{},"body":{"contributing.html":{}}}],["breakpoint(s",{"_index":1433,"title":{},"body":{"changelog.html":{}}}],["bring",{"_index":1464,"title":{},"body":{"changelog.html":{}}}],["broadcast",{"_index":239,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["brown",{"_index":1248,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["browse",{"_index":1691,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":94,"title":{},"body":{"modules/SenzingSdkModule.html":{},"dependencies.html":{},"index.html":{}}}],["browsermodule",{"_index":92,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["bug",{"_index":1578,"title":{},"body":{"contributing.html":{}}}],["bugfix",{"_index":1510,"title":{},"body":{"changelog.html":{}}}],["bugfixes",{"_index":1388,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1559,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":1695,"title":{},"body":{"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["builder",{"_index":1802,"title":{},"body":{"index.html":{}}}],["building",{"_index":1529,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["buildout",{"_index":467,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"changelog.html":{}}}],["buildoutmax",{"_index":468,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["buildoutmin",{"_index":469,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["built",{"_index":1698,"title":{"additional-documentation/themes/pre-built.html":{}},"body":{"index.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{}}}],["bulk",{"_index":139,"title":{},"body":{"injectables/SzBulkDataService.html":{},"injectables/SzConfigurationService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{}}}],["bulkdataservice",{"_index":183,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["bulkset",{"_index":843,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["bus",{"_index":831,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["button",{"_index":1541,"title":{},"body":{"changelog.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["buttons__wrapper",{"_index":1233,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["by'},{'name",{"_index":325,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["by.component.html",{"_index":969,"title":{},"body":{"components/SzPoweredByComponent.html":{}}}],["by.component.scss",{"_index":968,"title":{},"body":{"components/SzPoweredByComponent.html":{}}}],["by.component.ts",{"_index":963,"title":{},"body":{"components/SzPoweredByComponent.html":{}}}],["by/sz",{"_index":962,"title":{},"body":{"components/SzPoweredByComponent.html":{}}}],["c0c0c0",{"_index":293,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["c9741f",{"_index":2166,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["calling",{"_index":877,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["canvas",{"_index":957,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["card",{"_index":724,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["card__label",{"_index":1238,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["carry",{"_index":1959,"title":{},"body":{"license.html":{}}}],["cases",{"_index":86,"title":{},"body":{"modules/SenzingSdkModule.html":{},"changelog.html":{}}}],["cat",{"_index":1276,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["cause",{"_index":1840,"title":{},"body":{"license.html":{}}}],["ccc",{"_index":739,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["ccla",{"_index":1587,"title":{},"body":{"contributing.html":{}}}],["cd",{"_index":492,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{},"contributing.html":{}}}],["cell",{"_index":312,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["center",{"_index":616,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["certainly",{"_index":2113,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["challenge",{"_index":370,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["change",{"_index":192,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["changed",{"_index":378,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzPrefsService.html":{},"changelog.html":{},"license.html":{}}}],["changedatasourcename",{"_index":172,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["changedatasourcename(fromdatasource",{"_index":190,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["changedetectorref",{"_index":493,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["changeentitytypename",{"_index":173,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["changeentitytypename(fromentitytype",{"_index":199,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["changelog",{"_index":1346,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":237,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"injectables/SzUIEventService.html":{},"changelog.html":{}}}],["changing",{"_index":396,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["character",{"_index":2042,"title":{},"body":{"license.html":{}}}],["characterencoding",{"_index":128,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{}}}],["characteristicdata",{"_index":649,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["characteristicdatamatches",{"_index":1154,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["characteristics",{"_index":536,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzSearchService.html":{}}}],["charaters",{"_index":2146,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["charge",{"_index":1917,"title":{},"body":{"license.html":{}}}],["check",{"_index":527,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"contributing.html":{},"index.html":{}}}],["child",{"_index":580,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{}}}],["choice",{"_index":1595,"title":{},"body":{"contributing.html":{}}}],["choose",{"_index":1597,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["chronological",{"_index":1145,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["claim",{"_index":1943,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1933,"title":{},"body":{"license.html":{}}}],["class",{"_index":100,"title":{"classes/SzBulkDataAnalysis.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"classes/SzSearchResultsPrefs.html":{},"classes/SzServerError.html":{}},"body":{"modules/SenzingSdkModule.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["class.not",{"_index":483,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["class.showing",{"_index":487,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["classes",{"_index":122,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"classes/SzSearchResultsPrefs.html":{},"classes/SzServerError.html":{},"changelog.html":{},"overview.html":{}}}],["clear",{"_index":174,"title":{},"body":{"injectables/SzBulkDataService.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["clearcurrentsearchstate",{"_index":1303,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["clears",{"_index":1312,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["cli",{"_index":90,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["click",{"_index":1206,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"changelog.html":{},"index.html":{}}}],["clicked",{"_index":1202,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["clicking",{"_index":1296,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["clicks",{"_index":886,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["client",{"_index":1389,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["clone",{"_index":1615,"title":{},"body":{"contributing.html":{}}}],["code",{"_index":506,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzServerError.html":{},"changelog.html":{},"contributing.html":{},"license.html":{}}}],["collapse",{"_index":1439,"title":{},"body":{"changelog.html":{}}}],["collapse/expand",{"_index":1344,"title":{},"body":{"injectables/SzUIEventService.html":{}}}],["collapsed",{"_index":1015,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["collapses",{"_index":985,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["collection",{"_index":782,"title":{},"body":{"classes/SzFolio.html":{},"injectables/SzFoliosService.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{}}}],["color",{"_index":295,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzGraphPrefs.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{},"additional-documentation/themes/customizing.html":{}}}],["colors",{"_index":442,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["colorsbydatasourcesdata",{"_index":489,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["colorsbydatasourcesform",{"_index":454,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["colorsmiscform",{"_index":455,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["column",{"_index":300,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["combination",{"_index":1939,"title":{},"body":{"license.html":{},"additional-documentation/themes.html":{}}}],["come",{"_index":2095,"title":{},"body":{"additional-documentation/themes.html":{}}}],["command",{"_index":1707,"title":{},"body":{"index.html":{}}}],["comment",{"_index":2079,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":2051,"title":{},"body":{"license.html":{}}}],["common",{"_index":785,"title":{},"body":{"classes/SzFolio.html":{},"classes/SzSdkPrefsBase.html":{},"index.html":{},"license.html":{}}}],["commonly",{"_index":365,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["communicate",{"_index":1718,"title":{},"body":{"index.html":{}}}],["communication",{"_index":967,"title":{},"body":{"components/SzPoweredByComponent.html":{},"license.html":{}}}],["company",{"_index":1586,"title":{},"body":{"contributing.html":{}}}],["company_name_org",{"_index":750,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["compilation",{"_index":1767,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":1809,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["compiling",{"_index":1804,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1600,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["completed",{"_index":1582,"title":{},"body":{"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["compliance",{"_index":2087,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1987,"title":{},"body":{"license.html":{}}}],["component",{"_index":249,"title":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzUIEventService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/themes.html":{}}}],["component(wc",{"_index":339,"title":{},"body":{"components/SzConfigurationComponent.html":{}}}],["component_template",{"_index":314,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["components",{"_index":10,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["components/public_api.d.ts",{"_index":1807,"title":{},"body":{"index.html":{}}}],["composite",{"_index":977,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["computer",{"_index":2048,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1815,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1550,"title":{},"body":{"contributing.html":{}}}],["conf').basepath",{"_index":349,"title":{},"body":{"components/SzConfigurationComponent.html":{}}}],["config",{"_index":259,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"injectables/SzConfigurationService.html":{},"changelog.html":{}}}],["configservice",{"_index":432,"title":{},"body":{"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"injectables/SzPdfUtilService.html":{},"injectables/SzSearchService.html":{},"injectables/SzUIEventService.html":{}}}],["configuration",{"_index":252,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["configuration'},{'name",{"_index":318,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["configuration.component.ts",{"_index":335,"title":{},"body":{"components/SzConfigurationComponent.html":{}}}],["configuration.service.ts",{"_index":387,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["configuration/sz",{"_index":334,"title":{},"body":{"components/SzConfigurationComponent.html":{}}}],["connect",{"_index":1789,"title":{},"body":{"index.html":{}}}],["connection",{"_index":258,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"injectables/SzConfigurationService.html":{},"index.html":{}}}],["connnecting",{"_index":361,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["consequential",{"_index":2041,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1549,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["console",{"_index":1786,"title":{},"body":{"index.html":{}}}],["console.log('@senzing/sz",{"_index":1737,"title":{},"body":{"index.html":{}}}],["console.log('api",{"_index":408,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["console.log('filter(s",{"_index":449,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["console.log('graph",{"_index":840,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["console.log('prefs",{"_index":1001,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["console.log('search",{"_index":1067,"title":{},"body":{"classes/SzSearchFormPrefs.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["conspicuously",{"_index":1904,"title":{},"body":{"license.html":{}}}],["constant",{"_index":1511,"title":{},"body":{"changelog.html":{}}}],["constitutes",{"_index":1947,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":179,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"injectables/SzEntityTypesService.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"injectables/SzUIEventService.html":{}}}],["constructor(adminservice",{"_index":180,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["constructor(apiconfigservice",{"_index":358,"title":{},"body":{"components/SzConfigurationComponent.html":{}}}],["constructor(apiconfiguration",{"_index":275,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["constructor(configservice",{"_index":431,"title":{},"body":{"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{}}}],["constructor(data",{"_index":1148,"title":{},"body":{"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolioItem.html":{}}}],["constructor(entitydataservice",{"_index":944,"title":{},"body":{"injectables/SzPdfUtilService.html":{},"injectables/SzSearchService.html":{},"injectables/SzUIEventService.html":{}}}],["constructor(items",{"_index":1112,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{}}}],["constructor(prefs",{"_index":490,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzFoliosService.html":{}}}],["constructor(private",{"_index":998,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["constructor(titlecasepipe",{"_index":1197,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["construed",{"_index":1983,"title":{},"body":{"license.html":{}}}],["consume",{"_index":1485,"title":{},"body":{"changelog.html":{}}}],["consumer",{"_index":990,"title":{},"body":{"injectables/SzPrefsService.html":{},"index.html":{}}}],["contain",{"_index":1073,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["contained",{"_index":1971,"title":{},"body":{"license.html":{}}}],["container",{"_index":639,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["containing",{"_index":784,"title":{},"body":{"classes/SzFolio.html":{}}}],["contains",{"_index":1769,"title":{},"body":{"index.html":{}}}],["content",{"_index":634,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"license.html":{}}}],["contents",{"_index":218,"title":{},"body":{"injectables/SzBulkDataService.html":{},"license.html":{}}}],["context",{"_index":206,"title":{},"body":{"injectables/SzBulkDataService.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{}}}],["contract",{"_index":1843,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1554,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1544,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contribution",{"_index":1547,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["contribution(s",{"_index":1937,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1989,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1580,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["contributory",{"_index":1948,"title":{},"body":{"license.html":{}}}],["control",{"_index":437,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"index.html":{},"license.html":{}}}],["controlled",{"_index":1832,"title":{},"body":{"license.html":{}}}],["controller",{"_index":1727,"title":{},"body":{"index.html":{}}}],["convenience",{"_index":823,"title":{},"body":{"injectables/SzFoliosService.html":{},"index.html":{}}}],["conventions",{"_index":1618,"title":{},"body":{"contributing.html":{}}}],["conversions",{"_index":1866,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1954,"title":{},"body":{"license.html":{}}}],["copy",{"_index":880,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"index.html":{},"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["copyright",{"_index":1825,"title":{},"body":{"license.html":{}}}],["core",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["corporate",{"_index":1584,"title":{},"body":{"contributing.html":{}}}],["correct",{"_index":1715,"title":{},"body":{"index.html":{}}}],["correctly",{"_index":112,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["corresponding",{"_index":987,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["cors",{"_index":376,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"index.html":{}}}],["counterclaim",{"_index":1944,"title":{},"body":{"license.html":{}}}],["create",{"_index":208,"title":{},"body":{"injectables/SzBulkDataService.html":{},"injectables/SzPdfUtilService.html":{},"classes/SzSearchFormPrefs.html":{},"contributing.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["created",{"_index":1130,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["createdatasources",{"_index":175,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["createdatasources(datasources",{"_index":207,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["createentitytypes",{"_index":176,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["createentitytypes(entitytypes",{"_index":210,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["createpdffromattributesearch",{"_index":942,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["createpdffromattributesearch(data",{"_index":947,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["createpdffromhtmlelement",{"_index":943,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["createpdffromhtmlelement(node",{"_index":953,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["creating",{"_index":939,"title":{},"body":{"injectables/SzPdfUtilService.html":{},"contributing.html":{},"additional-documentation/themes.html":{}}}],["critical",{"_index":1329,"title":{},"body":{"classes/SzServerError.html":{}}}],["cross",{"_index":1942,"title":{},"body":{"license.html":{}}}],["css",{"_index":707,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"changelog.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["csv",{"_index":1723,"title":{},"body":{"index.html":{}}}],["curl",{"_index":1790,"title":{},"body":{"index.html":{}}}],["current",{"_index":220,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzPrefsService.html":{},"components/SzSearchResultsComponent.html":{},"injectables/SzSearchService.html":{},"index.html":{}}}],["currentanalysis",{"_index":154,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["currenterror",{"_index":155,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["currentfile",{"_index":156,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["currentloadresult",{"_index":157,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["currently",{"_index":195,"title":{},"body":{"injectables/SzBulkDataService.html":{},"classes/SzSearchResultsPrefs.html":{},"index.html":{},"additional-documentation/themes/customizing.html":{}}}],["currentlyselectedentityid",{"_index":1734,"title":{},"body":{"index.html":{}}}],["currentsearchparameters",{"_index":1735,"title":{},"body":{"index.html":{}}}],["currentsearchresults",{"_index":1733,"title":{},"body":{"index.html":{}}}],["currentstate",{"_index":1002,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["cursor",{"_index":576,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["custom",{"_index":2109,"title":{},"body":{"additional-documentation/themes.html":{}}}],["customary",{"_index":2005,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":2153,"title":{"additional-documentation/themes/customizing.html":{}},"body":{"additional-documentation/themes/customizing.html":{}}}],["d3",{"_index":1525,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dadada",{"_index":583,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["damages",{"_index":2039,"title":{},"body":{"license.html":{}}}],["dark",{"_index":1251,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["dark2",{"_index":1249,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["data",{"_index":143,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"interfaces/SzNetworkGraphInputs.html":{},"injectables/SzPdfUtilService.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawDataMatches.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"changelog.html":{},"index.html":{}}}],["data.service.ts",{"_index":140,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["data.ts",{"_index":646,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"interfaces/SzRawData.html":{},"interfaces/SzSearchResultEntityData.html":{}}}],["data_source",{"_index":1039,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["datasouce",{"_index":522,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["datasource",{"_index":194,"title":{},"body":{"injectables/SzBulkDataService.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"components/SzSearchResultsComponent.html":{},"injectables/SzSearchService.html":{}}}],["datasourcecolors",{"_index":470,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"changelog.html":{}}}],["datasourcemap",{"_index":158,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["datasources",{"_index":209,"title":{},"body":{"injectables/SzBulkDataService.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"changelog.html":{}}}],["datasources.service.ts",{"_index":420,"title":{},"body":{"injectables/SzDataSourcesService.html":{}}}],["datasourcesfiltered",{"_index":471,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["datasourcesservice",{"_index":181,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["datasrc",{"_index":241,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["datastore",{"_index":978,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["date",{"_index":1335,"title":{},"body":{"classes/SzServerError.html":{},"license.html":{}}}],["date_of_birth",{"_index":751,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzRawData.html":{}}}],["dbdbdb",{"_index":2195,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["deal",{"_index":2143,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["debugging",{"_index":965,"title":{},"body":{"components/SzPoweredByComponent.html":{}}}],["decending",{"_index":1144,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["declarations",{"_index":15,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["declared",{"_index":921,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["decorators",{"_index":277,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["decoupling",{"_index":1462,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":222,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzFolio.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{}}}],["defend",{"_index":2066,"title":{},"body":{"license.html":{}}}],["defined",{"_index":1821,"title":{},"body":{"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["definition",{"_index":1835,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1818,"title":{},"body":{"license.html":{}}}],["degrees",{"_index":556,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["deleting",{"_index":1569,"title":{},"body":{"contributing.html":{}}}],["deliberate",{"_index":2034,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":1394,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":1465,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1494,"title":{},"body":{"changelog.html":{}}}],["derivative",{"_index":1875,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1877,"title":{},"body":{"license.html":{}}}],["describing",{"_index":2006,"title":{},"body":{"license.html":{}}}],["description",{"_index":7,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzUIEventService.html":{},"license.html":{}}}],["designated",{"_index":1906,"title":{},"body":{"license.html":{}}}],["designed",{"_index":1414,"title":{},"body":{"changelog.html":{}}}],["destination",{"_index":193,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["destroy",{"_index":177,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["destroyed",{"_index":512,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["detail",{"_index":320,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"classes/SzServerError.html":{},"changelog.html":{},"additional-documentation/themes/customizing.html":{}}}],["detail'},{'name",{"_index":319,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["determining",{"_index":2024,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1745,"title":{},"body":{"index.html":{}}}],["developer",{"_index":1785,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1684,"title":{},"body":{"index.html":{}}}],["development",{"_index":1602,"title":{},"body":{"contributing.html":{}}}],["diagnostics",{"_index":380,"title":{},"body":{"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{}}}],["different",{"_index":1986,"title":{},"body":{"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["direct",{"_index":1838,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1841,"title":{},"body":{"license.html":{}}}],["directives",{"_index":332,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["directly",{"_index":1408,"title":{},"body":{"changelog.html":{},"additional-documentation/themes/pre-built.html":{}}}],["directory",{"_index":1774,"title":{},"body":{"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["directory(probably",{"_index":2131,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["disable",{"_index":1091,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["disablesearchhistory",{"_index":1069,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["disclaimer",{"_index":2009,"title":{},"body":{"license.html":{}}}],["disclosed",{"_index":2167,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["disclosedrelationships",{"_index":1155,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["discoveredrelationships",{"_index":1156,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{}}}],["discretion",{"_index":1627,"title":{},"body":{"contributing.html":{}}}],["discussing",{"_index":1901,"title":{},"body":{"license.html":{}}}],["display",{"_index":289,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"license.html":{},"additional-documentation/themes/customizing.html":{}}}],["displayed",{"_index":500,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["displaying",{"_index":669,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{}}}],["displays",{"_index":673,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["dist/@senzing/sdk",{"_index":1806,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1925,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1973,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1817,"title":{},"body":{"license.html":{}}}],["div",{"_index":1535,"title":{},"body":{"changelog.html":{}}}],["dob",{"_index":1274,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["docker",{"_index":1502,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["docs",{"_index":2108,"title":{},"body":{"additional-documentation/themes.html":{}}}],["document",{"_index":1646,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["document.getelementbyid('forminput').addeventlistener('resultchange",{"_index":678,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["document.getelementbyid('formresult').record",{"_index":680,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["document.getelementbyid('sz",{"_index":348,"title":{},"body":{"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["documentation",{"_index":1506,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":1349,"title":{},"body":{"changelog.html":{}}}],["documents",{"_index":2104,"title":{},"body":{"additional-documentation/themes.html":{}}}],["dom",{"_index":1205,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["don't",{"_index":2078,"title":{},"body":{"license.html":{}}}],["done",{"_index":403,"title":{},"body":{"injectables/SzConfigurationService.html":{},"index.html":{}}}],["double",{"_index":1713,"title":{},"body":{"index.html":{}}}],["down",{"_index":1446,"title":{},"body":{"changelog.html":{}}}],["download",{"_index":1696,"title":{},"body":{"index.html":{}}}],["downloadable",{"_index":951,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["downs",{"_index":1093,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["drab",{"_index":2151,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["drawer",{"_index":567,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["drifting",{"_index":1487,"title":{},"body":{"changelog.html":{}}}],["drivers_license_number",{"_index":752,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzRawData.html":{}}}],["drivers_license_state",{"_index":753,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzRawData.html":{}}}],["drop",{"_index":1092,"title":{},"body":{"classes/SzSearchFormPrefs.html":{},"changelog.html":{}}}],["dsname",{"_index":529,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzSearchService.html":{}}}],["dsrc_action",{"_index":1040,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["during",{"_index":868,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["dynamic",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":388,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["e1e1e1",{"_index":296,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["e2e",{"_index":1505,"title":{},"body":{"changelog.html":{}}}],["e5e5e5",{"_index":2183,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["e7e0e0",{"_index":736,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["each",{"_index":501,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"index.html":{},"license.html":{}}}],["eaeaea",{"_index":2194,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["easier",{"_index":2082,"title":{},"body":{"license.html":{},"additional-documentation/themes.html":{}}}],["easiest",{"_index":676,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"index.html":{}}}],["easy",{"_index":1690,"title":{},"body":{"index.html":{},"additional-documentation/themes/customizing.html":{}}}],["editing",{"_index":2156,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["editorial",{"_index":1878,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":1881,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1892,"title":{},"body":{"license.html":{}}}],["element",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["ellipsis",{"_index":1286,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["email_address",{"_index":754,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{}}}],["emailaddress",{"_index":931,"title":{},"body":{"interfaces/SzMatchFields.html":{}}}],["embeddable",{"_index":1413,"title":{},"body":{"changelog.html":{}}}],["embedded",{"_index":1293,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{},"changelog.html":{}}}],["emitter",{"_index":1208,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["emmitted",{"_index":377,"title":{},"body":{"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{}}}],["empty",{"_index":861,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["enclosed",{"_index":2074,"title":{},"body":{"license.html":{}}}],["encourage",{"_index":1546,"title":{},"body":{"contributing.html":{}}}],["end",{"_index":976,"title":{},"body":{"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"license.html":{}}}],["engine",{"_index":234,"title":{},"body":{"injectables/SzBulkDataService.html":{},"index.html":{}}}],["enhancements",{"_index":1463,"title":{},"body":{"changelog.html":{}}}],["enitity",{"_index":566,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["enity",{"_index":242,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["ent",{"_index":1014,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["entirely",{"_index":2155,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["entities",{"_index":555,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"license.html":{}}}],["entitities",{"_index":925,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["entity",{"_index":201,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzGraphPrefs.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/themes/customizing.html":{}}}],["entity_key",{"_index":1041,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["entity_name",{"_index":1042,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["entity_type",{"_index":1043,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["entityclass",{"_index":779,"title":{},"body":{"injectables/SzEntityTypesService.html":{}}}],["entitydata",{"_index":1741,"title":{},"body":{"index.html":{}}}],["entitydata.entityid",{"_index":1742,"title":{},"body":{"index.html":{}}}],["entitydatamatches",{"_index":1157,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["entitydataservice",{"_index":945,"title":{},"body":{"injectables/SzPdfUtilService.html":{},"injectables/SzSearchService.html":{},"injectables/SzUIEventService.html":{}}}],["entitydetail",{"_index":1017,"title":{},"body":{"injectables/SzPrefsService.html":{},"interfaces/SzSdkPrefsModel.html":{}}}],["entityid",{"_index":650,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzSearchResultEntityData.html":{},"injectables/SzSearchService.html":{}}}],["entityidchange",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["entitytypemap",{"_index":159,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["entitytypes",{"_index":211,"title":{},"body":{"injectables/SzBulkDataService.html":{},"injectables/SzEntityTypesService.html":{}}}],["entitytypes.service.ts",{"_index":774,"title":{},"body":{"injectables/SzEntityTypesService.html":{}}}],["entitytypesservice",{"_index":182,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["entrycomponents",{"_index":27,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["enumerations",{"_index":1663,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1603,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":228,"title":{},"body":{"injectables/SzBulkDataService.html":{},"index.html":{}}}],["error.ts",{"_index":1328,"title":{},"body":{"classes/SzServerError.html":{}}}],["errule_code",{"_index":1044,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["escape",{"_index":2145,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["essentially",{"_index":2101,"title":{},"body":{"additional-documentation/themes.html":{}}}],["established",{"_index":1565,"title":{},"body":{"contributing.html":{}}}],["etc",{"_index":1084,"title":{},"body":{"classes/SzSearchFormPrefs.html":{},"injectables/SzUIEventService.html":{}}}],["even",{"_index":2053,"title":{},"body":{"license.html":{}}}],["event",{"_index":212,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzPrefsService.html":{},"components/SzSearchResultsComponent.html":{},"license.html":{}}}],["eventemitter",{"_index":503,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["eventing",{"_index":1342,"title":{},"body":{"injectables/SzUIEventService.html":{}}}],["events",{"_index":869,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{}}}],["evt",{"_index":1182,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"index.html":{}}}],["evt.data",{"_index":681,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["evt.detail",{"_index":1184,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["exactly",{"_index":1424,"title":{},"body":{"changelog.html":{}}}],["example",{"_index":60,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"injectables/SzEntityTypesService.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzUIEventService.html":{},"license.html":{}}}],["example/admin",{"_index":1378,"title":{},"body":{"changelog.html":{}}}],["example/search",{"_index":1406,"title":{},"body":{"changelog.html":{}}}],["examples",{"_index":1377,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["except",{"_index":1927,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1903,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1916,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1996,"title":{},"body":{"license.html":{}}}],["executes",{"_index":1076,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["exercise",{"_index":2029,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1853,"title":{},"body":{"license.html":{}}}],["existing",{"_index":1135,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"changelog.html":{},"index.html":{},"additional-documentation/themes/customizing.html":{}}}],["exists",{"_index":796,"title":{},"body":{"classes/SzFolio.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{}}}],["exists(item",{"_index":1128,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["explanation",{"_index":1781,"title":{},"body":{"index.html":{}}}],["explicitly",{"_index":1991,"title":{},"body":{"license.html":{}}}],["explicity",{"_index":920,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["export",{"_index":61,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzPrefsService.html":{},"contributing.html":{},"index.html":{}}}],["exportable",{"_index":1765,"title":{},"body":{"index.html":{}}}],["exports",{"_index":40,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["express",{"_index":2017,"title":{},"body":{"license.html":{}}}],["extends",{"_index":835,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{}}}],["extra",{"_index":1537,"title":{},"body":{"changelog.html":{}}}],["extraneous",{"_index":1534,"title":{},"body":{"changelog.html":{}}}],["f7f7f7",{"_index":720,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["f8f8f8",{"_index":730,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["facilitate",{"_index":1360,"title":{},"body":{"changelog.html":{}}}],["factors",{"_index":1504,"title":{},"body":{"changelog.html":{}}}],["factory",{"_index":49,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzConfigurationService.html":{},"index.html":{}}}],["failure",{"_index":2049,"title":{},"body":{"license.html":{}}}],["false",{"_index":232,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{}}}],["family",{"_index":1226,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["favorite",{"_index":1275,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["feature",{"_index":1419,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["features",{"_index":651,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{},"changelog.html":{},"contributing.html":{}}}],["fee",{"_index":2056,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":414,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["fff",{"_index":613,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["ffffff",{"_index":2170,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["fields",{"_index":2073,"title":{},"body":{"license.html":{}}}],["fields.ts",{"_index":930,"title":{},"body":{"interfaces/SzMatchFields.html":{}}}],["fifty",{"_index":1847,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/SenzingSdkModule.html":{},"classes/SzBulkDataAnalysis.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzMatchFields.html":{},"interfaces/SzNetworkGraphInputs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"injectables/SzUIEventService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["file(src/styles.scss",{"_index":2124,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["filed",{"_index":1952,"title":{},"body":{"license.html":{}}}],["filename",{"_index":955,"title":{},"body":{"injectables/SzPdfUtilService.html":{},"changelog.html":{}}}],["files",{"_index":217,"title":{},"body":{"injectables/SzBulkDataService.html":{},"injectables/SzPdfUtilService.html":{},"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["filter",{"_index":450,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["filter').addeventlistener('optionchanged",{"_index":447,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["filter'},{'name",{"_index":322,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["filter.component.html",{"_index":452,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["filter.component.scss",{"_index":451,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["filter.component.ts",{"_index":436,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["filterbydatasourcesdata",{"_index":488,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["filterbydatasourcesform",{"_index":456,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["filtered",{"_index":882,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["filtering",{"_index":441,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["filters",{"_index":497,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["find",{"_index":2137,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["first",{"_index":855,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["fitness",{"_index":2021,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1469,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":1486,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":305,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["focus",{"_index":205,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"changelog.html":{},"additional-documentation/themes/customizing.html":{}}}],["focused",{"_index":550,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{}}}],["folder",{"_index":1495,"title":{},"body":{"changelog.html":{}}}],["folio",{"_index":793,"title":{},"body":{"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"changelog.html":{}}}],["folioitemsfromjson",{"_index":1109,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["folioitemsfromjson(itemsjson",{"_index":1129,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["folios",{"_index":804,"title":{},"body":{"injectables/SzFoliosService.html":{},"classes/SzSearchHistoryFolio.html":{}}}],["folios.service.ts",{"_index":802,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["follow",{"_index":1622,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["following",{"_index":1551,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["font",{"_index":297,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["force",{"_index":693,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["forcelayout",{"_index":687,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["fork",{"_index":1624,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":534,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzSearchFormPrefs.html":{},"license.html":{}}}],["format",{"_index":149,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzPoweredByComponent.html":{},"changelog.html":{},"license.html":{}}}],["formbuilder",{"_index":491,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["formgroup",{"_index":533,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["forroot",{"_index":43,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["forroot(apiconfigfactory",{"_index":44,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["found",{"_index":1218,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"index.html":{}}}],["fragment",{"_index":672,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["free",{"_index":1919,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":440,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["fromdatasource",{"_index":198,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["fromentitytype",{"_index":202,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["fromjsonobject",{"_index":845,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["fromjsonobject(data",{"_index":1132,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["fromjsonobject(value",{"_index":875,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["fromjsonstring",{"_index":1020,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["fromjsonstring(value",{"_index":1022,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["fromparameters",{"_index":412,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["fromparameters(value",{"_index":416,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["fromserver",{"_index":1331,"title":{},"body":{"classes/SzServerError.html":{}}}],["fromserver(source",{"_index":1336,"title":{},"body":{"classes/SzServerError.html":{}}}],["fromserverarray",{"_index":1332,"title":{},"body":{"classes/SzServerError.html":{}}}],["fromserverarray(sourcearray",{"_index":1337,"title":{},"body":{"classes/SzServerError.html":{}}}],["fun",{"_index":1748,"title":{},"body":{"index.html":{}}}],["function",{"_index":58,"title":{},"body":{"modules/SenzingSdkModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["function(data",{"_index":448,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["function(evt",{"_index":679,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["functionality",{"_index":1078,"title":{},"body":{"classes/SzSearchFormPrefs.html":{},"changelog.html":{},"index.html":{}}}],["functions",{"_index":1670,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1496,"title":{},"body":{"changelog.html":{}}}],["gateway",{"_index":1719,"title":{},"body":{"index.html":{}}}],["gender",{"_index":755,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzRawData.html":{}}}],["generated",{"_index":88,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{},"license.html":{}}}],["generic",{"_index":798,"title":{},"body":{"classes/SzFolioItem.html":{}}}],["getallowedtypeattributes",{"_index":1100,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["getattributetypes",{"_index":1304,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["getbasepath",{"_index":418,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["getbuildout",{"_index":913,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["getcolorsbydatasourcesdata",{"_index":543,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["getdata",{"_index":800,"title":{},"body":{"classes/SzFolioItem.html":{},"classes/SzSearchParamsFolioItem.html":{}}}],["getdatasourcecolors",{"_index":892,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["getdatasources",{"_index":459,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["getdatasourcesfiltered",{"_index":916,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["getdisablesearchhistory",{"_index":1090,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["getdiscoveredrelationships",{"_index":1213,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["getentitybyid",{"_index":1305,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["getentitybyid(entityid",{"_index":1313,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["getentitybyrecordid",{"_index":1306,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["getentitybyrecordid(dsname",{"_index":1316,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["getfile",{"_index":247,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["getfilterbydatasourcesdata",{"_index":541,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["gethistory",{"_index":1142,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["getjsonviewactive",{"_index":718,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["getlayoutclasses",{"_index":713,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["getlinktoembeddedgraph",{"_index":1295,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["getmappingattributes",{"_index":1307,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["getmatches",{"_index":1211,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["getmaxdegreesofseparation",{"_index":908,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["getmaxentities",{"_index":911,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["getname",{"_index":1149,"title":{},"body":{"classes/SzSearchHistoryFolioItem.html":{}}}],["getnameonlymatches",{"_index":1214,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["getneverfilterqueriedentityids",{"_index":918,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["getopeninnewtab",{"_index":885,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["getopeninsidepanel",{"_index":888,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["getoverviewactive",{"_index":716,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["getpossiblematches",{"_index":1212,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["getpropsasarray",{"_index":273,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["getqueriedentitiescolor",{"_index":924,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["getrememberlastsearches",{"_index":1085,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["getrememberstateoptions",{"_index":902,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["gets",{"_index":1143,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["getsavedsearches",{"_index":1095,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["getsearch_history",{"_index":822,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["getsearchhistory",{"_index":1098,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["getsearchparams",{"_index":1308,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["getsearchresults",{"_index":1209,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"injectables/SzSearchService.html":{}}}],["getsearchresultstotal",{"_index":1217,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["getsearchvalue",{"_index":1215,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["getshowcharacteristicdata",{"_index":1273,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["getshowembeddedgraph",{"_index":1292,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["getshowidentifierdata",{"_index":1271,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["getshowlinklabels",{"_index":539,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["getshowmatchkeys",{"_index":898,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["getshowotherdata",{"_index":1269,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["getshowrecordids",{"_index":1278,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["getter",{"_index":714,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"injectables/SzFoliosService.html":{}}}],["getting",{"_index":904,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{"classes/SzGraphPrefs.html":{}}}],["gettruncatecharacteristicdataat",{"_index":1290,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["gettruncateidentifierdataat",{"_index":1299,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["gettruncateotherdataat",{"_index":1288,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["gettruncaterecordsat",{"_index":1282,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["git",{"_index":1563,"title":{},"body":{"contributing.html":{}}}],["git_account=senzing",{"_index":1606,"title":{},"body":{"contributing.html":{}}}],["git_account_dir",{"_index":1614,"title":{},"body":{"contributing.html":{}}}],["git_account_dir=~/${git_account}.git",{"_index":1609,"title":{},"body":{"contributing.html":{}}}],["git_repository=sdk",{"_index":1607,"title":{},"body":{"contributing.html":{}}}],["git_repository_dir=\"${git_account_dir}/${git_repository",{"_index":1610,"title":{},"body":{"contributing.html":{}}}],["git_repository_dir}coding",{"_index":1617,"title":{},"body":{"contributing.html":{}}}],["git_repository_url",{"_index":1616,"title":{},"body":{"contributing.html":{}}}],["git_repository_url=\"git@github.com:${git_account}/${git_repository}.git\"clone",{"_index":1611,"title":{},"body":{"contributing.html":{}}}],["github",{"_index":1590,"title":{},"body":{"contributing.html":{}}}],["github's",{"_index":1623,"title":{},"body":{"contributing.html":{}}}],["give",{"_index":1956,"title":{},"body":{"license.html":{}}}],["gives",{"_index":1689,"title":{},"body":{"index.html":{}}}],["glance",{"_index":1483,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":389,"title":{},"body":{"injectables/SzConfigurationService.html":{},"injectables/SzUIEventService.html":{}}}],["go",{"_index":1778,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":2046,"title":{},"body":{"license.html":{}}}],["governing",{"_index":2091,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1911,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1855,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1828,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1913,"title":{},"body":{"license.html":{}}}],["graph",{"_index":321,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzNetworkGraphInputs.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzSdkPrefsModel.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{},"dependencies.html":{}}}],["graph/sz",{"_index":435,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["graphapiconfigservice",{"_index":409,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["graphical",{"_index":1177,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["graphs",{"_index":1492,"title":{},"body":{"changelog.html":{}}}],["green",{"_index":1244,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["greeted",{"_index":1750,"title":{},"body":{"index.html":{}}}],["grossly",{"_index":2035,"title":{},"body":{"license.html":{}}}],["group",{"_index":535,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["gt",{"_index":1029,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["guide",{"_index":1552,"title":{},"body":{"contributing.html":{}}}],["h3:first",{"_index":579,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["handled",{"_index":2100,"title":{},"body":{"additional-documentation/themes.html":{}}}],["handler",{"_index":514,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{}}}],["happened",{"_index":841,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["happens(ie",{"_index":983,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["hard",{"_index":552,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["hardcoded",{"_index":1115,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["harmless",{"_index":2068,"title":{},"body":{"license.html":{}}}],["head",{"_index":2128,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["header",{"_index":291,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["health",{"_index":1250,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["height",{"_index":598,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["help",{"_index":1688,"title":{},"body":{"index.html":{}}}],["helper",{"_index":509,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["helvetica",{"_index":2181,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["here",{"_index":1773,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1912,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1994,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":607,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["hidden/not",{"_index":1542,"title":{},"body":{"changelog.html":{}}}],["hide",{"_index":734,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["hides",{"_index":1200,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["highlighting",{"_index":1442,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":1297,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["history",{"_index":807,"title":{},"body":{"injectables/SzFoliosService.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"changelog.html":{}}}],["hit",{"_index":1793,"title":{},"body":{"index.html":{}}}],["hold",{"_index":2067,"title":{},"body":{"license.html":{}}}],["holds",{"_index":816,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["home_addr_full",{"_index":1045,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["hops",{"_index":548,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["host",{"_index":282,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["hostbindings",{"_index":482,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["hostname",{"_index":1795,"title":{},"body":{"index.html":{}}}],["hover",{"_index":577,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzUIEventService.html":{},"changelog.html":{},"additional-documentation/themes/customizing.html":{}}}],["hr",{"_index":582,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["html",{"_index":116,"title":{},"body":{"modules/SenzingSdkModule.html":{},"additional-documentation/themes/pre-built.html":{}}}],["html2canvas",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["htmlelement",{"_index":954,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["http",{"_index":366,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"dependencies.html":{}}}],["http://api.mydomain.com",{"_index":399,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["http://api.mydomain.com/subsection",{"_index":400,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["http://apis.mydomain.com",{"_index":350,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["http://attribute",{"_index":1783,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1764,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/heartbeat",{"_index":1791,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses",{"_index":1814,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":2089,"title":{},"body":{"license.html":{}}}],["https",{"_index":367,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["https://github.com/senzing/senzing",{"_index":424,"title":{},"body":{"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{}}}],["human",{"_index":260,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["i.e",{"_index":1763,"title":{},"body":{"index.html":{}}}],["icla",{"_index":1581,"title":{},"body":{"contributing.html":{}}}],["icon",{"_index":1405,"title":{},"body":{"changelog.html":{},"additional-documentation/themes/customizing.html":{}}}],["id",{"_index":671,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"changelog.html":{}}}],["id'},{'name",{"_index":328,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["idea",{"_index":2133,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["identification",{"_index":2083,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":756,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{}}}],["identifier_type",{"_index":757,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["identifierdata",{"_index":652,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["identifierdatamatches",{"_index":1158,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["identifiers",{"_index":1445,"title":{},"body":{"changelog.html":{}}}],["identifying",{"_index":2077,"title":{},"body":{"license.html":{}}}],["ids",{"_index":1279,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["ie",{"_index":144,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["ignore",{"_index":695,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["ignored",{"_index":1121,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["ignoring",{"_index":1472,"title":{},"body":{"changelog.html":{}}}],["ii",{"_index":1845,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1851,"title":{},"body":{"license.html":{}}}],["illustrated",{"_index":2150,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["image",{"_index":1503,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":1725,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":1422,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["implementations",{"_index":342,"title":{},"body":{"components/SzConfigurationComponent.html":{}}}],["implemented",{"_index":1280,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["implements",{"_index":263,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["implied",{"_index":2018,"title":{},"body":{"license.html":{}}}],["import",{"_index":91,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"injectables/SzPrefsService.html":{},"components/SzSearchResultsComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["importing",{"_index":1024,"title":{},"body":{"injectables/SzPrefsService.html":{},"changelog.html":{}}}],["importing.ts",{"_index":1666,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imports",{"_index":13,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["improving",{"_index":1902,"title":{},"body":{"license.html":{}}}],["in_progress",{"_index":1668,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inability",{"_index":2044,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":721,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["inc",{"_index":1628,"title":{},"body":{"contributing.html":{}}}],["incidental",{"_index":2040,"title":{},"body":{"license.html":{}}}],["include",{"_index":1440,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["included",{"_index":1872,"title":{},"body":{"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["includes",{"_index":1970,"title":{},"body":{"license.html":{}}}],["including",{"_index":1859,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1891,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1910,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":2069,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2065,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2058,"title":{},"body":{"license.html":{}}}],["index",{"_index":125,"title":{"index.html":{}},"body":{"classes/SzBulkDataAnalysis.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzMatchFields.html":{},"interfaces/SzNetworkGraphInputs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["indexof",{"_index":1110,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["indexof(item",{"_index":1134,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["indicated",{"_index":1870,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1839,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1323,"title":{},"body":{"injectables/SzSearchService.html":{},"contributing.html":{},"license.html":{}}}],["inference",{"_index":1468,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/SenzingSdkModule.html":{},"classes/SzBulkDataAnalysis.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzMatchFields.html":{},"interfaces/SzNetworkGraphInputs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"injectables/SzUIEventService.html":{}}}],["information",{"_index":674,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/themes.html":{}}}],["informational",{"_index":1979,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1936,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1949,"title":{},"body":{"license.html":{}}}],["inheirited",{"_index":504,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["initial",{"_index":858,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["initialize",{"_index":47,"title":{},"body":{"modules/SenzingSdkModule.html":{},"classes/SzSearchFormPrefs.html":{}}}],["initialized",{"_index":402,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["inject(local_storage",{"_index":1006,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["inject(szrestconfiguration",{"_index":278,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["injectable",{"_index":136,"title":{"injectables/SzBulkDataService.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"injectables/SzFoliosService.html":{},"injectables/SzPdfUtilService.html":{},"injectables/SzPrefsService.html":{},"injectables/SzSearchService.html":{},"injectables/SzUIEventService.html":{}},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["injectables",{"_index":137,"title":{},"body":{"injectables/SzBulkDataService.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"injectables/SzFoliosService.html":{},"injectables/SzPdfUtilService.html":{},"injectables/SzPrefsService.html":{},"injectables/SzSearchService.html":{},"injectables/SzUIEventService.html":{},"overview.html":{}}}],["inline",{"_index":290,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["input",{"_index":240,"title":{},"body":{"injectables/SzBulkDataService.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["input[type=checkbox",{"_index":595,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["input[type=color",{"_index":601,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["inputs",{"_index":351,"title":{},"body":{"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["inputs.ts",{"_index":935,"title":{},"body":{"interfaces/SzNetworkGraphInputs.html":{}}}],["inset",{"_index":311,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["insights",{"_index":1245,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["inspector",{"_index":2157,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["install",{"_index":79,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["installation",{"_index":71,"title":{},"body":{"modules/SenzingSdkModule.html":{},"contributing.html":{},"index.html":{}}}],["instance",{"_index":53,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzPrefsService.html":{},"changelog.html":{},"index.html":{}}}],["instances",{"_index":1083,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["instead",{"_index":860,"title":{},"body":{"classes/SzGraphPrefs.html":{},"contributing.html":{}}}],["institute",{"_index":1940,"title":{},"body":{"license.html":{}}}],["instructions",{"_index":1625,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["integer",{"_index":524,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["integrated",{"_index":443,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["integrating",{"_index":1407,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":337,"title":{},"body":{"components/SzConfigurationComponent.html":{},"changelog.html":{},"index.html":{}}}],["intentionally",{"_index":1890,"title":{},"body":{"license.html":{}}}],["interacting",{"_index":786,"title":{},"body":{"classes/SzFolio.html":{},"index.html":{}}}],["interchangeable",{"_index":508,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["interface",{"_index":642,"title":{"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"interfaces/SzEntitySearchParams.html":{},"interfaces/SzMatchFields.html":{},"interfaces/SzNetworkGraphInputs.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"interfaces/SzSearchResultEntityData.html":{}},"body":{"changelog.html":{}}}],["interfaces",{"_index":644,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"interfaces/SzEntitySearchParams.html":{},"interfaces/SzMatchFields.html":{},"interfaces/SzNetworkGraphInputs.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"interfaces/SzSearchResultEntityData.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["intermediary",{"_index":958,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["internally",{"_index":1137,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"miscellaneous/functions.html":{}}}],["intval",{"_index":589,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["irrevocable",{"_index":1920,"title":{},"body":{"license.html":{}}}],["isanalyzingfile",{"_index":160,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["isloadingfile",{"_index":161,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["isopen",{"_index":457,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["issue",{"_index":1513,"title":{},"body":{"changelog.html":{},"contributing.html":{},"license.html":{}}}],["issues",{"_index":1473,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["it's",{"_index":833,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{}}}],["item",{"_index":574,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{}}}],["items",{"_index":789,"title":{},"body":{"classes/SzFolio.html":{},"components/SzPoweredByComponent.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"components/SzSearchResultsComponent.html":{}}}],["itemsjson",{"_index":1131,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["itself",{"_index":675,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["january",{"_index":1812,"title":{},"body":{"license.html":{}}}],["java",{"_index":1694,"title":{},"body":{"index.html":{}}}],["js",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":698,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["jsonkeys",{"_index":842,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["jsonscrubber",{"_index":1671,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jsonscrubber(value",{"_index":1674,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jsonviewactive",{"_index":692,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["jspdf",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":971,"title":{},"body":{"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["keep",{"_index":1138,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"changelog.html":{}}}],["kept",{"_index":1571,"title":{},"body":{"contributing.html":{}}}],["key",{"_index":2102,"title":{},"body":{"additional-documentation/themes.html":{}}}],["keys",{"_index":532,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"miscellaneous/functions.html":{}}}],["keys/edge",{"_index":899,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["kind",{"_index":2016,"title":{},"body":{"license.html":{}}}],["know",{"_index":1779,"title":{},"body":{"index.html":{}}}],["label",{"_index":578,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["labels",{"_index":486,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["language",{"_index":2090,"title":{},"body":{"license.html":{}}}],["last",{"_index":226,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"injectables/SzSearchService.html":{}}}],["law",{"_index":2012,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1945,"title":{},"body":{"license.html":{}}}],["layout",{"_index":694,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"changelog.html":{},"additional-documentation/themes/pre-built.html":{}}}],["layoutclasses",{"_index":688,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["leave",{"_index":2134,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["left",{"_index":592,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["legal",{"_index":1829,"title":{},"body":{"license.html":{}}}],["len",{"_index":1141,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["length",{"_index":1140,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["lens",{"_index":1046,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["lensid",{"_index":653,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["level",{"_index":627,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzFoliosService.html":{},"interfaces/SzSdkPrefsModel.html":{},"injectables/SzUIEventService.html":{}}}],["li",{"_index":573,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{}}}],["li.json",{"_index":738,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["li.overview",{"_index":735,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["liability",{"_index":2030,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2038,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":1934,"title":{},"body":{"license.html":{}}}],["license",{"_index":1560,"title":{"license.html":{}},"body":{"contributing.html":{},"license.html":{}}}],["license.you",{"_index":1984,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":2086,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1950,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1824,"title":{},"body":{"license.html":{}}}],["lifecycle(ie",{"_index":395,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["limit",{"_index":553,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["limitation",{"_index":2019,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2092,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1860,"title":{},"body":{"license.html":{}}}],["line",{"_index":972,"title":{},"body":{"components/SzPoweredByComponent.html":{},"index.html":{},"additional-documentation/themes/customizing.html":{}}}],["lines",{"_index":546,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["link",{"_index":485,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"license.html":{}}}],["linktoembeddedgraph",{"_index":1267,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["list",{"_index":511,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzSearchFormPrefs.html":{},"components/SzSearchResultsComponent.html":{},"injectables/SzSearchService.html":{},"index.html":{},"additional-documentation/themes.html":{}}}],["listdatasources",{"_index":429,"title":{},"body":{"injectables/SzDataSourcesService.html":{}}}],["listdatasourcesdetails",{"_index":430,"title":{},"body":{"injectables/SzDataSourcesService.html":{}}}],["listend",{"_index":820,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["listentitytypes",{"_index":776,"title":{},"body":{"injectables/SzEntityTypesService.html":{}}}],["listentitytypesdetails",{"_index":777,"title":{},"body":{"injectables/SzEntityTypesService.html":{}}}],["lists",{"_index":256,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzSearchResultsComponent.html":{},"license.html":{}}}],["literal",{"_index":215,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"interfaces/SzEntityDetailSectionData.html":{},"classes/SzSearchHistoryFolio.html":{},"components/SzSearchResultsComponent.html":{}}}],["litigation",{"_index":1941,"title":{},"body":{"license.html":{}}}],["little",{"_index":630,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["load",{"_index":147,"title":{},"body":{"injectables/SzBulkDataService.html":{},"injectables/SzPrefsService.html":{},"index.html":{}}}],["load(file",{"_index":214,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["load_id",{"_index":1047,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["loaded",{"_index":233,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["loading",{"_index":1358,"title":{},"body":{"changelog.html":{}}}],["loadingfile",{"_index":162,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["local",{"_index":1004,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["localhost",{"_index":1762,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":996,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["located",{"_index":2117,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["location",{"_index":825,"title":{},"body":{"injectables/SzFoliosService.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["logic",{"_index":1082,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["logo",{"_index":1712,"title":{},"body":{"index.html":{}}}],["longer",{"_index":1443,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":2045,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2052,"title":{},"body":{"license.html":{}}}],["ls",{"_index":1009,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["macos",{"_index":1685,"title":{},"body":{"index.html":{}}}],["made",{"_index":1869,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1896,"title":{},"body":{"license.html":{}}}],["main",{"_index":85,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/pre-built.html":{}}}],["make",{"_index":1686,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/themes/customizing.html":{}}}],["making",{"_index":1857,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2050,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1899,"title":{},"body":{"license.html":{}}}],["management",{"_index":1579,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["manipulate",{"_index":142,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["manipulating",{"_index":940,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["manner",{"_index":1548,"title":{},"body":{"contributing.html":{}}}],["many",{"_index":554,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["map",{"_index":146,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["mapped",{"_index":197,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["mapping",{"_index":188,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["margin",{"_index":301,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["markdownlint",{"_index":1350,"title":{},"body":{"changelog.html":{}}}],["marked",{"_index":1905,"title":{},"body":{"license.html":{}}}],["marks",{"_index":2001,"title":{},"body":{"license.html":{}}}],["markup",{"_index":1536,"title":{},"body":{"changelog.html":{}}}],["master",{"_index":1620,"title":{},"body":{"contributing.html":{}}}],["match",{"_index":531,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["match_key",{"_index":1048,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["match_level",{"_index":1049,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["match_score",{"_index":1050,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["matches",{"_index":1193,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"changelog.html":{},"additional-documentation/themes/customizing.html":{}}}],["matches.ts",{"_index":1059,"title":{},"body":{"interfaces/SzRawDataMatches.html":{}}}],["matching",{"_index":119,"title":{},"body":{"modules/SenzingSdkModule.html":{},"classes/SzBulkDataAnalysis.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzMatchFields.html":{},"interfaces/SzNetworkGraphInputs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"injectables/SzUIEventService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["matchkey",{"_index":654,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["matchlevel",{"_index":655,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["matchscore",{"_index":1159,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["max",{"_index":551,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["maxdegreesofseparation",{"_index":472,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["maxentities",{"_index":473,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["maximum",{"_index":557,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["maxitems",{"_index":1107,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["maybe",{"_index":1746,"title":{},"body":{"index.html":{}}}],["mean",{"_index":1820,"title":{},"body":{"license.html":{}}}],["means",{"_index":1836,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1863,"title":{},"body":{"license.html":{}}}],["media",{"_index":1867,"title":{},"body":{"license.html":{}}}],["mediatype",{"_index":129,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{}}}],["medium",{"_index":710,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"license.html":{}}}],["meet",{"_index":1955,"title":{},"body":{"license.html":{}}}],["member",{"_index":863,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["members",{"_index":883,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["memory",{"_index":993,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["merchantability",{"_index":2020,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1887,"title":{},"body":{"license.html":{}}}],["message",{"_index":700,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"classes/SzServerError.html":{}}}],["messages",{"_index":1782,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":265,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["method",{"_index":50,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzPrefsService.html":{},"index.html":{}}}],["methods",{"_index":41,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"index.html":{}}}],["min",{"_index":1239,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"changelog.html":{}}}],["miscellaneous",{"_index":1662,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["misses",{"_index":1803,"title":{},"body":{"index.html":{}}}],["mkdir",{"_index":1612,"title":{},"body":{"contributing.html":{}}}],["mode",{"_index":1116,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["model",{"_index":742,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzSdkPrefsModel.html":{},"classes/SzSearchHistoryFolio.html":{},"injectables/SzSearchService.html":{},"index.html":{}}}],["models",{"_index":941,"title":{},"body":{"injectables/SzPdfUtilService.html":{},"changelog.html":{}}}],["models/classes",{"_index":1368,"title":{},"body":{"changelog.html":{}}}],["modifications",{"_index":1858,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1417,"title":{},"body":{"changelog.html":{},"contributing.html":{},"license.html":{}}}],["modifies",{"_index":1562,"title":{},"body":{"contributing.html":{}}}],["modify",{"_index":1980,"title":{},"body":{"license.html":{},"additional-documentation/themes/customizing.html":{}}}],["modifying",{"_index":1568,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["module",{"_index":0,"title":{"modules/SenzingSdkModule.html":{}},"body":{"modules/SenzingSdkModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/SenzingSdkModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":70,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["more",{"_index":345,"title":{},"body":{"components/SzConfigurationComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/themes.html":{}}}],["mostly",{"_index":379,"title":{},"body":{"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{}}}],["mouse",{"_index":637,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["moved",{"_index":1119,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"changelog.html":{}}}],["much",{"_index":2097,"title":{},"body":{"additional-documentation/themes.html":{}}}],["name",{"_index":55,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"injectables/SzUIEventService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/themes/customizing.html":{}}}],["name_first",{"_index":758,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["name_full",{"_index":759,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzRawData.html":{}}}],["name_last",{"_index":760,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["name_middle",{"_index":761,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["name_of_local_storage_store",{"_index":1028,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["name_prefix",{"_index":762,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["name_suffix",{"_index":763,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["name_type",{"_index":764,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["namedata",{"_index":656,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["namedatamatches",{"_index":1160,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["nameonlymatches",{"_index":1194,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["names",{"_index":231,"title":{},"body":{"injectables/SzBulkDataService.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"license.html":{}}}],["namespace",{"_index":398,"title":{},"body":{"injectables/SzConfigurationService.html":{},"injectables/SzPrefsService.html":{},"changelog.html":{}}}],["namespaced",{"_index":2148,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["narrow",{"_index":711,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"changelog.html":{}}}],["near",{"_index":1416,"title":{},"body":{"changelog.html":{}}}],["necessarily",{"_index":1935,"title":{},"body":{"license.html":{}}}],["need",{"_index":1604,"title":{},"body":{"contributing.html":{}}}],["needed",{"_index":1567,"title":{},"body":{"contributing.html":{},"additional-documentation/themes/pre-built.html":{}}}],["needs",{"_index":401,"title":{},"body":{"injectables/SzConfigurationService.html":{},"classes/SzSearchFormPrefs.html":{},"contributing.html":{}}}],["negligence",{"_index":2033,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":2036,"title":{},"body":{"license.html":{}}}],["net::err_name_not_resolved",{"_index":1784,"title":{},"body":{"index.html":{}}}],["never",{"_index":919,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["neverfilterqueriedentityids",{"_index":852,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["new",{"_index":64,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/themes/customizing.html":{}}}],["next",{"_index":2142,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["ng",{"_index":81,"title":{},"body":{"modules/SenzingSdkModule.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/themes/customizing.html":{}}}],["ng';quick",{"_index":1704,"title":{},"body":{"index.html":{}}}],["ng/docs",{"_index":1772,"title":{},"body":{"index.html":{}}}],["ng/styles/themes/drab.css",{"_index":2141,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["ng/styles/themes/senzing.css",{"_index":2152,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["ng/styles/themes/senzing.css';using",{"_index":2125,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["ngmodule",{"_index":95,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":460,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["ngoninit",{"_index":274,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["ngsynthesize",{"_index":1608,"title":{},"body":{"contributing.html":{}}}],["ngx",{"_index":723,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["nin_country",{"_index":765,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["nin_number",{"_index":766,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["node",{"_index":894,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"changelog.html":{},"additional-documentation/themes/pre-built.html":{}}}],["node/npm",{"_index":1677,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":1701,"title":{},"body":{"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["node_modules/@senzing/sdk",{"_index":1771,"title":{},"body":{"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["node_modules/\\\\@senzing/sdk",{"_index":2140,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["nodes",{"_index":560,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{}}}],["non",{"_index":1759,"title":{},"body":{"index.html":{},"license.html":{}}}],["none",{"_index":572,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["normally",{"_index":1977,"title":{},"body":{"license.html":{}}}],["not_started",{"_index":1667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notable",{"_index":1347,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":1566,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["nothing",{"_index":1993,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1871,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1961,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":874,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["notified",{"_index":905,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["notify",{"_index":244,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["notwithstanding",{"_index":1992,"title":{},"body":{"license.html":{}}}],["now",{"_index":84,"title":{},"body":{"modules/SenzingSdkModule.html":{},"changelog.html":{},"index.html":{}}}],["nowrap",{"_index":622,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["npm",{"_index":78,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["nub",{"_index":632,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["null",{"_index":1318,"title":{},"body":{"injectables/SzSearchService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":135,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"interfaces/SzRawData.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"contributing.html":{},"index.html":{}}}],["object",{"_index":276,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["object/key/value",{"_index":1411,"title":{},"body":{"changelog.html":{}}}],["objects",{"_index":1023,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["obligations",{"_index":2059,"title":{},"body":{"license.html":{}}}],["observable",{"_index":189,"title":{},"body":{"injectables/SzBulkDataService.html":{},"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"injectables/SzFoliosService.html":{},"injectables/SzSearchService.html":{}}}],["observeable",{"_index":819,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["obtain",{"_index":2088,"title":{},"body":{"license.html":{}}}],["occasionally",{"_index":1777,"title":{},"body":{"index.html":{}}}],["occurs",{"_index":1201,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["offer",{"_index":1928,"title":{},"body":{"license.html":{}}}],["onanalysischange",{"_index":163,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["oncheckboxpreftoggle",{"_index":461,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["oncheckboxpreftoggle(optname",{"_index":513,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["oncolorparameterchange",{"_index":462,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["oncolorparameterchange(prefname",{"_index":520,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["oncurrentfilechange",{"_index":164,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["ondatasourcemapchange",{"_index":165,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["ondatasourceschange",{"_index":166,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["ondestroy",{"_index":446,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["ondscolorchange",{"_index":463,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["ondsfilterchange",{"_index":464,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["one",{"_index":1680,"title":{},"body":{"index.html":{},"license.html":{}}}],["onentitytypemapchange",{"_index":167,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["onentitytypeschange",{"_index":168,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["onerror",{"_index":169,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["oninit",{"_index":264,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["onintparameterchange",{"_index":465,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["onintparameterchange(prefname",{"_index":523,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["onkeyenter",{"_index":1539,"title":{},"body":{"changelog.html":{}}}],["online",{"_index":1768,"title":{},"body":{"index.html":{}}}],["onloadresult",{"_index":170,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["onresultclick",{"_index":1191,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["onresultclick(evt",{"_index":1203,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["onsearchresultclick",{"_index":1730,"title":{},"body":{"index.html":{}}}],["onsearchresultclick(entitydata",{"_index":1740,"title":{},"body":{"index.html":{}}}],["onsearchresults",{"_index":1729,"title":{},"body":{"index.html":{}}}],["onsearchresults(evt",{"_index":1736,"title":{},"body":{"index.html":{}}}],["opacity",{"_index":608,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["open",{"_index":73,"title":{},"body":{"modules/SenzingSdkModule.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["openinnewtab",{"_index":848,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["openinsidepanel",{"_index":849,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["operation",{"_index":227,"title":{},"body":{"injectables/SzBulkDataService.html":{},"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{}}}],["opt",{"_index":2098,"title":{},"body":{"additional-documentation/themes.html":{}}}],["optional",{"_index":48,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawData.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"injectables/SzUIEventService.html":{},"miscellaneous/functions.html":{}}}],["optionchanged",{"_index":480,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["options",{"_index":1756,"title":{},"body":{"index.html":{}}}],["optname",{"_index":519,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["orange",{"_index":1246,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["order",{"_index":1146,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"contributing.html":{}}}],["origin",{"_index":2007,"title":{},"body":{"license.html":{}}}],["original",{"_index":1884,"title":{},"body":{"license.html":{}}}],["otherdatamatches",{"_index":1161,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["otherwise",{"_index":1844,"title":{},"body":{"license.html":{}}}],["out",{"_index":854,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzSearchService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/themes.html":{}}}],["output",{"_index":866,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["outputs",{"_index":356,"title":{},"body":{"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["outset",{"_index":292,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["outside",{"_index":1484,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["outstanding",{"_index":1849,"title":{},"body":{"license.html":{}}}],["over",{"_index":638,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"additional-documentation/themes/pre-built.html":{}}}],["overridden",{"_index":2159,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["overview",{"_index":704,"title":{"overview.html":{}},"body":{"components/SzEntityRecordViewerComponent.html":{},"index.html":{},"overview.html":{}}}],["overviewactive",{"_index":691,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["overwrite",{"_index":1127,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["owner",{"_index":1826,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":1629,"title":{},"body":{"contributing.html":{}}}],["ownership",{"_index":1846,"title":{},"body":{"license.html":{}}}],["package",{"_index":1491,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["packages",{"_index":1805,"title":{},"body":{"index.html":{}}}],["padding",{"_index":309,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["padding/margins",{"_index":1538,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":1751,"title":{"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}},"body":{"index.html":{},"license.html":{}}}],["pair",{"_index":677,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["panel",{"_index":890,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["parameter",{"_index":537,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"components/SzSearchResultsComponent.html":{},"injectables/SzSearchService.html":{},"changelog.html":{},"additional-documentation/themes/customizing.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"injectables/SzUIEventService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parameterschanged",{"_index":357,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzSearchService.html":{}}}],["paramname",{"_index":1324,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["params",{"_index":407,"title":{},"body":{"injectables/SzConfigurationService.html":{},"interfaces/SzSearchEvent.html":{},"injectables/SzSearchService.html":{}}}],["parents",{"_index":1613,"title":{},"body":{"contributing.html":{}}}],["parity",{"_index":1420,"title":{},"body":{"changelog.html":{}}}],["parseable",{"_index":148,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["part",{"_index":1968,"title":{},"body":{"license.html":{}}}],["particular",{"_index":896,"title":{},"body":{"classes/SzGraphPrefs.html":{},"index.html":{},"license.html":{}}}],["party",{"_index":1976,"title":{},"body":{"license.html":{}}}],["passed",{"_index":391,"title":{},"body":{"injectables/SzConfigurationService.html":{},"classes/SzSearchHistoryFolio.html":{}}}],["passing",{"_index":404,"title":{},"body":{"injectables/SzConfigurationService.html":{},"index.html":{}}}],["passport_country",{"_index":767,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["passport_number",{"_index":768,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["password",{"_index":354,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["patent",{"_index":1926,"title":{},"body":{"license.html":{}}}],["path",{"_index":422,"title":{},"body":{"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"changelog.html":{},"additional-documentation/themes/pre-built.html":{}}}],["paths",{"_index":2149,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["payload",{"_index":857,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["pdf",{"_index":936,"title":{},"body":{"injectables/SzPdfUtilService.html":{},"changelog.html":{}}}],["percent",{"_index":1848,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1080,"title":{},"body":{"classes/SzSearchFormPrefs.html":{},"injectables/SzSearchService.html":{},"license.html":{}}}],["performed",{"_index":1096,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["permission",{"_index":1999,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1854,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1914,"title":{},"body":{"license.html":{}}}],["person_name_full",{"_index":769,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["pertain",{"_index":1967,"title":{},"body":{"license.html":{}}}],["phone_number",{"_index":770,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["phonedata",{"_index":657,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["phonedatamatches",{"_index":1162,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["pill",{"_index":2197,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["place",{"_index":1120,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"contributing.html":{}}}],["placeholder",{"_index":2178,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["places",{"_index":1972,"title":{},"body":{"license.html":{}}}],["please",{"_index":1589,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["point",{"_index":1758,"title":{},"body":{"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["pointer",{"_index":631,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["pop",{"_index":1404,"title":{},"body":{"changelog.html":{}}}],["populate",{"_index":876,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"index.html":{}}}],["port",{"_index":1499,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["position",{"_index":585,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzSearchHistoryFolio.html":{}}}],["possibility",{"_index":2055,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1122,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{},"additional-documentation/themes/customizing.html":{}}}],["possiblematches",{"_index":1163,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{}}}],["possibly",{"_index":1237,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["power",{"_index":1837,"title":{},"body":{"license.html":{}}}],["powered",{"_index":114,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"index.html":{}}}],["pre",{"_index":1697,"title":{"additional-documentation/themes/pre-built.html":{}},"body":{"index.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{}}}],["precise",{"_index":1509,"title":{},"body":{"changelog.html":{}}}],["precompiled",{"_index":2107,"title":{},"body":{"additional-documentation/themes.html":{}}}],["pref",{"_index":517,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["pref(s",{"_index":1410,"title":{},"body":{"changelog.html":{}}}],["prefbus",{"_index":445,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["preference",{"_index":1062,"title":{},"body":{"interfaces/SzSdkPrefsModel.html":{}}}],["preferences",{"_index":444,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["preferences'},{'name",{"_index":326,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["preferred",{"_index":1856,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":363,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["prefname",{"_index":521,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["prefs",{"_index":410,"title":{},"body":{"injectables/SzConfigurationService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzSdkPrefsModel.html":{},"classes/SzSearchFormPrefs.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["prefs.service.ts",{"_index":829,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["prefschange",{"_index":481,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["prefschanged",{"_index":844,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["prep",{"_index":187,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["prepare",{"_index":1922,"title":{},"body":{"license.html":{}}}],["present",{"_index":528,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"changelog.html":{}}}],["primary_name_first",{"_index":1051,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["primary_name_last",{"_index":1052,"title":{},"body":{"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{}}}],["primary_name_middle",{"_index":1053,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["primary_phone_number",{"_index":1054,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["primarynamelast",{"_index":932,"title":{},"body":{"interfaces/SzMatchFields.html":{}}}],["print",{"_index":1489,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":2081,"title":{},"body":{"license.html":{}}}],["private",{"_index":1007,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["problem",{"_index":1780,"title":{},"body":{"index.html":{}}}],["procedure",{"_index":1605,"title":{},"body":{"contributing.html":{}}}],["process",{"_index":1553,"title":{},"body":{"contributing.html":{}}}],["processor",{"_index":2122,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["product",{"_index":2002,"title":{},"body":{"license.html":{}}}],["production",{"_index":2129,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["project",{"_index":1348,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["projects",{"_index":87,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzFoliosService.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["prominent",{"_index":1960,"title":{},"body":{"license.html":{}}}],["promise",{"_index":960,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["properly",{"_index":1681,"title":{},"body":{"index.html":{}}}],["properties",{"_index":126,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzMatchFields.html":{},"interfaces/SzNetworkGraphInputs.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"changelog.html":{}}}],["property",{"_index":279,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"index.html":{}}}],["propobj['key",{"_index":280,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["propobj['value",{"_index":281,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["propobj[\\'key",{"_index":315,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["propobj[\\'value",{"_index":316,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["protocol://hostname:port",{"_index":368,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["provide",{"_index":1985,"title":{},"body":{"license.html":{}}}],["provided",{"_index":393,"title":{},"body":{"injectables/SzConfigurationService.html":{},"components/SzSearchResultsComponent.html":{},"license.html":{}}}],["providers",{"_index":29,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["provides",{"_index":255,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"components/SzSearchResultsComponent.html":{},"injectables/SzUIEventService.html":{},"license.html":{},"additional-documentation/themes/customizing.html":{}}}],["providing",{"_index":803,"title":{},"body":{"injectables/SzFoliosService.html":{},"injectables/SzSearchService.html":{}}}],["proxy",{"_index":824,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["public",{"_index":152,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"index.html":{}}}],["publicly",{"_index":1923,"title":{},"body":{"license.html":{}}}],["publish",{"_index":853,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["published",{"_index":989,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["publishes",{"_index":980,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["publishing",{"_index":1060,"title":{},"body":{"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{}}}],["pull",{"_index":1574,"title":{},"body":{"contributing.html":{}}}],["pulldown",{"_index":1102,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["purpose",{"_index":1900,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1834,"title":{},"body":{"license.html":{}}}],["queried",{"_index":914,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["queriedentitiescolor",{"_index":474,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{}}}],["query",{"_index":922,"title":{},"body":{"classes/SzGraphPrefs.html":{},"dependencies.html":{}}}],["questions",{"_index":1556,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":2111,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["quickstart",{"_index":1754,"title":{},"body":{"index.html":{}}}],["quot;myapiserverhostname.com:8080&quot",{"_index":66,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["radius",{"_index":287,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["rail",{"_index":712,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"changelog.html":{}}}],["rawdatamatches",{"_index":1164,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["rc.3",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["reactive",{"_index":542,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["read",{"_index":340,"title":{},"body":{"components/SzConfigurationComponent.html":{}}}],["readable",{"_index":261,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"license.html":{}}}],["readme",{"_index":4,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["readme.md",{"_index":1706,"title":{},"body":{"index.html":{}}}],["real",{"_index":856,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["really",{"_index":834,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["reason",{"_index":1800,"title":{},"body":{"index.html":{},"license.html":{}}}],["reasonable",{"_index":2004,"title":{},"body":{"license.html":{}}}],["received",{"_index":1908,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1957,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":343,"title":{},"body":{"components/SzConfigurationComponent.html":{},"license.html":{}}}],["recommended",{"_index":2130,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["recompile",{"_index":1798,"title":{},"body":{"index.html":{}}}],["record",{"_index":323,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"changelog.html":{},"additional-documentation/themes/customizing.html":{}}}],["record_id",{"_index":1055,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["recordcount",{"_index":130,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{},"classes/SzDataSourceRecordAnalysis.html":{}}}],["recordid",{"_index":1317,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["records",{"_index":658,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{}}}],["recordsummaries",{"_index":659,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["recordswithdatasourcecount",{"_index":131,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{}}}],["recordswithrecordidcount",{"_index":132,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{},"classes/SzDataSourceRecordAnalysis.html":{}}}],["redistributing",{"_index":2026,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1953,"title":{},"body":{"license.html":{}}}],["redraw",{"_index":1512,"title":{},"body":{"changelog.html":{}}}],["ref_score",{"_index":1056,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["refactoring",{"_index":1526,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":2123,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["referenced",{"_index":1731,"title":{},"body":{"index.html":{}}}],["references",{"_index":1498,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["referencing",{"_index":105,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["reflect",{"_index":1507,"title":{},"body":{"changelog.html":{}}}],["reflow",{"_index":1435,"title":{},"body":{"changelog.html":{}}}],["refscore",{"_index":660,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["regarding",{"_index":1997,"title":{},"body":{"license.html":{}}}],["register",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":830,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSearchFormPrefs.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"additional-documentation/themes/customizing.html":{}}}],["relatedentities",{"_index":1165,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["relationship",{"_index":545,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["relationshipdatamatches",{"_index":1166,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["relationships",{"_index":900,"title":{},"body":{"classes/SzGraphPrefs.html":{},"changelog.html":{}}}],["relative",{"_index":590,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["release",{"_index":1497,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":1379,"title":{},"body":{"changelog.html":{}}}],["reload",{"_index":1437,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":1885,"title":{},"body":{"license.html":{}}}],["remember",{"_index":1086,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["remembered",{"_index":1716,"title":{},"body":{"index.html":{}}}],["rememberlastsearches",{"_index":1068,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["rememberstateoptions",{"_index":851,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["remove",{"_index":791,"title":{},"body":{"classes/SzFolio.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/themes.html":{}}}],["remove(item",{"_index":795,"title":{},"body":{"classes/SzFolio.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{}}}],["removed",{"_index":1493,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":204,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["rendered",{"_index":1709,"title":{},"body":{"index.html":{}}}],["replaced",{"_index":2076,"title":{},"body":{"license.html":{}}}],["report",{"_index":1596,"title":{},"body":{"contributing.html":{}}}],["reported",{"_index":1599,"title":{},"body":{"contributing.html":{}}}],["reporting",{"_index":1558,"title":{},"body":{"contributing.html":{}}}],["reports",{"_index":1598,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1564,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1882,"title":{},"body":{"license.html":{}}}],["representation",{"_index":884,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["representational",{"_index":988,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["representatives",{"_index":1895,"title":{},"body":{"license.html":{}}}],["representing",{"_index":797,"title":{},"body":{"classes/SzFolioItem.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{}}}],["reproduce",{"_index":1921,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":2008,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1816,"title":{},"body":{"license.html":{}}}],["request",{"_index":397,"title":{},"body":{"injectables/SzConfigurationService.html":{},"injectables/SzSearchService.html":{},"contributing.html":{}}}],["requesting",{"_index":1557,"title":{},"body":{"contributing.html":{}}}],["requests",{"_index":364,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"contributing.html":{},"index.html":{}}}],["require",{"_index":966,"title":{},"body":{"components/SzPoweredByComponent.html":{},"index.html":{}}}],["required",{"_index":2003,"title":{},"body":{"license.html":{}}}],["resdata",{"_index":1204,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["resolutionrulecode",{"_index":661,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["resolve",{"_index":1722,"title":{},"body":{"index.html":{}}}],["resolvedentity",{"_index":1167,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["responded",{"_index":982,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["responding",{"_index":1061,"title":{},"body":{"classes/SzSdkPrefsBase.html":{}}}],["response",{"_index":372,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"components/SzSearchResultsComponent.html":{}}}],["responsibility",{"_index":2063,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":2023,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["responsiveness",{"_index":696,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["respose",{"_index":371,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["rest",{"_index":425,"title":{},"body":{"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"components/SzPoweredByComponent.html":{},"changelog.html":{},"index.html":{}}}],["restart",{"_index":1747,"title":{},"body":{"index.html":{}}}],["result",{"_index":118,"title":{},"body":{"modules/SenzingSdkModule.html":{},"classes/SzBulkDataAnalysis.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzMatchFields.html":{},"interfaces/SzNetworkGraphInputs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"injectables/SzUIEventService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["result(s",{"_index":670,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["result.pdf",{"_index":959,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["result__section",{"_index":1235,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["resultclick",{"_index":1192,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["resulting",{"_index":1862,"title":{},"body":{"license.html":{}}}],["results",{"_index":120,"title":{},"body":{"modules/SenzingSdkModule.html":{},"classes/SzBulkDataAnalysis.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzMatchFields.html":{},"interfaces/SzNetworkGraphInputs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"injectables/SzUIEventService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["results'},{'name",{"_index":330,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["results.component.html",{"_index":1186,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["results.component.scss",{"_index":1185,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["results.component.ts",{"_index":1176,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["results/match",{"_index":929,"title":{},"body":{"interfaces/SzMatchFields.html":{}}}],["results/raw",{"_index":1037,"title":{},"body":{"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{}}}],["results/sz",{"_index":1151,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{}}}],["resultschange",{"_index":1180,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["resultschanged",{"_index":1301,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["resultsperpage",{"_index":950,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["retain",{"_index":1964,"title":{},"body":{"license.html":{}}}],["retrieving",{"_index":510,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"changelog.html":{}}}],["return",{"_index":63,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"index.html":{}}}],["returns",{"_index":51,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["reusable",{"_index":1675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["revisions",{"_index":1879,"title":{},"body":{"license.html":{}}}],["right",{"_index":587,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"index.html":{},"additional-documentation/themes/customizing.html":{}}}],["rights",{"_index":2060,"title":{},"body":{"license.html":{}}}],["risks",{"_index":2028,"title":{},"body":{"license.html":{}}}],["robust",{"_index":346,"title":{},"body":{"components/SzConfigurationComponent.html":{}}}],["root",{"_index":77,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["row",{"_index":304,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["royalty",{"_index":1918,"title":{},"body":{"license.html":{}}}],["run",{"_index":1415,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["running",{"_index":1705,"title":{},"body":{"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["runtime",{"_index":417,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["rxjs",{"_index":981,"title":{},"body":{"injectables/SzPrefsService.html":{},"dependencies.html":{}}}],["same",{"_index":878,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchResultsPrefs.html":{},"index.html":{},"license.html":{}}}],["sass",{"_index":2119,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["sass(and",{"_index":2120,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["save",{"_index":82,"title":{},"body":{"modules/SenzingSdkModule.html":{},"classes/SzSearchParamsFolioItem.html":{},"index.html":{}}}],["saved",{"_index":805,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["savedsearches",{"_index":1070,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["saving",{"_index":2158,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["scope",{"_index":547,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["scripts",{"_index":1693,"title":{},"body":{"index.html":{}}}],["scss",{"_index":2121,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["scss/variables",{"_index":1225,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["sdk",{"_index":9,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzConfigurationService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["search",{"_index":327,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzFoliosService.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["search'},{'name",{"_index":329,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["search.service.ts",{"_index":1063,"title":{},"body":{"interfaces/SzSearchEvent.html":{},"injectables/SzSearchService.html":{}}}],["search.ts",{"_index":741,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["search_history",{"_index":811,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["searchbyattributes",{"_index":1309,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["searchbyattributes(searchparms",{"_index":1319,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["searched",{"_index":1198,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["searches",{"_index":806,"title":{},"body":{"injectables/SzFoliosService.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"changelog.html":{}}}],["searchform",{"_index":1018,"title":{},"body":{"injectables/SzPrefsService.html":{},"interfaces/SzSdkPrefsModel.html":{}}}],["searchhistory",{"_index":1071,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["searchhistoryupdated",{"_index":808,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["searchparams",{"_index":949,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["searchparms",{"_index":1321,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["searchperformed",{"_index":1302,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["searchresults",{"_index":1019,"title":{},"body":{"injectables/SzPrefsService.html":{},"interfaces/SzSdkPrefsModel.html":{},"components/SzSearchResultsComponent.html":{}}}],["searchresultsjson",{"_index":1190,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["searchresultstotal",{"_index":1196,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["searchservice",{"_index":809,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["searchvalue",{"_index":1195,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["section",{"_index":502,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"injectables/SzPrefsService.html":{},"components/SzSearchResultsComponent.html":{},"license.html":{},"additional-documentation/themes/customizing.html":{}}}],["sections",{"_index":1822,"title":{},"body":{"license.html":{}}}],["sectiontitles",{"_index":475,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["sectiontitles[0",{"_index":544,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["sectiontitles[1",{"_index":561,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["sectiontitles[2",{"_index":563,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["sectiontitles[3",{"_index":564,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["see",{"_index":423,"title":{},"body":{"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/themes.html":{}}}],["selector",{"_index":266,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"index.html":{}}}],["selector/property",{"_index":2103,"title":{},"body":{"additional-documentation/themes.html":{}}}],["self",{"_index":974,"title":{},"body":{"components/SzPoweredByComponent.html":{}}}],["sell",{"_index":1929,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1352,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":1470,"title":{},"body":{"changelog.html":{}}}],["sent",{"_index":743,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"license.html":{}}}],["senzing",{"_index":8,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzPoweredByComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["senzing/rest",{"_index":1640,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["senzing/sdk",{"_index":80,"title":{},"body":{"modules/SenzingSdkModule.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["senzingsdkmodule",{"_index":1,"title":{"modules/SenzingSdkModule.html":{}},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzConfigurationService.html":{},"index.html":{},"modules.html":{}}}],["senzingsdkmodule.forroot",{"_index":69,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["separable",{"_index":1886,"title":{},"body":{"license.html":{}}}],["separatation",{"_index":909,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["separate",{"_index":1490,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["separation",{"_index":558,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["serialized",{"_index":1031,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["serve",{"_index":1749,"title":{},"body":{"index.html":{}}}],["server",{"_index":362,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"interfaces/SzEntitySearchParams.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":336,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzFoliosService.html":{},"injectables/SzPdfUtilService.html":{},"injectables/SzPrefsService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["services",{"_index":106,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzPrefsService.html":{},"changelog.html":{},"index.html":{}}}],["set",{"_index":111,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["set/get",{"_index":1026,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["setaccesstoken(value",{"_index":384,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["setallowedtypeattributes(value",{"_index":1103,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["setapikeys(value",{"_index":381,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["setbasepath(value",{"_index":385,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["setbuildout(value",{"_index":915,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["setdata(value",{"_index":801,"title":{},"body":{"classes/SzFolioItem.html":{},"classes/SzSearchParamsFolioItem.html":{}}}],["setdatasourcecolors(value",{"_index":897,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["setdatasourcesfiltered(value",{"_index":917,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["setdisablesearchhistory(value",{"_index":1094,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["setfile(value",{"_index":248,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["setlayoutclasses(value",{"_index":715,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["setlinktoembeddedgraph(value",{"_index":1298,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["setmaxdegreesofseparation(value",{"_index":910,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["setmaxentities(value",{"_index":912,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["setneverfilterqueriedentityids(value",{"_index":923,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["setopeninnewtab(value",{"_index":887,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["setopeninsidepanel(value",{"_index":891,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["setpassword(value",{"_index":383,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["setqueriedentitiescolor(value",{"_index":926,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["setrememberlastsearches(value",{"_index":1089,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["setrememberstateoptions(value",{"_index":907,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["sets",{"_index":906,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{}}}],["setsavedsearches(value",{"_index":1097,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["setsearch_history(value",{"_index":827,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["setsearchhistory(value",{"_index":1099,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["setsearchparam",{"_index":1310,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["setsearchparam(paramname",{"_index":1322,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["setsearchresults",{"_index":1311,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["setsearchresults(results",{"_index":1325,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["setsearchresults(value",{"_index":1210,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["setsearchvalue(value",{"_index":1216,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["setshowcharacteristicdata(value",{"_index":1277,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["setshowembeddedgraph(value",{"_index":1294,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["setshowidentifierdata(value",{"_index":1272,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["setshowlinklabels(value",{"_index":540,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["setshowmatchkeys(value",{"_index":901,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["setshowotherdata(value",{"_index":1270,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["setshowrecordids(value",{"_index":1281,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["setter",{"_index":697,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"injectables/SzFoliosService.html":{},"components/SzSearchResultsComponent.html":{}}}],["setters",{"_index":864,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["setting",{"_index":1601,"title":{},"body":{"contributing.html":{}}}],["settruncatecharacteristicdataat(value",{"_index":1291,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["settruncateidentifierdataat(value",{"_index":1300,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["settruncateotherdataat(value",{"_index":1289,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["settruncaterecordsat(value",{"_index":1287,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["setup",{"_index":1679,"title":{},"body":{"index.html":{}}}],["setusername(value",{"_index":382,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["setwithcredentials(value",{"_index":386,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["sever",{"_index":1692,"title":{},"body":{"index.html":{}}}],["several",{"_index":2126,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["shall",{"_index":1819,"title":{},"body":{"license.html":{}}}],["shallow",{"_index":879,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["shares",{"_index":1850,"title":{},"body":{"license.html":{}}}],["shortcuts",{"_index":1682,"title":{},"body":{"index.html":{}}}],["shoulddatasourcebedisplayed",{"_index":466,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["shoulddatasourcebedisplayed(dsname",{"_index":525,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["show",{"_index":530,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{}}}],["showcharacteristicdata",{"_index":1261,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["showdatasources",{"_index":476,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["showembeddedgraph",{"_index":1266,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["showidentifierdata",{"_index":1260,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["showing",{"_index":484,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"index.html":{}}}],["showjson",{"_index":689,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["showlinklabels",{"_index":477,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzNetworkGraphInputs.html":{}}}],["showmatchkeys",{"_index":850,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["showmaxdegreesofseparation",{"_index":478,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["showmaxentities",{"_index":479,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["shown",{"_index":1284,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["shownoresultmessage",{"_index":690,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["showotherdata",{"_index":1259,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["showrecordids",{"_index":1262,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["shows",{"_index":995,"title":{},"body":{"injectables/SzPrefsService.html":{},"components/SzSearchResultsComponent.html":{}}}],["showtab",{"_index":686,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["showtab(activeview",{"_index":701,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["side",{"_index":889,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["simple",{"_index":964,"title":{},"body":{"components/SzPoweredByComponent.html":{},"contributing.html":{},"additional-documentation/themes/customizing.html":{}}}],["simplest",{"_index":107,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzSearchResultsComponent.html":{}}}],["single",{"_index":870,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["size",{"_index":623,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["slack",{"_index":1593,"title":{},"body":{"contributing.html":{}}}],["slider",{"_index":588,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["sliders",{"_index":538,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["slidersform",{"_index":458,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["small",{"_index":970,"title":{},"body":{"components/SzPoweredByComponent.html":{}}}],["smarter",{"_index":1467,"title":{},"body":{"changelog.html":{}}}],["social_handle",{"_index":771,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["social_network",{"_index":772,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{}}}],["software",{"_index":1861,"title":{},"body":{"license.html":{}}}],["sole",{"_index":2062,"title":{},"body":{"license.html":{}}}],["solely",{"_index":2022,"title":{},"body":{"license.html":{}}}],["solid",{"_index":285,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["solution",{"_index":347,"title":{},"body":{"components/SzConfigurationComponent.html":{},"index.html":{}}}],["something",{"_index":1117,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"index.html":{}}}],["sometimes",{"_index":1801,"title":{},"body":{"index.html":{}}}],["sounds",{"_index":1425,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":498,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"index.html":{},"license.html":{}}}],["source_id",{"_index":1057,"title":{},"body":{"interfaces/SzRawData.html":{}}}],["sourcearray",{"_index":1338,"title":{},"body":{"classes/SzServerError.html":{}}}],["sources.ts",{"_index":419,"title":{},"body":{"classes/SzDataSourceRecordAnalysis.html":{}}}],["space",{"_index":621,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["span",{"_index":973,"title":{},"body":{"components/SzPoweredByComponent.html":{}}}],["special",{"_index":1081,"title":{},"body":{"classes/SzSearchFormPrefs.html":{},"license.html":{}}}],["specialized",{"_index":1104,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["specific",{"_index":1147,"title":{},"body":{"classes/SzSearchHistoryFolioItem.html":{},"license.html":{}}}],["specifically",{"_index":1359,"title":{},"body":{"changelog.html":{}}}],["specified",{"_index":526,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["src",{"_index":628,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"changelog.html":{}}}],["src/.../data",{"_index":1665,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../utils.ts",{"_index":1672,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/common/server",{"_index":1327,"title":{},"body":{"classes/SzServerError.html":{}}}],["src/lib/common/utils.ts",{"_index":1673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/configuration/sz",{"_index":251,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{}}}],["src/lib/entity/detail/sz",{"_index":434,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["src/lib/models/data",{"_index":123,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/models/entity",{"_index":645,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"interfaces/SzEntitySearchParams.html":{}}}],["src/lib/models/folio.ts",{"_index":781,"title":{},"body":{"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{}}}],["src/lib/models/network",{"_index":934,"title":{},"body":{"interfaces/SzNetworkGraphInputs.html":{}}}],["src/lib/models/responces/search",{"_index":928,"title":{},"body":{"interfaces/SzMatchFields.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"interfaces/SzSearchResultEntityData.html":{}}}],["src/lib/record/sz",{"_index":667,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["src/lib/sdk.module.ts",{"_index":6,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["src/lib/search/sz",{"_index":1175,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["src/lib/services/sz",{"_index":138,"title":{},"body":{"injectables/SzBulkDataService.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzDataSourcesService.html":{},"injectables/SzEntityTypesService.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"injectables/SzUIEventService.html":{}}}],["src/lib/sz",{"_index":961,"title":{},"body":{"components/SzPoweredByComponent.html":{}}}],["src/styles.scss",{"_index":2139,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["ssn_number",{"_index":773,"title":{},"body":{"interfaces/SzEntitySearchParams.html":{},"interfaces/SzRawData.html":{}}}],["ssn_number','drivers_license_number",{"_index":1065,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["stack",{"_index":814,"title":{},"body":{"injectables/SzFoliosService.html":{},"classes/SzSearchHistoryFolio.html":{}}}],["stackoverflow.com",{"_index":1594,"title":{},"body":{"contributing.html":{}}}],["standalone",{"_index":331,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["standard",{"_index":1744,"title":{},"body":{"index.html":{}}}],["start",{"_index":102,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzPoweredByComponent.html":{},"index.html":{}}}],["started",{"_index":1345,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":881,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzUIEventService.html":{},"license.html":{}}}],["stated",{"_index":1588,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["statement",{"_index":1702,"title":{},"body":{"index.html":{},"license.html":{}}}],["static",{"_index":42,"title":{},"body":{"modules/SenzingSdkModule.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzServerError.html":{},"additional-documentation/themes/pre-built.html":{}}}],["statically",{"_index":1770,"title":{},"body":{"index.html":{}}}],["stating",{"_index":1962,"title":{},"body":{"license.html":{}}}],["step",{"_index":1714,"title":{},"body":{"index.html":{}}}],["stoppage",{"_index":2047,"title":{},"body":{"license.html":{}}}],["storage",{"_index":1005,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["storageservice",{"_index":1008,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["store",{"_index":832,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchResultsPrefs.html":{},"index.html":{}}}],["stored",{"_index":991,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["storing",{"_index":1105,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["streams",{"_index":213,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["string",{"_index":134,"title":{},"body":{"classes/SzBulkDataAnalysis.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzMatchFields.html":{},"injectables/SzPdfUtilService.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"dependencies.html":{}}}],["style",{"_index":571,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{}}}],["styles",{"_index":250,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["styles/themes",{"_index":2118,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["stylesheet",{"_index":2127,"title":{},"body":{"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["styleurls",{"_index":267,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"index.html":{}}}],["styling",{"_index":2116,"title":{},"body":{"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["subclass",{"_index":859,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["subject",{"_index":224,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"license.html":{}}}],["sublicense",{"_index":1924,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1988,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1540,"title":{},"body":{"changelog.html":{},"contributing.html":{},"license.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["submitted",{"_index":1583,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["submitting",{"_index":1577,"title":{},"body":{"contributing.html":{}}}],["subscribe",{"_index":997,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["subscribed",{"_index":873,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["subscribers",{"_index":245,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"components/SzSearchResultsComponent.html":{}}}],["subscription",{"_index":243,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["subsequently",{"_index":1909,"title":{},"body":{"license.html":{}}}],["sucessfully",{"_index":1720,"title":{},"body":{"index.html":{}}}],["such",{"_index":1842,"title":{},"body":{"license.html":{}}}],["suggestions",{"_index":1247,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["summary",{"_index":705,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["superclass",{"_index":862,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["supersede",{"_index":1995,"title":{},"body":{"license.html":{}}}],["support",{"_index":1527,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supported",{"_index":2160,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["sure",{"_index":1788,"title":{},"body":{"index.html":{}}}],["svg",{"_index":975,"title":{},"body":{"components/SzPoweredByComponent.html":{}}}],["syntax",{"_index":2080,"title":{},"body":{"license.html":{}}}],["systems",{"_index":1897,"title":{},"body":{"license.html":{}}}],["sz",{"_index":113,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["szadminservice",{"_index":30,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"changelog.html":{}}}],["szattributesearchresult",{"_index":948,"title":{},"body":{"injectables/SzPdfUtilService.html":{},"interfaces/SzSearchEvent.html":{},"components/SzSearchResultsComponent.html":{},"injectables/SzSearchService.html":{},"index.html":{}}}],["szbasebulkloadresult",{"_index":1369,"title":{},"body":{"changelog.html":{}}}],["szbulkdataanalysis",{"_index":121,"title":{"classes/SzBulkDataAnalysis.html":{}},"body":{"classes/SzBulkDataAnalysis.html":{},"injectables/SzBulkDataService.html":{},"changelog.html":{}}}],["szbulkdataanalysiscomponent",{"_index":1364,"title":{},"body":{"changelog.html":{}}}],["szbulkdataanalysisreportcomponent",{"_index":1362,"title":{},"body":{"changelog.html":{}}}],["szbulkdataanalysisresponse",{"_index":1370,"title":{},"body":{"changelog.html":{}}}],["szbulkdataanalysissummarycomponent",{"_index":1363,"title":{},"body":{"changelog.html":{}}}],["szbulkdataloadcomponent",{"_index":1367,"title":{},"body":{"changelog.html":{}}}],["szbulkdataloadreportcomponent",{"_index":1365,"title":{},"body":{"changelog.html":{}}}],["szbulkdataloadresponse",{"_index":1371,"title":{},"body":{"changelog.html":{}}}],["szbulkdataloadsummarycomponent",{"_index":1366,"title":{},"body":{"changelog.html":{}}}],["szbulkdataservice",{"_index":31,"title":{"injectables/SzBulkDataService.html":{}},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"changelog.html":{}}}],["szbulkloaderror",{"_index":1372,"title":{},"body":{"changelog.html":{}}}],["szbulkloadresponse",{"_index":1373,"title":{},"body":{"changelog.html":{}}}],["szbulkloadresult",{"_index":229,"title":{},"body":{"injectables/SzBulkDataService.html":{},"changelog.html":{}}}],["szbulkloadstatus",{"_index":1664,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["szconfigurationaboutcomponent",{"_index":16,"title":{"components/SzConfigurationAboutComponent.html":{}},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["szconfigurationcomponent",{"_index":17,"title":{"components/SzConfigurationComponent.html":{}},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["szconfigurationservice",{"_index":32,"title":{"injectables/SzConfigurationService.html":{}},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["szdatasourcebulkloadresult",{"_index":1374,"title":{},"body":{"changelog.html":{}}}],["szdatasourcerecordanalysis",{"_index":133,"title":{"classes/SzDataSourceRecordAnalysis.html":{}},"body":{"classes/SzBulkDataAnalysis.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"changelog.html":{}}}],["szdatasourcerecordsummary",{"_index":663,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["szdatasourcesservice",{"_index":33,"title":{"injectables/SzDataSourcesService.html":{}},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"changelog.html":{}}}],["szentitydata",{"_index":1315,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["szentitydetailcomponent",{"_index":18,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["szentitydetailgraphcomponent",{"_index":28,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["szentitydetailgraphcontrolcomponent",{"_index":505,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["szentitydetailgraphfiltercomponent",{"_index":19,"title":{"components/SzEntityDetailGraphFilterComponent.html":{}},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{}}}],["szentitydetailprefs",{"_index":1032,"title":{},"body":{"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{}}}],["szentitydetailsectiondata",{"_index":643,"title":{"interfaces/SzEntityDetailSectionData.html":{}},"body":{"interfaces/SzEntityDetailSectionData.html":{}}}],["szentitydetailsectionsummary",{"_index":664,"title":{"interfaces/SzEntityDetailSectionSummary.html":{}},"body":{"interfaces/SzEntityDetailSectionSummary.html":{}}}],["szentityrecord",{"_index":662,"title":{},"body":{"interfaces/SzEntityDetailSectionData.html":{},"components/SzEntityRecordViewerComponent.html":{}}}],["szentityrecordviewercomponent",{"_index":20,"title":{"components/SzEntityRecordViewerComponent.html":{}},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{}}}],["szentitysearchparams",{"_index":740,"title":{"interfaces/SzEntitySearchParams.html":{}},"body":{"interfaces/SzEntitySearchParams.html":{},"injectables/SzPdfUtilService.html":{},"interfaces/SzSearchEvent.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"injectables/SzSearchService.html":{},"index.html":{}}}],["szentitytypebulkloadresult",{"_index":1375,"title":{},"body":{"changelog.html":{}}}],["szentitytyperecordanalysis",{"_index":1376,"title":{},"body":{"changelog.html":{}}}],["szentitytypesservice",{"_index":34,"title":{"injectables/SzEntityTypesService.html":{}},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"injectables/SzEntityTypesService.html":{}}}],["szfolio",{"_index":780,"title":{"classes/SzFolio.html":{}},"body":{"classes/SzFolio.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"changelog.html":{}}}],["szfolioitem",{"_index":787,"title":{"classes/SzFolioItem.html":{}},"body":{"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"changelog.html":{}}}],["szfolioitem's",{"_index":792,"title":{},"body":{"classes/SzFolio.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{}}}],["szfoliosservice",{"_index":35,"title":{"injectables/SzFoliosService.html":{}},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzFoliosService.html":{},"changelog.html":{}}}],["szgraphcomponent",{"_index":1418,"title":{},"body":{"changelog.html":{}}}],["szgraphconfigurationservice",{"_index":413,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["szgraphprefs",{"_index":828,"title":{"classes/SzGraphPrefs.html":{}},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{}}}],["szmatchfields",{"_index":927,"title":{"interfaces/SzMatchFields.html":{}},"body":{"interfaces/SzMatchFields.html":{}}}],["sznetworkgraphinputs",{"_index":933,"title":{"interfaces/SzNetworkGraphInputs.html":{}},"body":{"interfaces/SzNetworkGraphInputs.html":{}}}],["szpdfutilservice",{"_index":36,"title":{"injectables/SzPdfUtilService.html":{}},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzPdfUtilService.html":{}}}],["szpoweredbycomponent",{"_index":21,"title":{"components/SzPoweredByComponent.html":{}},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["szprefdictcomponent",{"_index":1409,"title":{},"body":{"changelog.html":{}}}],["szpreferencescomponent",{"_index":22,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{}}}],["szprefsservice",{"_index":37,"title":{"injectables/SzPrefsService.html":{}},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSearchFormPrefs.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{}}}],["szprefsservice.fromjsonstring",{"_index":1025,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["szrawdata",{"_index":1036,"title":{"interfaces/SzRawData.html":{}},"body":{"interfaces/SzRawData.html":{}}}],["szrawdatamatches",{"_index":1058,"title":{"interfaces/SzRawDataMatches.html":{}},"body":{"interfaces/SzRawDataMatches.html":{},"interfaces/SzSearchResultEntityData.html":{}}}],["szrelatedentity",{"_index":1173,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["szrelationshipnetworkinputcomponent",{"_index":1531,"title":{},"body":{"changelog.html":{}}}],["szrelationshipnetworklookupcomponent",{"_index":1532,"title":{},"body":{"changelog.html":{}}}],["szrelationshipnetworkuploadcomponent",{"_index":1533,"title":{},"body":{"changelog.html":{}}}],["szresolvedentity",{"_index":1174,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["szrestconfiguration",{"_index":52,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"injectables/SzConfigurationService.html":{},"index.html":{}}}],["szrestconfigurationfactory",{"_index":62,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["szrestconfigurationparameters",{"_index":415,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["szsdkprefsbase",{"_index":836,"title":{"classes/SzSdkPrefsBase.html":{}},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["szsdkprefsmodel",{"_index":1000,"title":{"interfaces/SzSdkPrefsModel.html":{}},"body":{"injectables/SzPrefsService.html":{},"interfaces/SzSdkPrefsModel.html":{}}}],["szsearchbyidcomponent",{"_index":23,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{}}}],["szsearchbyidformparams",{"_index":1390,"title":{},"body":{"changelog.html":{}}}],["szsearchcomponent",{"_index":24,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["szsearchcomponent.addeventlistener('resultschange",{"_index":1181,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["szsearchevent",{"_index":813,"title":{"interfaces/SzSearchEvent.html":{}},"body":{"injectables/SzFoliosService.html":{},"interfaces/SzSearchEvent.html":{}}}],["szsearchformprefs",{"_index":1034,"title":{"classes/SzSearchFormPrefs.html":{}},"body":{"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{}}}],["szsearchhistoryfolio",{"_index":826,"title":{"classes/SzSearchHistoryFolio.html":{}},"body":{"injectables/SzFoliosService.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"changelog.html":{}}}],["szsearchhistoryfolioitem",{"_index":1113,"title":{"classes/SzSearchHistoryFolioItem.html":{}},"body":{"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"changelog.html":{}}}],["szsearchparamsfolio",{"_index":815,"title":{"classes/SzSearchParamsFolio.html":{}},"body":{"injectables/SzFoliosService.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"changelog.html":{}}}],["szsearchparamsfolioitem",{"_index":1126,"title":{"classes/SzSearchParamsFolioItem.html":{}},"body":{"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"changelog.html":{}}}],["szsearchresultentitydata",{"_index":1150,"title":{"interfaces/SzSearchResultEntityData.html":{}},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["szsearchresultscomponent",{"_index":25,"title":{"components/SzSearchResultsComponent.html":{}},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["szsearchresultscomponent.results",{"_index":1183,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["szsearchresultsprefs",{"_index":1035,"title":{"classes/SzSearchResultsPrefs.html":{}},"body":{"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["szsearchservice",{"_index":38,"title":{"injectables/SzSearchService.html":{}},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzFoliosService.html":{},"injectables/SzSearchService.html":{}}}],["szsearchservice.parameterschanged",{"_index":1391,"title":{},"body":{"changelog.html":{}}}],["szsearchservice.resultschanged",{"_index":1392,"title":{},"body":{"changelog.html":{}}}],["szsearchservice.searchperformed",{"_index":1393,"title":{},"body":{"changelog.html":{}}}],["szservererror",{"_index":1326,"title":{"classes/SzServerError.html":{}},"body":{"classes/SzServerError.html":{}}}],["szstandalonegraphcomponent",{"_index":26,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{}}}],["szstandalonegraphcomponent's",{"_index":1421,"title":{},"body":{"changelog.html":{}}}],["szuieventservice",{"_index":39,"title":{"injectables/SzUIEventService.html":{}},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzUIEventService.html":{}}}],["tab",{"_index":703,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["table",{"_index":262,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{}}}],["tabset",{"_index":725,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["tabset.json",{"_index":737,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["tabset.overview",{"_index":733,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["tag",{"_index":115,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["tags",{"_index":104,"title":{},"body":{"modules/SenzingSdkModule.html":{}}}],["take",{"_index":867,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"index.html":{}}}],["tells",{"_index":1760,"title":{},"body":{"index.html":{}}}],["template",{"_index":117,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"index.html":{}}}],["templateurl",{"_index":269,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"index.html":{}}}],["terminal",{"_index":75,"title":{},"body":{"modules/SenzingSdkModule.html":{},"index.html":{}}}],["terminate",{"_index":1951,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1573,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["test",{"_index":109,"title":{},"body":{"modules/SenzingSdkModule.html":{},"changelog.html":{},"index.html":{}}}],["testing",{"_index":1619,"title":{},"body":{"contributing.html":{}}}],["text",{"_index":614,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{},"license.html":{},"additional-documentation/themes/customizing.html":{}}}],["textarea",{"_index":1227,"title":{},"body":{"components/SzSearchResultsComponent.html":{}}}],["that's",{"_index":1753,"title":{},"body":{"index.html":{}}}],["theme",{"_index":1543,"title":{},"body":{"changelog.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{}}}],["themes",{"_index":2094,"title":{"additional-documentation/themes.html":{}},"body":{"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["theming",{"_index":2099,"title":{},"body":{"additional-documentation/themes.html":{}}}],["theory",{"_index":2031,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1888,"title":{},"body":{"license.html":{}}}],["things",{"_index":110,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzFoliosService.html":{},"injectables/SzUIEventService.html":{},"index.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/pre-built.html":{}}}],["third",{"_index":994,"title":{},"body":{"injectables/SzPrefsService.html":{},"license.html":{}}}],["this.apiconf.basepath",{"_index":405,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["this.apiconf.parameterschanged.subscribe",{"_index":406,"title":{},"body":{"injectables/SzConfigurationService.html":{}}}],["this.currentlyselectedentityid",{"_index":1743,"title":{},"body":{"index.html":{}}}],["this.currentsearchresults",{"_index":1738,"title":{},"body":{"index.html":{}}}],["this.prefs.entitydetail.graphsectioncollapsed",{"_index":1016,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["this.prefs.fromjsonstring",{"_index":1012,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["this.prefs.graph.buildout",{"_index":838,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["this.prefs.graph.prefschanged.subscribe",{"_index":839,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["this.prefs.graph.showmatchkeys",{"_index":837,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["this.prefs.prefschanged.subscribe((prefs",{"_index":999,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["this.prefs.searchform.allowedtypeattributes",{"_index":1064,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["this.prefs.searchresults.prefschanged.subscribe",{"_index":1066,"title":{},"body":{"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["this.prefs.searchresults.showotherdata",{"_index":1254,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["this.prefs.searchresults.truncateidentifierdataat",{"_index":1257,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["this.prefs.searchresults.truncateotherdataat",{"_index":1255,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["this.prefs.tojsonobject",{"_index":1003,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["this.record",{"_index":699,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["this.search_history$.asobservable",{"_index":818,"title":{},"body":{"injectables/SzFoliosService.html":{}}}],["this.storage.get",{"_index":1027,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["this.storage.get(\"name_of_local_storage_store",{"_index":1011,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["this.storage.set",{"_index":1030,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["this.storage.set(\"name_of_local_storage_store",{"_index":1013,"title":{},"body":{"injectables/SzPrefsService.html":{}}}],["this.tojsonobject",{"_index":1033,"title":{},"body":{"injectables/SzPrefsService.html":{},"classes/SzSearchHistoryFolio.html":{}}}],["those",{"_index":1932,"title":{},"body":{"license.html":{}}}],["thread",{"_index":235,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["through",{"_index":341,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"injectables/SzPrefsService.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["throughout",{"_index":392,"title":{},"body":{"injectables/SzConfigurationService.html":{},"contributing.html":{}}}],["throws",{"_index":1796,"title":{},"body":{"index.html":{}}}],["thru",{"_index":1444,"title":{},"body":{"changelog.html":{}}}],["tickets",{"_index":1380,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":979,"title":{},"body":{"injectables/SzPrefsService.html":{},"additional-documentation/themes/pre-built.html":{}}}],["timestamp",{"_index":1330,"title":{},"body":{"classes/SzServerError.html":{}}}],["title",{"_index":665,"title":{},"body":{"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/themes/customizing.html":{}}}],["titlecasepipe",{"_index":946,"title":{},"body":{"injectables/SzPdfUtilService.html":{},"components/SzSearchResultsComponent.html":{}}}],["titles",{"_index":499,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["todatasource",{"_index":191,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["todo",{"_index":1592,"title":{},"body":{"contributing.html":{}}}],["toentitytype",{"_index":200,"title":{},"body":{"injectables/SzBulkDataService.html":{}}}],["toggled",{"_index":518,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["tojsonobject",{"_index":846,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["tojsonstring",{"_index":847,"title":{},"body":{"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["ton",{"_index":1755,"title":{},"body":{"index.html":{}}}],["tooltip",{"_index":604,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["tooltip::after",{"_index":633,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["tooltip:hover",{"_index":640,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["tooltips",{"_index":1343,"title":{},"body":{"injectables/SzUIEventService.html":{}}}],["top",{"_index":581,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"injectables/SzFoliosService.html":{},"interfaces/SzSdkPrefsModel.html":{},"classes/SzSearchHistoryFolio.html":{},"additional-documentation/themes/customizing.html":{}}}],["topaddresses",{"_index":1168,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["topattributes",{"_index":1169,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["topidentifiers",{"_index":1170,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["topnames",{"_index":1171,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["topphonenumbers",{"_index":1172,"title":{},"body":{"interfaces/SzSearchResultEntityData.html":{}}}],["tort",{"_index":2032,"title":{},"body":{"license.html":{}}}],["toserver",{"_index":1333,"title":{},"body":{"classes/SzServerError.html":{}}}],["toserver(source",{"_index":1339,"title":{},"body":{"classes/SzServerError.html":{}}}],["toserverarray",{"_index":1334,"title":{},"body":{"classes/SzServerError.html":{}}}],["toserverarray(sourcearray",{"_index":1340,"title":{},"body":{"classes/SzServerError.html":{}}}],["total",{"_index":666,"title":{},"body":{"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzSearchResultsComponent.html":{}}}],["totals",{"_index":2187,"title":{},"body":{"additional-documentation/themes/customizing.html":{}}}],["tracker",{"_index":1591,"title":{},"body":{"contributing.html":{}}}],["tracking",{"_index":1898,"title":{},"body":{"license.html":{}}}],["trade",{"_index":2000,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1965,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1998,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1930,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1230,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["transformation",{"_index":1864,"title":{},"body":{"license.html":{}}}],["transition",{"_index":625,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"changelog.html":{}}}],["translation",{"_index":1865,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":636,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{}}}],["triggers",{"_index":1207,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"changelog.html":{}}}],["trimitemsto",{"_index":1111,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["trimitemsto(len",{"_index":1136,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["troubleshooting",{"_index":1776,"title":{},"body":{"index.html":{}}}],["true",{"_index":68,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"index.html":{}}}],["truncate",{"_index":1283,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["truncatecharacteristicdataat",{"_index":1265,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["truncateidentifierdataat",{"_index":1268,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["truncateotherdataat",{"_index":1264,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["truncaterecordsat",{"_index":1263,"title":{},"body":{"classes/SzSearchResultsPrefs.html":{}}}],["trying",{"_index":1792,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1761,"title":{},"body":{"index.html":{}}}],["tweak",{"_index":2114,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["type",{"_index":56,"title":{},"body":{"modules/SenzingSdkModule.html":{},"classes/SzBulkDataAnalysis.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"classes/SzDataSourceRecordAnalysis.html":{},"injectables/SzDataSourcesService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"interfaces/SzEntityDetailSectionData.html":{},"interfaces/SzEntityDetailSectionSummary.html":{},"components/SzEntityRecordViewerComponent.html":{},"interfaces/SzEntitySearchParams.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"interfaces/SzMatchFields.html":{},"interfaces/SzNetworkGraphInputs.html":{},"injectables/SzPdfUtilService.html":{},"injectables/SzPrefsService.html":{},"interfaces/SzRawData.html":{},"interfaces/SzRawDataMatches.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"interfaces/SzSearchEvent.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"interfaces/SzSearchResultEntityData.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"classes/SzServerError.html":{},"injectables/SzUIEventService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["type:none",{"_index":726,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["types",{"_index":221,"title":{},"body":{"injectables/SzBulkDataService.html":{},"injectables/SzEntityTypesService.html":{},"classes/SzSearchFormPrefs.html":{},"injectables/SzSearchService.html":{},"index.html":{},"license.html":{}}}],["typescript",{"_index":1678,"title":{},"body":{"index.html":{}}}],["ui",{"_index":439,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"injectables/SzPrefsService.html":{},"injectables/SzUIEventService.html":{}}}],["ui.service.ts",{"_index":1341,"title":{},"body":{"injectables/SzUIEventService.html":{}}}],["ui/ux",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["ul",{"_index":570,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{}}}],["ul.colors",{"_index":599,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["ul.filters",{"_index":593,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["ul.other",{"_index":600,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["ul.sliders",{"_index":584,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["unbind",{"_index":246,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["undefined",{"_index":219,"title":{},"body":{"injectables/SzBulkDataService.html":{},"classes/SzGraphPrefs.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1833,"title":{},"body":{"license.html":{}}}],["union",{"_index":1830,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1990,"title":{},"body":{"license.html":{}}}],["unstyled",{"_index":2096,"title":{},"body":{"additional-documentation/themes.html":{}}}],["unsubscribe",{"_index":171,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["up",{"_index":74,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzPrefsService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["update",{"_index":1075,"title":{},"body":{"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"changelog.html":{}}}],["updated",{"_index":821,"title":{},"body":{"injectables/SzFoliosService.html":{},"classes/SzSearchHistoryFolio.html":{},"changelog.html":{}}}],["updatemode",{"_index":1108,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["updates",{"_index":986,"title":{},"body":{"injectables/SzPrefsService.html":{},"changelog.html":{}}}],["uppercase",{"_index":1231,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["usage",{"_index":72,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzConfigurationService.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["use",{"_index":360,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityRecordViewerComponent.html":{},"injectables/SzPrefsService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["used",{"_index":141,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"classes/SzGraphPrefs.html":{},"components/SzPoweredByComponent.html":{},"classes/SzSdkPrefsBase.html":{},"interfaces/SzSdkPrefsModel.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzUIEventService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["useful",{"_index":903,"title":{},"body":{"classes/SzGraphPrefs.html":{}}}],["user",{"_index":984,"title":{},"body":{"injectables/SzPrefsService.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchHistoryFolioItem.html":{},"classes/SzSearchParamsFolioItem.html":{}}}],["user's",{"_index":1106,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{}}}],["username",{"_index":355,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{}}}],["users",{"_index":817,"title":{},"body":{"injectables/SzFoliosService.html":{},"additional-documentation/themes/pre-built.html":{}}}],["uses",{"_index":956,"title":{},"body":{"injectables/SzPdfUtilService.html":{},"changelog.html":{}}}],["using",{"_index":344,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"index.html":{},"license.html":{},"additional-documentation/themes/pre-built.html":{}}}],["usual",{"_index":1079,"title":{},"body":{"classes/SzSearchFormPrefs.html":{}}}],["util.service.ts",{"_index":937,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["utility",{"_index":938,"title":{},"body":{"injectables/SzPdfUtilService.html":{}}}],["val",{"_index":586,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["value",{"_index":223,"title":{},"body":{"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{},"miscellaneous/functions.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["values",{"_index":390,"title":{},"body":{"injectables/SzConfigurationService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchResultsPrefs.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/themes/customizing.html":{}}}],["var",{"_index":313,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["variables",{"_index":865,"title":{},"body":{"classes/SzGraphPrefs.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchResultsPrefs.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/themes.html":{},"additional-documentation/themes/customizing.html":{}}}],["various",{"_index":1387,"title":{},"body":{"changelog.html":{}}}],["verbal",{"_index":1893,"title":{},"body":{"license.html":{}}}],["verify",{"_index":1711,"title":{},"body":{"index.html":{}}}],["version",{"_index":1426,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":1353,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":1133,"title":{},"body":{"classes/SzSearchHistoryFolio.html":{},"contributing.html":{},"index.html":{},"additional-documentation/themes.html":{}}}],["view",{"_index":732,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"classes/SzSearchResultsPrefs.html":{}}}],["viewer",{"_index":682,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["viewer'},{'name",{"_index":324,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzPoweredByComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["viewer.component.html",{"_index":684,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["viewer.component.scss",{"_index":683,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["viewer.component.ts",{"_index":668,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["visibility",{"_index":606,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["visible",{"_index":641,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["void",{"_index":46,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"components/SzConfigurationAboutComponent.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzFolio.html":{},"classes/SzFolioItem.html":{},"injectables/SzFoliosService.html":{},"classes/SzGraphPrefs.html":{},"injectables/SzPdfUtilService.html":{},"components/SzPoweredByComponent.html":{},"injectables/SzPrefsService.html":{},"classes/SzSdkPrefsBase.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{},"classes/SzSearchParamsFolioItem.html":{},"components/SzSearchResultsComponent.html":{},"classes/SzSearchResultsPrefs.html":{},"injectables/SzSearchService.html":{}}}],["want",{"_index":1703,"title":{},"body":{"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["wanted",{"_index":507,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["warranties",{"_index":2015,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2010,"title":{},"body":{"license.html":{}}}],["way",{"_index":108,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzEntityRecordViewerComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{},"additional-documentation/themes/customizing.html":{}}}],["ways",{"_index":1178,"title":{},"body":{"components/SzSearchResultsComponent.html":{},"contributing.html":{},"additional-documentation/themes/pre-built.html":{}}}],["we've",{"_index":2110,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["web",{"_index":338,"title":{},"body":{"components/SzConfigurationComponent.html":{},"additional-documentation/themes/customizing.html":{}}}],["weight",{"_index":298,"title":{},"body":{"components/SzConfigurationAboutComponent.html":{},"components/SzEntityRecordViewerComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{},"additional-documentation/themes/customizing.html":{}}}],["weird",{"_index":1797,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1545,"title":{},"body":{"contributing.html":{}}}],["well",{"_index":1423,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["whatever",{"_index":1799,"title":{},"body":{"index.html":{}}}],["wherever",{"_index":1975,"title":{},"body":{"license.html":{}}}],["whether",{"_index":375,"title":{},"body":{"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"components/SzEntityRecordViewerComponent.html":{},"classes/SzGraphPrefs.html":{},"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{},"license.html":{}}}],["white",{"_index":620,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{}}}],["whole",{"_index":1883,"title":{},"body":{"license.html":{}}}],["wide",{"_index":709,"title":{},"body":{"components/SzEntityRecordViewerComponent.html":{}}}],["width",{"_index":596,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"components/SzSearchResultsComponent.html":{},"changelog.html":{},"additional-documentation/themes/customizing.html":{}}}],["window",{"_index":1700,"title":{},"body":{"index.html":{}}}],["windows",{"_index":1530,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["withcredentials",{"_index":67,"title":{},"body":{"modules/SenzingSdkModule.html":{},"components/SzConfigurationComponent.html":{},"injectables/SzConfigurationService.html":{},"index.html":{}}}],["within",{"_index":1572,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["without",{"_index":1794,"title":{},"body":{"index.html":{},"license.html":{}}}],["withrelated",{"_index":1314,"title":{},"body":{"injectables/SzSearchService.html":{}}}],["work",{"_index":1775,"title":{},"body":{"index.html":{},"license.html":{}}}],["working",{"_index":1724,"title":{},"body":{"index.html":{}}}],["works",{"_index":1876,"title":{},"body":{"license.html":{}}}],["world",{"_index":2135,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["worldwide",{"_index":1915,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":568,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{},"changelog.html":{}}}],["writing",{"_index":1907,"title":{},"body":{"license.html":{}}}],["written",{"_index":1894,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1471,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["x",{"_index":1087,"title":{},"body":{"classes/SzSearchFormPrefs.html":{},"classes/SzSearchHistoryFolio.html":{}}}],["yes",{"_index":59,"title":{},"body":{"modules/SenzingSdkModule.html":{},"injectables/SzBulkDataService.html":{},"injectables/SzEntityTypesService.html":{},"injectables/SzPdfUtilService.html":{},"classes/SzSearchHistoryFolio.html":{},"classes/SzSearchParamsFolio.html":{}}}],["you'll",{"_index":2112,"title":{},"body":{"additional-documentation/themes/pre-built.html":{}}}],["you're",{"_index":1683,"title":{},"body":{"index.html":{},"additional-documentation/themes/pre-built.html":{}}}],["yyyy",{"_index":2085,"title":{},"body":{"license.html":{}}}],["z",{"_index":624,"title":{},"body":{"components/SzEntityDetailGraphFilterComponent.html":{}}}],["zone.js",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/SenzingSdkModule.html":{"url":"modules/SenzingSdkModule.html","title":"module - SenzingSdkModule","body":"\n                   \n\n\n\n\n    Modules\n    SenzingSdkModule\n\n\n\n\n    \n        Info\n    \n    \n        README\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/sdk.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Senzing SDK Components Module.\nAdd to your applications module imports array.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SzConfigurationAboutComponent\n                        \n                        \n                            SzConfigurationComponent\n                        \n                        \n                            SzEntityDetailComponent\n                        \n                        \n                            SzEntityDetailGraphFilterComponent\n                        \n                        \n                            SzEntityRecordViewerComponent\n                        \n                        \n                            SzPoweredByComponent\n                        \n                        \n                            SzPreferencesComponent\n                        \n                        \n                            SzSearchByIdComponent\n                        \n                        \n                            SzSearchComponent\n                        \n                        \n                            SzSearchResultsComponent\n                        \n                        \n                            SzStandaloneGraphComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            SzConfigurationAboutComponent\n                        \n                        \n                            SzConfigurationComponent\n                        \n                        \n                            SzEntityDetailComponent\n                        \n                        \n                            SzEntityDetailGraphComponent\n                        \n                        \n                            SzEntityRecordViewerComponent\n                        \n                        \n                            SzPoweredByComponent\n                        \n                        \n                            SzPreferencesComponent\n                        \n                        \n                            SzSearchByIdComponent\n                        \n                        \n                            SzSearchComponent\n                        \n                        \n                            SzSearchResultsComponent\n                        \n                        \n                            SzStandaloneGraphComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SzAdminService\n                        \n                        \n                            SzBulkDataService\n                        \n                        \n                            SzConfigurationService\n                        \n                        \n                            SzDataSourcesService\n                        \n                        \n                            SzEntityTypesService\n                        \n                        \n                            SzFoliosService\n                        \n                        \n                            SzPdfUtilService\n                        \n                        \n                            SzPrefsService\n                        \n                        \n                            SzSearchService\n                        \n                        \n                            SzUIEventService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SzConfigurationAboutComponent\n                        \n                        \n                            SzConfigurationComponent\n                        \n                        \n                            SzEntityDetailComponent\n                        \n                        \n                            SzEntityDetailGraphFilterComponent\n                        \n                        \n                            SzEntityRecordViewerComponent\n                        \n                        \n                            SzPoweredByComponent\n                        \n                        \n                            SzPreferencesComponent\n                        \n                        \n                            SzSearchByIdComponent\n                        \n                        \n                            SzSearchComponent\n                        \n                        \n                            SzSearchResultsComponent\n                        \n                        \n                            SzStandaloneGraphComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(apiConfigFactory?: () => void)\n                \n            \n\n\n\n\n            \n                \n                    initialize the SenzingSdkModule with an optional factory method that returns a SzRestConfiguration instance.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiConfigFactory\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            export function SzRestConfigurationFactory() {\nreturn new SzRestConfiguration({ basePath: &quot;myapiserverhostname.com:8080&quot;, withCredentials: true });\n}\nSenzingSdkModule.forRoot( SzRestConfigurationFactory )\n                        \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n        SDK Module Installation and Usage\nInstallation\nOpen up a terminal to your application root and type npm install @senzing/sdk-components-ng --save.\nAdd to app.module.ts\nNow open up your applications main module file, in most cases this will be app.module.ts for projects generated by angular-cli.\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SenzingSdkModule } from '@senzing/sdk-components-ng';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    SenzingSdkModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Now start up your application and start adding tags or referencing services. The simplest\n way to test that things are set up correctly is to add the static sz-powered-by tag\n to your applications html template.\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzBulkDataAnalysis.html":{"url":"classes/SzBulkDataAnalysis.html","title":"class - SzBulkDataAnalysis","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzBulkDataAnalysis\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/data-analysis.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                analysisByDataSource\n                            \n                            \n                                characterEncoding\n                            \n                            \n                                mediaType\n                            \n                            \n                                recordCount\n                            \n                            \n                                recordsWithDataSourceCount\n                            \n                            \n                                recordsWithRecordIdCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            analysisByDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzDataSourceRecordAnalysis[]\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            characterEncoding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mediaType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recordCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recordsWithDataSourceCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recordsWithRecordIdCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SzBulkDataService.html":{"url":"injectables/SzBulkDataService.html","title":"injectable - SzBulkDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SzBulkDataService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-bulk-data.service.ts\n        \n\n            \n                Description\n            \n            \n                methods used to manipulate data is bulk, ie\nimport, analyze, map, and load data from a parseable format.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _dataSources\n                            \n                            \n                                _entityTypes\n                            \n                            \n                                    Public\n                                analyzingFile\n                            \n                            \n                                    Public\n                                currentAnalysis\n                            \n                            \n                                    Public\n                                currentError\n                            \n                            \n                                    Public\n                                currentFile\n                            \n                            \n                                    Public\n                                currentLoadResult\n                            \n                            \n                                    Public\n                                dataSourceMap\n                            \n                            \n                                    Public\n                                entityTypeMap\n                            \n                            \n                                    Public\n                                isAnalyzingFile\n                            \n                            \n                                    Public\n                                isLoadingFile\n                            \n                            \n                                    Public\n                                loadingFile\n                            \n                            \n                                    Public\n                                onAnalysisChange\n                            \n                            \n                                    Public\n                                onCurrentFileChange\n                            \n                            \n                                    Public\n                                onDataSourceMapChange\n                            \n                            \n                                    Public\n                                onDataSourcesChange\n                            \n                            \n                                    Public\n                                onEntityTypeMapChange\n                            \n                            \n                                    Public\n                                onEntityTypesChange\n                            \n                            \n                                    Public\n                                onError\n                            \n                            \n                                    Public\n                                onLoadResult\n                            \n                            \n                                    Public\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                analyze\n                            \n                            \n                                    Public\n                                changeDataSourceName\n                            \n                            \n                                    Public\n                                changeEntityTypeName\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                createDataSources\n                            \n                            \n                                    Public\n                                createEntityTypes\n                            \n                            \n                                destroy\n                            \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    file\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: SzAdminService, datasourcesService: SzDataSourcesService, entityTypesService: SzEntityTypesService, bulkDataService: BulkDataService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        SzAdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datasourcesService\n                                                  \n                                                        \n                                                                        SzDataSourcesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityTypesService\n                                                  \n                                                        \n                                                                        SzEntityTypesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bulkDataService\n                                                  \n                                                        \n                                                                    BulkDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            analyze\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    analyze(file: File)\n                \n            \n\n\n\n\n            \n                \n                    analze a file and prep for mapping \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeDataSourceName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeDataSourceName(fromDataSource: string, toDataSource: string)\n                \n            \n\n\n\n\n            \n                \n                    change the destination datasource of a file currently being mapped to datasource.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fromDataSource\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toDataSource\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeEntityTypeName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeEntityTypeName(fromEntityType: string, toEntityType: string)\n                \n            \n\n\n\n\n            \n                \n                    change the destination entity type of a file currently being mapped to a entity type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fromEntityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toEntityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n\n\n            \n                \n                    clear any file and associated data. removes file focus context \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createDataSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createDataSources(dataSources: string[])\n                \n            \n\n\n\n\n            \n                \n                    create a new datasource \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataSources\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEntityTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEntityTypes(entityTypes: string[])\n                \n            \n\n\n\n\n            \n                \n                    create a new entity type \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityTypes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n\n\n            \n                \n                    unsubscribe event streams\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(file?: File, dataSourceMap?: literal type, entityTypeMap?: literal type, analysis?: SzBulkDataAnalysis)\n                \n            \n\n\n\n\n            \n                \n                    load a files contents in to a datasource.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    dataSourceMap\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    entityTypeMap\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    analysis\n                                    \n                                                SzBulkDataAnalysis\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _dataSources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n\n                \n                    \n                        current datasources \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _entityTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n\n                \n                    \n                        current entity types \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            analyzingFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n                \n                    \n                        when a file is being analyzed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentAnalysis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzBulkDataAnalysis\n\n                        \n                    \n\n                \n                    \n                        current result of last analysis operation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n\n                \n                    \n                        current file to analyze or load \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentLoadResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzBulkLoadResult\n\n                        \n                    \n\n                \n                    \n                        current result of last file load attempt \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSourceMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n                \n                    \n                        map of current datasource name to new datasource names \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entityTypeMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n                \n                    \n                        map of current entity type name to new entity type names \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAnalyzingFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n\n                \n                    \n                        when a file is being analyzed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoadingFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n\n                \n                    \n                        when a file is being loaded in to the engine on thread\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n                \n                    \n                        when a file is being analyzed in the current thread \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onAnalysisChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n\n                \n                    \n                        when the analysis result changes this behavior subject is broadcast \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onCurrentFileChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n                \n                    \n                        when the file input changes this subject is broadcast \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onDataSourceMapChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n                \n                    \n                        when a datasrc destination changes this subject is broadcast \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onDataSourcesChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n\n                \n                    \n                        when the datasources change this behavior subject is broadcast \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onEntityTypeMapChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n                \n                    \n                        when a enity type destination changes this subject is broadcast \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onEntityTypesChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n\n                \n                    \n                        when the entity types change this behavior subject is broadcast \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n                \n                    \n                        when the file input changes this subject is broadcast \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onLoadResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n\n                \n                    \n                        when the result of a load operation changes this behavior subject is broadcast \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n                \n                    \n                        subscription to notify subscribers to unbind \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        file\n                    \n                \n\n                \n                    \n                        getfile()\n                    \n                \n                    \n                        \n                                the file being analyzed, mapped, or loaded \n\n\n                                \n                                    Returns :     File\n\n                                \n                        \n                    \n\n                \n                    \n                        setfile(value)\n                    \n                \n                    \n                        \n                                the file to analyze, map, or load \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SzConfigurationAboutComponent.html":{"url":"components/SzConfigurationAboutComponent.html","title":"component - SzConfigurationAboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SzConfigurationAboutComponent\n\n\n\n        \n            Info\n        \n        \n            Template\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    src/lib/configuration/sz-configuration-about/sz-configuration-about.component.ts\n\n\n    \n        Description\n    \n    \n        Provides a component that lists all current API connection config parameters as\na human readable table.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sz-configuration-about\n            \n\n            \n                styleUrls\n                ./sz-configuration-about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sz-configuration-about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiConfiguration\n                            \n                            \n                                    Public\n                                apiProperties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPropsAsArray\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiConfiguration: SzRestConfiguration)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiConfiguration\n                                                  \n                                                        \n                                                                    SzRestConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPropsAsArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPropsAsArray()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     object[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzRestConfiguration\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(SzRestConfiguration)\n                            \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object[]\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n\n\n    \n        \n  \n      Property Name\n      Property Value\n  \n    \n      {{propObj['key']}}\n      {{propObj['value']}}\n    \n\n\n    \n\n    \n                \n                    ./sz-configuration-about.component.scss\n                \n                \n:host {\n  border: 1px solid #000;\n  border-radius: 3px;\n  display: inline-table;\n}\n\n.header {\n  border: 1px outset #C0C0C0;\n  background-color: #e1e1e1;\n  font-weight: bold;\n\n  .column {\n    margin: 4px 10px;\n  }\n}\n\n.row, .header {\n  display: flex;\n}\n\n.column {\n  flex: 50%;\n  margin: 0 2px 0 2px;\n}\n.row {\n  padding: 2px 0 2px 10px;\n  border-bottom: 1px inset #c0c0c0;\n}\n.cell {\n  /*border: 1px inset #C0C0C0;*/\n  padding: 2px;\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Property Name      Property Value            {{propObj[\\'key\\']}}      {{propObj[\\'value\\']}}    '\n    var COMPONENTS = [{'name': 'SzConfigurationAboutComponent', 'selector': 'sz-configuration-about'},{'name': 'SzConfigurationComponent', 'selector': 'sz-configuration'},{'name': 'SzEntityDetailComponent', 'selector': 'sz-entity-detail'},{'name': 'SzEntityDetailGraphFilterComponent', 'selector': 'sz-entity-detail-graph-filter'},{'name': 'SzEntityRecordViewerComponent', 'selector': 'sz-entity-record-viewer'},{'name': 'SzPoweredByComponent', 'selector': 'sz-powered-by'},{'name': 'SzPreferencesComponent', 'selector': 'sz-preferences'},{'name': 'SzSearchByIdComponent', 'selector': 'sz-search-by-id'},{'name': 'SzSearchComponent', 'selector': 'sz-search'},{'name': 'SzSearchResultsComponent', 'selector': 'sz-search-results'},{'name': 'SzStandaloneGraphComponent', 'selector': 'sz-standalone-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SzConfigurationAboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SzConfigurationComponent.html":{"url":"components/SzConfigurationComponent.html","title":"component - SzConfigurationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SzConfigurationComponent\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    src/lib/configuration/sz-configuration/sz-configuration.component.ts\n\n\n    \n        Description\n    \n    \n        Provides a service integration web component(WC) that can be used to set, read, change, and\nAPI configuration parameters used through all components.\nFor Angular implementations we recommend using SzConfigurationService as an injectable as it\nprovides the more robust solution.\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n\ndocument.getElementById('sz-conf').basePath = 'http://apis.mydomain.com';\n                \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sz-configuration\n            \n\n\n            \n                styles\n                \n            \n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                apiKeys\n                            \n                            \n                                basePath\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                            \n                                withCredentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parametersChanged\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    apiKeys\n                                \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                                \n                                    accessToken\n                                \n                                \n                                    basePath\n                                \n                                \n                                    withCredentials\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiConfigService: SzConfigurationService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiConfigService\n                                                  \n                                                        \n                                                                        SzConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        apiKeys\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        apiKeys to use when connnecting to Api Server\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        basePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        prefix all api requests with this value. most commonly a http or https\nprotocol://hostname:port string that your api server can be accessed through\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        password used for challenge respose. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Username to use when using challenge response authentication.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        withCredentials\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        whether or not to use CORs for api requests \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parametersChanged\n                    \n                \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        emmitted when a property has been changed.\nused mostly for diagnostics.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        apiKeys\n                    \n                \n\n\n                \n                    \n                        setapiKeys(value: literal type)\n                    \n                \n                    \n                        \n                                apiKeys to use when connnecting to Api Server\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        literal type\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n\n                \n                    \n                        setusername(value: string)\n                    \n                \n                    \n                        \n                                Username to use when using challenge response authentication.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n\n                \n                    \n                        setpassword(value: string)\n                    \n                \n                    \n                        \n                                password used for challenge respose. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n\n                \n                    \n                        setaccessToken(value)\n                    \n                \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        basePath\n                    \n                \n\n\n                \n                    \n                        setbasePath(value: string)\n                    \n                \n                    \n                        \n                                prefix all api requests with this value. most commonly a http or https\nprotocol://hostname:port string that your api server can be accessed through\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        withCredentials\n                    \n                \n\n\n                \n                    \n                        setwithCredentials(value: boolean)\n                    \n                \n                    \n                        \n                                whether or not to use CORs for api requests \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n\n\n    \n            \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'SzConfigurationAboutComponent', 'selector': 'sz-configuration-about'},{'name': 'SzConfigurationComponent', 'selector': 'sz-configuration'},{'name': 'SzEntityDetailComponent', 'selector': 'sz-entity-detail'},{'name': 'SzEntityDetailGraphFilterComponent', 'selector': 'sz-entity-detail-graph-filter'},{'name': 'SzEntityRecordViewerComponent', 'selector': 'sz-entity-record-viewer'},{'name': 'SzPoweredByComponent', 'selector': 'sz-powered-by'},{'name': 'SzPreferencesComponent', 'selector': 'sz-preferences'},{'name': 'SzSearchByIdComponent', 'selector': 'sz-search-by-id'},{'name': 'SzSearchComponent', 'selector': 'sz-search'},{'name': 'SzSearchResultsComponent', 'selector': 'sz-search-results'},{'name': 'SzStandaloneGraphComponent', 'selector': 'sz-standalone-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SzConfigurationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SzConfigurationService.html":{"url":"injectables/SzConfigurationService.html","title":"injectable - SzConfigurationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SzConfigurationService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-configuration.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides a service injectable that can be used to dynamically change the global\nvalues that are passed throughout all components for API connection requests.\nThis service is provided for advanced usage where the connection parameters have to\nchange dynamically through the application lifecycle(ie changing request namespace from 'http://api.mydomain.com' to 'http://api.mydomain.com/SUBSECTION').\nIf your application just needs its values initialized that should be done by\npassing in a config factory to the SenzingSdkModule method.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            this.apiconf.basePath = 'http://apis.mydomain.com/';\n                        \n                        \n                            this.apiconf.parametersChanged.subscribe( (params) => { console.log('api connection params changed.', params); })\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiConfiguration\n                            \n                            \n                                    Public\n                                graphApiConfigService\n                            \n                            \n                                    Public\n                                prefs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asConfigurationParameters\n                            \n                            \n                                    Public\n                                fromParameters\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    apiKeys\n                                \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                                \n                                    accessToken\n                                \n                                \n                                    basePath\n                                \n                                \n                                    withCredentials\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiConfiguration: SzRestConfiguration, graphApiConfigService: SzGraphConfigurationService, prefs: SzPrefsService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiConfiguration\n                                                  \n                                                        \n                                                                    SzRestConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphApiConfigService\n                                                  \n                                                        \n                                                                    SzGraphConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prefs\n                                                  \n                                                        \n                                                                        SzPrefsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            asConfigurationParameters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    asConfigurationParameters()\n                \n            \n\n\n\n\n            \n                \n                    bulk fetch of sdk configuration parameters. \n\n\n                    \n                        Returns :     SzRestConfigurationParameters\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fromParameters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromParameters(value: SzRestConfigurationParameters)\n                \n            \n\n\n\n\n            \n                \n                    bulk runtime set of sdk configuration \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            SzRestConfigurationParameters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzRestConfiguration\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(SzRestConfiguration)\n                            \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            graphApiConfigService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzGraphConfigurationService\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzPrefsService\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        apiKeys\n                    \n                \n\n\n                \n                    \n                        setapiKeys(value: literal type)\n                    \n                \n                    \n                        \n                                apiKeys to use when connnecting to Api Server\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        literal type\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n\n                \n                    \n                        setusername(value: string)\n                    \n                \n                    \n                        \n                                Username to use when using challenge response authentication.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n\n                \n                    \n                        setpassword(value: string)\n                    \n                \n                    \n                        \n                                password used for challenge respose. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n\n                \n                    \n                        setaccessToken(value)\n                    \n                \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        basePath\n                    \n                \n\n                \n                    \n                        getbasePath()\n                    \n                \n\n                \n                    \n                        setbasePath(value: string)\n                    \n                \n                    \n                        \n                                prefix all api requests with this value. most commonly a http or https\nprotocol://hostname:port string that your api server can be accessed through\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        withCredentials\n                    \n                \n\n\n                \n                    \n                        setwithCredentials(value: boolean)\n                    \n                \n                    \n                        \n                                whether or not to use CORs for api requests \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzDataSourceRecordAnalysis.html":{"url":"classes/SzDataSourceRecordAnalysis.html","title":"class - SzDataSourceRecordAnalysis","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzDataSourceRecordAnalysis\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/data-sources.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                recordCount\n                            \n                            \n                                recordsWithRecordIdCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recordCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recordsWithRecordIdCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SzDataSourcesService.html":{"url":"injectables/SzDataSourcesService.html","title":"injectable - SzDataSourcesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SzDataSourcesService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-datasources.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to the /datasources api path.\nSee https://github.com/Senzing/senzing-rest-api/blob/master/senzing-rest-api.yaml#L172\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addDataSources\n                            \n                            \n                                    Public\n                                listDataSources\n                            \n                            \n                                    Public\n                                listDataSourcesDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addDataSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addDataSources(dataSources: string[])\n                \n            \n\n\n\n\n            \n                \n                    add datasources and return a array of datasources after the operation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataSources\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listDataSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listDataSources()\n                \n            \n\n\n\n\n            \n                \n                    get an array of datasources.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listDataSourcesDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listDataSourcesDetails()\n                \n            \n\n\n\n\n            \n                \n                    get an array of datasources.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SzEntityDetailGraphFilterComponent.html":{"url":"components/SzEntityDetailGraphFilterComponent.html","title":"component - SzEntityDetailGraphFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SzEntityDetailGraphFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Template\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    src/lib/entity/detail/sz-entity-detail-graph/sz-entity-detail-graph-filter.component.ts\n\n\n    \n        Description\n    \n    \n        Control Component allowing UI friendly changes\nto filtering, colors, and parameters of graph control.\nintegrated with graph preferences and prefBUS.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n                \n                    \n\n\ndocument.getElementById('sz-entity-detail-graph-filter').addEventListener('optionChanged', function(data) { console.log('filter(s) changed', data); });\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sz-entity-detail-graph-filter\n            \n\n            \n                styleUrls\n                ./sz-entity-detail-graph-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sz-entity-detail-graph-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _datasources\n                            \n                            \n                                    Public\n                                _showLinkLabels\n                            \n                            \n                                colorsByDataSourcesForm\n                            \n                            \n                                colorsMiscForm\n                            \n                            \n                                    Public\n                                datasources\n                            \n                            \n                                filterByDataSourcesForm\n                            \n                            \n                                isOpen\n                            \n                            \n                                    Public\n                                prefs\n                            \n                            \n                                slidersForm\n                            \n                            \n                                    Public\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDataSources\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onCheckboxPrefToggle\n                            \n                            \n                                onColorParameterChange\n                            \n                            \n                                onDsColorChange\n                            \n                            \n                                onDsFilterChange\n                            \n                            \n                                onIntParameterChange\n                            \n                            \n                                    Public\n                                shouldDataSourceBeDisplayed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buildOut\n                            \n                            \n                                buildOutMax\n                            \n                            \n                                buildOutMin\n                            \n                            \n                                dataSourceColors\n                            \n                            \n                                dataSourcesFiltered\n                            \n                            \n                                maxDegreesOfSeparation\n                            \n                            \n                                maxEntities\n                            \n                            \n                                queriedEntitiesColor\n                            \n                            \n                                sectionTitles\n                            \n                            \n                                showDataSources\n                            \n                            \n                                showLinkLabels\n                            \n                            \n                                showMaxDegreesOfSeparation\n                            \n                            \n                                showMaxEntities\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                optionChanged\n                            \n                            \n                                prefsChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.not-showing-link-labels\n                            \n                            \n                                class.showing-link-labels\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    showLinkLabels\n                                \n                                \n                                    filterByDataSourcesData\n                                \n                                \n                                    colorsByDataSourcesData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(prefs: SzPrefsService, datasources: SzDataSourcesService, formBuilder: FormBuilder, cd: ChangeDetectorRef)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefs\n                                                  \n                                                        \n                                                                        SzPrefsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datasources\n                                                  \n                                                        \n                                                                        SzDataSourcesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buildOut\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buildOutMax\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buildOutMin\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSourceColors\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSourcesFiltered\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDegreesOfSeparation\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxEntities\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        queriedEntitiesColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sectionTitles\n                    \n                \n                \n                    \n                        Default value : [\n    'Filters',\n    'Filter by Source',\n    'Colors by Source',\n    'Color by: '\n  ]\n                    \n                \n                \n                    \n                        titles that are displayed for each section in component \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showDataSources\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showLinkLabels\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showMaxDegreesOfSeparation\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showMaxEntities\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        optionChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                \n                    \n                        inheirited from \"SzEntityDetailGraphControlComponent\" code. wanted it to be interchangeable \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        prefsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                \n                    \n                        emmitted when a property has been changed.\nused mostly for diagnostics.\n\n                    \n                \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.not-showing-link-labels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.showing-link-labels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDataSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataSources()\n                \n            \n\n\n\n\n            \n                \n                    helper method for retrieving list of datasources \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n\n\n            \n                \n                    unsubscribe when component is destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onCheckboxPrefToggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onCheckboxPrefToggle(optName: string, event)\n                \n            \n\n\n\n\n            \n                \n                    handler method for when a basic bool pref should be toggled \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    optName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onColorParameterChange\n                        \n                        \n                    \n                \n            \n            \n                \nonColorParameterChange(prefName, value)\n                \n            \n\n\n\n\n            \n                \n                    handler for when an string color pref value has changed. ie: queriedEntitiesColor  \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prefName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDsColorChange\n                        \n                        \n                    \n                \n            \n            \n                \nonDsColorChange()\n                \n            \n\n\n\n\n            \n                \n                    handler for when a color value for a source in the \"colorsByDataSourcesForm\" has changed \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDsFilterChange\n                        \n                        \n                    \n                \n            \n            \n                \nonDsFilterChange()\n                \n            \n\n\n\n\n            \n                \n                    handler for when a filter by datasouce value in the \"filterByDataSourcesForm\" has changed \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onIntParameterChange\n                        \n                        \n                    \n                \n            \n            \n                \nonIntParameterChange(prefName, value)\n                \n            \n\n\n\n\n            \n                \n                    handler for when an integer pref value has changed. ie: buildOut  \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prefName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldDataSourceBeDisplayed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDataSourceBeDisplayed(dsName: string)\n                \n            \n\n\n\n\n            \n                \n                    if \"showDataSources\" array is specified, check that string name is present in list \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dsName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _datasources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _showLinkLabels\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n\n                \n                    \n                        show match keys \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorsByDataSourcesForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n\n                \n                    \n                        the form group for colors by datasource list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorsMiscForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n\n                \n                    \n                        the form group for colors by other characteristics \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datasources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzDataSourcesService\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterByDataSourcesForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n\n                \n                    \n                        the form group for the filters by datasource list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzPrefsService\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slidersForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n\n                \n                    \n                        the form group for maxDegreesOfSeparation, maxEntities, buildOut parameter sliders \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n                \n                    \n                        subscription to notify subscribers to unbind \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        showLinkLabels\n                    \n                \n\n                \n                    \n                        getshowLinkLabels()\n                    \n                \n\n                \n                    \n                        setshowLinkLabels(value)\n                    \n                \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        filterByDataSourcesData\n                    \n                \n\n                \n                    \n                        getfilterByDataSourcesData()\n                    \n                \n                    \n                        \n                                get data from reactive form control array \n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        colorsByDataSourcesData\n                    \n                \n\n                \n                    \n                        getcolorsByDataSourcesData()\n                    \n                \n                    \n                        \n                                get data from reactive form control array \n\n\n                        \n                    \n\n            \n        \n\n\n\n\n\n    \n        \n  {{ sectionTitles[0] }}\n\n  \n  \n    \n      display match keys on relationship lines\n      \n        \n        \n        \n        Show Match Keys\n      \n    \n\n    \n      \n        \n          \n            Scope\n            number of relationship hops away from focused entity\n          \n        \n        \n        ({{ buildOut }})\n      \n    \n    \n      \n        \n          \n            Max\n            hard limit on how many entities will be displayed\n          \n        \n        \n        ({{ maxEntities }})\n      \n    \n    \n      \n        \n          \n            Degrees\n            maximum degrees of separation between nodes and focus\n          \n        \n        \n        ({{ maxDegreesOfSeparation }})\n      \n    \n  \n  \n\n  \n  {{ sectionTitles[1] }}\n  \n  \n    \n        \n            \n              \n                {{_datasources[i]}}\n              \n            \n        \n    \n  \n  \n  \n  {{ sectionTitles[2] }}\n  \n  \n    \n        \n          \n            \n              {{_datasources[i]}}\n            \n          \n        \n    \n  \n  \n  \n  {{ sectionTitles[3] }}\n  \n  \n    \n      \n        \n        \n          Active/Focused Enitity\n          The color of the current entity or entities\n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./sz-entity-detail-graph-filter.component.scss\n                \n                :host {\n  .drawer-wrapper {\n    margin: 1em 0;\n  }\n\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    margin: var(--sz-entity-graph-control-item-margin);\n    display: block;\n    background-color: var(--sz-entity-graph-control-item-background-color);\n    padding: 4px 1em 4px 1em;\n    cursor: var(--sz-entity-graph-control-cursor);\n\n    /*\n    &:hover {\n      cursor: var(--sz-entity-graph-control-item-cursor);\n    }*/\n\n    label {\n      cursor: var(--sz-entity-graph-control-item-cursor);\n    }\n    a {\n      display: block;\n      cursor: var(--sz-entity-graph-control-item-cursor);\n    }\n  }\n\n  h3:first-child {\n    margin-top: 0;\n  }\n\n  hr {\n    margin-top: 1em;\n    border-top: 0;\n    border-bottom: 1px solid #dadada;\n  }\n\n  ul.sliders-list {\n    /* position the current val to the right of slider */\n    .intVal {\n      position: relative;\n      top: -7px;\n      margin-left: 7px;\n    }\n  }\n  ul.filters-list {\n    li {\n      margin: 0;\n      padding: 0 0 0 14px;\n    }\n    input[type=checkbox] {\n      width: 1.2em;\n      height: 1.2em;\n      padding: 0;\n      margin: 0 7px 0 0;\n    }\n  }\n  ul.colors-list, ul.other-colors-list  {\n    li {\n      margin-bottom: 2px;\n      padding-bottom: 0;\n    }\n    input[type=color] {\n      display: inline-block;\n      width: 15px;\n      height: 18px;\n      margin: 0 7px 0 0;\n    }\n  }\n}\n\n.has-tooltip {\n  position: relative;\n  .tooltip {\n    position: absolute;\n    visibility: hidden;\n    opacity: 0;\n    right: -100%;\n    bottom: 115%;\n    /* width: 120px; */\n    background-color: #00000073;\n    color: #fff;\n    text-align: center;\n    padding: 5px 8px;\n    border-radius: 6px;\n    white-space: nowrap;\n    font-size: 10px;\n    z-index: 1;\n    transition: opacity .5s;\n  }\n  &.block-level-src {\n    .tooltip {\n      right: 10%;\n    }\n  }\n  /* tooltip has little pointer nub */\n  .tooltip::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 80%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: #00000073 transparent transparent transparent;\n  }\n}\n\n/* Show the tooltip text when you mouse over the tooltip container */\n.has-tooltip:hover .tooltip {\n  visibility: visible;\n  opacity: 1;\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ sectionTitles[0] }}              display match keys on relationship lines                                      Show Match Keys                                                  Scope            number of relationship hops away from focused entity                                  ({{ buildOut }})                                                  Max            hard limit on how many entities will be displayed                                  ({{ maxEntities }})                                                  Degrees            maximum degrees of separation between nodes and focus                                  ({{ maxDegreesOfSeparation }})                  {{ sectionTitles[1] }}                                                          {{_datasources[i]}}                                              {{ sectionTitles[2] }}                                                    {{_datasources[i]}}                                          {{ sectionTitles[3] }}                                        Active/Focused Enitity          The color of the current entity or entities                      '\n    var COMPONENTS = [{'name': 'SzConfigurationAboutComponent', 'selector': 'sz-configuration-about'},{'name': 'SzConfigurationComponent', 'selector': 'sz-configuration'},{'name': 'SzEntityDetailComponent', 'selector': 'sz-entity-detail'},{'name': 'SzEntityDetailGraphFilterComponent', 'selector': 'sz-entity-detail-graph-filter'},{'name': 'SzEntityRecordViewerComponent', 'selector': 'sz-entity-record-viewer'},{'name': 'SzPoweredByComponent', 'selector': 'sz-powered-by'},{'name': 'SzPreferencesComponent', 'selector': 'sz-preferences'},{'name': 'SzSearchByIdComponent', 'selector': 'sz-search-by-id'},{'name': 'SzSearchComponent', 'selector': 'sz-search'},{'name': 'SzSearchResultsComponent', 'selector': 'sz-search-results'},{'name': 'SzStandaloneGraphComponent', 'selector': 'sz-standalone-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SzEntityDetailGraphFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SzEntityDetailSectionData.html":{"url":"interfaces/SzEntityDetailSectionData.html","title":"interface - SzEntityDetailSectionData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SzEntityDetailSectionData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/entity-detail-section-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addressData\n                                \n                                \n                                        bestName\n                                \n                                \n                                        characteristicData\n                                \n                                \n                                            Optional\n                                        dataSource\n                                \n                                \n                                        entityId\n                                \n                                \n                                            Optional\n                                        features\n                                \n                                \n                                        identifierData\n                                \n                                \n                                        lensId\n                                \n                                \n                                        matchKey\n                                \n                                \n                                        matchLevel\n                                \n                                \n                                        nameData\n                                \n                                \n                                        phoneData\n                                \n                                \n                                        records\n                                \n                                \n                                        recordSummaries\n                                \n                                \n                                        refScore\n                                \n                                \n                                        resolutionRuleCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addressData\n                                    \n                                \n                                \n                                    \n                                        addressData:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bestName\n                                    \n                                \n                                \n                                    \n                                        bestName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        characteristicData\n                                    \n                                \n                                \n                                    \n                                        characteristicData:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataSource\n                                    \n                                \n                                \n                                    \n                                        dataSource:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierData\n                                    \n                                \n                                \n                                    \n                                        identifierData:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lensId\n                                    \n                                \n                                \n                                    \n                                        lensId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchKey\n                                    \n                                \n                                \n                                    \n                                        matchKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchLevel\n                                    \n                                \n                                \n                                    \n                                        matchLevel:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nameData\n                                    \n                                \n                                \n                                    \n                                        nameData:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneData\n                                    \n                                \n                                \n                                    \n                                        phoneData:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        records\n                                    \n                                \n                                \n                                    \n                                        records:     SzEntityRecord[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SzEntityRecord[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordSummaries\n                                    \n                                \n                                \n                                    \n                                        recordSummaries:     SzDataSourceRecordSummary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SzDataSourceRecordSummary[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refScore\n                                    \n                                \n                                \n                                    \n                                        refScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolutionRuleCode\n                                    \n                                \n                                \n                                    \n                                        resolutionRuleCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SzEntityDetailSectionSummary.html":{"url":"interfaces/SzEntityDetailSectionSummary.html","title":"interface - SzEntityDetailSectionSummary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SzEntityDetailSectionSummary\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/entity-detail-section-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        title\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SzEntityRecordViewerComponent.html":{"url":"components/SzEntityRecordViewerComponent.html","title":"component - SzEntityRecordViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SzEntityRecordViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Template\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    src/lib/record/sz-entity-record-viewer.component.ts\n\n\n    \n        Description\n    \n    \n        A component for displaying the result(s) of the sz-search-by-id\nwhen the results are of type SzEntityRecord. The fragment only displays information\nthat was present in the record itself. The easiest way to use this component is to pair it\nwith the  component.\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n\n\n                \n                \n                    \n\n\n\n\ndocument.getElementById('formInput').addEventListener('resultChange', function(evt) {\ndocument.getElementById('formResult').record = evt.data;\n});\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sz-entity-record-viewer\n            \n\n            \n                styleUrls\n                ./sz-entity-record-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sz-entity-record-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _layoutClasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showTab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                forceLayout\n                            \n                            \n                                layoutClasses\n                            \n                            \n                                record\n                            \n                            \n                                showJSON\n                            \n                            \n                                showNoResultMessage\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layoutClasses\n                                \n                                \n                                    overViewActive\n                                \n                                \n                                    jsonViewActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        forceLayout\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        whether or not to force to a layout and ignore responsiveness \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutClasses\n                    \n                \n                \n                    \n                        setter for _layoutClasses  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        record\n                    \n                \n                \n                    \n                        Type :     SzEntityRecord\n\n                    \n                \n                \n                    \n                        the record to display \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showJSON\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        show the JSON data for this.record \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showNoResultMessage\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        show a message when a search has 0 results \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showTab\n                        \n                        \n                    \n                \n            \n            \n                \nshowTab(activeView: string)\n                \n            \n\n\n\n\n            \n                \n                    activate a tab. 'json' | 'overview' | 'summary' \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activeView\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _layoutClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        the css classes being applied. layout-wide | layout-medium  | layout-narrow | layout-rail\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layoutClasses\n                    \n                \n\n                \n                    \n                        getlayoutClasses()\n                    \n                \n                    \n                        \n                                getter for _layoutClasses  \n\n\n                        \n                    \n\n                \n                    \n                        setlayoutClasses(value)\n                    \n                \n                    \n                        \n                                setter for _layoutClasses  \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        overViewActive\n                    \n                \n\n                \n                    \n                        getoverViewActive()\n                    \n                \n                    \n                        \n                                is the \"Overview\" tab the actively focused tab \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jsonViewActive\n                    \n                \n\n                \n                    \n                        getjsonViewActive()\n                    \n                \n                    \n                        \n                                is the \"JSON\" tab the actively focused tab \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n\n    \n        \n\n  \n    \n      Summary\n      JSON\n    \n    \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./sz-entity-record-viewer.component.scss\n                \n                :host {\n  display: block;\n  --active-tab-color: #f7f7f7;\n  --inactive-tab-color: #999;\n\n  ngx-json-viewer, .ngx-json-viewer {\n    display: block;\n  }\n\n  sz-entity-record-card-content, .sz-entity-record-card-content {\n    display: block;\n  }\n\n  .tabset {\n    ul {\n      list-style-type:none; padding: 0; margin: 0;\n      li {\n        display: inline-block;\n        padding: .5em 2em;\n        background-color: var(--inactive-tab-color);\n        border-right: 1px solid #909090;\n        cursor: pointer;\n        border-top: 1px solid #f8f8f8;\n        border-bottom: 1px solid #717171;\n\n        &:last-child {\n          border-right: 1px solid #717171;\n        }\n      }\n    }\n    .tabset-view {\n      display: block;\n      padding: 1em 1em;\n      background-color: var(--active-tab-color);\n    }\n  }\n  .tabset.overview {\n    /* hide json view */\n    ngx-json-viewer, .ngx-json-viewer {\n      display: none;\n    }\n    li.overview {\n      border-top: 1px solid #e7e0e0;\n      border-bottom: 1px solid transparent;\n      background-color: var(--active-tab-color);\n      font-weight: bold;\n      cursor: default;\n    }\n  }\n  .tabset.json {\n    /* hide summary view */\n    sz-entity-record-card-content, .sz-entity-record-card-content {\n      display: none;\n    }\n    li.json {\n      border-top: 1px solid #e7e0e0;\n      border-bottom: 1px solid transparent;\n      background-color: var(--active-tab-color);\n      font-weight: bold;\n      cursor: default;\n      &:last-child {\n        border-right: 1px solid #ccc;\n      }\n    }\n  }\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Summary      JSON                            '\n    var COMPONENTS = [{'name': 'SzConfigurationAboutComponent', 'selector': 'sz-configuration-about'},{'name': 'SzConfigurationComponent', 'selector': 'sz-configuration'},{'name': 'SzEntityDetailComponent', 'selector': 'sz-entity-detail'},{'name': 'SzEntityDetailGraphFilterComponent', 'selector': 'sz-entity-detail-graph-filter'},{'name': 'SzEntityRecordViewerComponent', 'selector': 'sz-entity-record-viewer'},{'name': 'SzPoweredByComponent', 'selector': 'sz-powered-by'},{'name': 'SzPreferencesComponent', 'selector': 'sz-preferences'},{'name': 'SzSearchByIdComponent', 'selector': 'sz-search-by-id'},{'name': 'SzSearchComponent', 'selector': 'sz-search'},{'name': 'SzSearchResultsComponent', 'selector': 'sz-search-results'},{'name': 'SzStandaloneGraphComponent', 'selector': 'sz-standalone-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SzEntityRecordViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SzEntitySearchParams.html":{"url":"interfaces/SzEntitySearchParams.html","title":"interface - SzEntitySearchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SzEntitySearchParams\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/entity-search.ts\n        \n\n            \n                Description\n            \n            \n                A model of search parameters that can be sent to the\napi server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ADDR_CITY\n                                \n                                \n                                            Optional\n                                        ADDR_FULL\n                                \n                                \n                                            Optional\n                                        ADDR_LINE1\n                                \n                                \n                                            Optional\n                                        ADDR_POSTAL_CODE\n                                \n                                \n                                            Optional\n                                        ADDR_STATE\n                                \n                                \n                                            Optional\n                                        ADDR_TYPE\n                                \n                                \n                                            Optional\n                                        COMPANY_NAME_ORG\n                                \n                                \n                                            Optional\n                                        DATE_OF_BIRTH\n                                \n                                \n                                            Optional\n                                        DRIVERS_LICENSE_NUMBER\n                                \n                                \n                                            Optional\n                                        DRIVERS_LICENSE_STATE\n                                \n                                \n                                            Optional\n                                        EMAIL_ADDRESS\n                                \n                                \n                                            Optional\n                                        GENDER\n                                \n                                \n                                            Optional\n                                        IDENTIFIER\n                                \n                                \n                                            Optional\n                                        IDENTIFIER_TYPE\n                                \n                                \n                                            Optional\n                                        NAME_FIRST\n                                \n                                \n                                            Optional\n                                        NAME_FULL\n                                \n                                \n                                            Optional\n                                        NAME_LAST\n                                \n                                \n                                            Optional\n                                        NAME_MIDDLE\n                                \n                                \n                                            Optional\n                                        NAME_PREFIX\n                                \n                                \n                                            Optional\n                                        NAME_SUFFIX\n                                \n                                \n                                            Optional\n                                        NAME_TYPE\n                                \n                                \n                                            Optional\n                                        NIN_COUNTRY\n                                \n                                \n                                            Optional\n                                        NIN_NUMBER\n                                \n                                \n                                            Optional\n                                        PASSPORT_COUNTRY\n                                \n                                \n                                            Optional\n                                        PASSPORT_NUMBER\n                                \n                                \n                                            Optional\n                                        PERSON_NAME_FULL\n                                \n                                \n                                            Optional\n                                        PHONE_NUMBER\n                                \n                                \n                                            Optional\n                                        SOCIAL_HANDLE\n                                \n                                \n                                            Optional\n                                        SOCIAL_NETWORK\n                                \n                                \n                                            Optional\n                                        SSN_NUMBER\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ADDR_CITY\n                                    \n                                \n                                \n                                    \n                                        ADDR_CITY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ADDR_FULL\n                                    \n                                \n                                \n                                    \n                                        ADDR_FULL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ADDR_LINE1\n                                    \n                                \n                                \n                                    \n                                        ADDR_LINE1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ADDR_POSTAL_CODE\n                                    \n                                \n                                \n                                    \n                                        ADDR_POSTAL_CODE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ADDR_STATE\n                                    \n                                \n                                \n                                    \n                                        ADDR_STATE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ADDR_TYPE\n                                    \n                                \n                                \n                                    \n                                        ADDR_TYPE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        COMPANY_NAME_ORG\n                                    \n                                \n                                \n                                    \n                                        COMPANY_NAME_ORG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATE_OF_BIRTH\n                                    \n                                \n                                \n                                    \n                                        DATE_OF_BIRTH:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DRIVERS_LICENSE_NUMBER\n                                    \n                                \n                                \n                                    \n                                        DRIVERS_LICENSE_NUMBER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DRIVERS_LICENSE_STATE\n                                    \n                                \n                                \n                                    \n                                        DRIVERS_LICENSE_STATE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EMAIL_ADDRESS\n                                    \n                                \n                                \n                                    \n                                        EMAIL_ADDRESS:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GENDER\n                                    \n                                \n                                \n                                    \n                                        GENDER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IDENTIFIER\n                                    \n                                \n                                \n                                    \n                                        IDENTIFIER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IDENTIFIER_TYPE\n                                    \n                                \n                                \n                                    \n                                        IDENTIFIER_TYPE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NAME_FIRST\n                                    \n                                \n                                \n                                    \n                                        NAME_FIRST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NAME_FULL\n                                    \n                                \n                                \n                                    \n                                        NAME_FULL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NAME_LAST\n                                    \n                                \n                                \n                                    \n                                        NAME_LAST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NAME_MIDDLE\n                                    \n                                \n                                \n                                    \n                                        NAME_MIDDLE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NAME_PREFIX\n                                    \n                                \n                                \n                                    \n                                        NAME_PREFIX:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NAME_SUFFIX\n                                    \n                                \n                                \n                                    \n                                        NAME_SUFFIX:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NAME_TYPE\n                                    \n                                \n                                \n                                    \n                                        NAME_TYPE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NIN_COUNTRY\n                                    \n                                \n                                \n                                    \n                                        NIN_COUNTRY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NIN_NUMBER\n                                    \n                                \n                                \n                                    \n                                        NIN_NUMBER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PASSPORT_COUNTRY\n                                    \n                                \n                                \n                                    \n                                        PASSPORT_COUNTRY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PASSPORT_NUMBER\n                                    \n                                \n                                \n                                    \n                                        PASSPORT_NUMBER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PERSON_NAME_FULL\n                                    \n                                \n                                \n                                    \n                                        PERSON_NAME_FULL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PHONE_NUMBER\n                                    \n                                \n                                \n                                    \n                                        PHONE_NUMBER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SOCIAL_HANDLE\n                                    \n                                \n                                \n                                    \n                                        SOCIAL_HANDLE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SOCIAL_NETWORK\n                                    \n                                \n                                \n                                    \n                                        SOCIAL_NETWORK:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SSN_NUMBER\n                                    \n                                \n                                \n                                    \n                                        SSN_NUMBER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SzEntityTypesService.html":{"url":"injectables/SzEntityTypesService.html","title":"injectable - SzEntityTypesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SzEntityTypesService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-entitytypes.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to the /entitytypes api path.\nSee https://github.com/Senzing/senzing-rest-api/blob/master/senzing-rest-api.yaml#L172\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addEntityTypes\n                            \n                            \n                                    Public\n                                listEntityTypes\n                            \n                            \n                                    Public\n                                listEntityTypesDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addEntityTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addEntityTypes(entityTypes: string[], entityClass?: string)\n                \n            \n\n\n\n\n            \n                \n                    add entity type and return a array of entity types after the operation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityTypes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entityClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listEntityTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listEntityTypes()\n                \n            \n\n\n\n\n            \n                \n                    get an array of entity types.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listEntityTypesDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listEntityTypesDetails()\n                \n            \n\n\n\n\n            \n                \n                    get an array of entity types.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzFolio.html":{"url":"classes/SzFolio.html","title":"class - SzFolio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzFolio\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/folio.ts\n        \n\n            \n                Description\n            \n            \n                A collection base class containing common\nproperties and methods for interacting with a\ncollection of SzFolioItem based items.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzFolioItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        the collection of SzFolioItem's \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        the name of the folio \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(item: SzFolioItem)\n                \n            \n\n\n\n\n            \n                \n                    add a  SzFolioItem to the \"items\" collection \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SzFolioItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(item)\n                \n            \n\n\n\n\n            \n                \n                    remove a SzFolioItem from \"items\" if it exists \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzFolioItem.html":{"url":"classes/SzFolioItem.html","title":"class - SzFolioItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzFolioItem\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/folio.ts\n        \n\n            \n                Description\n            \n            \n                A abstract class representing a generic SzFolioItem.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                _data\n                            \n                            \n                                    Abstract\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        the data representing this folio item \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        the name of the folio item \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                    \n                        \n                                the data representing this folio item \n\n\n                        \n                    \n\n                \n                    \n                        setdata(value: any)\n                    \n                \n                    \n                        \n                                the data representing this folio item \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SzFoliosService.html":{"url":"injectables/SzFoliosService.html","title":"injectable - SzFoliosService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SzFoliosService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-folios.service.ts\n        \n\n            \n                Description\n            \n            \n                A service providing access to top level Folios for things like\n\"Saved Searches\", \"Search History\", \"Saved Projects\"\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searches\n                            \n                            \n                                    Public\n                                searchHistoryUpdated\n                            \n                            \n                                    Public\n                                searchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addToSearchHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    search_history\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prefs: SzPrefsService, searchService: SzSearchService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefs\n                                                  \n                                                        \n                                                                        SzPrefsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        SzSearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addToSearchHistory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addToSearchHistory(data: SzSearchEvent)\n                \n            \n\n\n\n\n            \n                \n                    add search to history stack \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SzSearchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzSearchParamsFolio[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        the collection that holds the users saved searches \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchHistoryUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.search_history$.asObservable()\n                        \n                    \n\n                \n                    \n                        the observeable that can be listend for when the search history is updated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzSearchService\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        search_history\n                    \n                \n\n                \n                    \n                        getsearch_history()\n                    \n                \n                    \n                        \n                                convenience proxy getter to prefs search history location \n\n\n                                \n                                    Returns :         SzSearchHistoryFolio\n\n                                \n                        \n                    \n\n                \n                    \n                        setsearch_history(value)\n                    \n                \n                    \n                        \n                                convenience proxy setter to prefs search history location \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzGraphPrefs.html":{"url":"classes/SzGraphPrefs.html","title":"class - SzGraphPrefs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzGraphPrefs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-prefs.service.ts\n        \n\n            \n                Description\n            \n            \n                Graph related preferences bus class.\nused by SzPrefsService to store it's\ngraph related prefs.\nShould really be used from SzPrefsService context, not on its own.\n\n            \n\n            \n                Extends\n            \n            \n                        SzSdkPrefsBase\n            \n\n\n            \n                Example\n            \n            \n                        \n                            this.prefs.graph.showMatchKeys = true;\nthis.prefs.graph.buildOut =  5;\n                        \n                        \n                            this.prefs.graph.prefsChanged.subscribe( (prefs) => { console.log('graph pref change happened.', prefs); })\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jsonKeys\n                            \n                            \n                                    Public\n                                bulkSet\n                            \n                            \n                                jsonKeys\n                            \n                            \n                                    Public\n                                prefsChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fromJSONObject\n                            \n                            \n                                    Public\n                                toJSONObject\n                            \n                            \n                                    Public\n                                toJSONString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    openInNewTab\n                                \n                                \n                                    openInSidePanel\n                                \n                                \n                                    dataSourceColors\n                                \n                                \n                                    showMatchKeys\n                                \n                                \n                                    rememberStateOptions\n                                \n                                \n                                    maxDegreesOfSeparation\n                                \n                                \n                                    maxEntities\n                                \n                                \n                                    buildOut\n                                \n                                \n                                    dataSourcesFiltered\n                                \n                                \n                                    neverFilterQueriedEntityIds\n                                \n                                \n                                    queriedEntitiesColor\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n                \n                    \n                            publish out a \"first\" real payload so that\nsubscribers get an initial payload from this subclass\ninstead of the empty superclass\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'openInNewTab',\n    'openInSidePanel',\n    'dataSourceColors',\n    'showMatchKeys',\n    'rememberStateOptions',\n    'maxDegreesOfSeparation',\n    'maxEntities',\n    'buildOut',\n    'dataSourcesFiltered',\n    'neverFilterQueriedEntityIds',\n    'queriedEntitiesColor'\n  ]\n                        \n                    \n\n                \n                    \n                        the keys of member setters or variables in the object\nto output in json, or to take as json input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bulkSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n\n                \n                    \n                        during a bulk property set, set this to true to\nnot publish change events on every single value change\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        the keys of member setters or variables in the object\nto output in json, or to take as json input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prefsChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this.toJSONObject())\n                        \n                    \n\n                \n                    \n                        behavior subject that can be subscribed to for change\nnotifications.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fromJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSONObject(value: string)\n                \n            \n\n\n\n\n            \n                \n                    populate values by calling setters with the same names as json keys \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJSONObject()\n                \n            \n\n\n\n\n            \n                \n                    get shallow JSON copy of object state. properties are filtered by members of jsonKeys \n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJSONString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJSONString()\n                \n            \n\n\n\n\n            \n                \n                    get object state representation as a string \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        openInNewTab\n                    \n                \n\n                \n                    \n                        getopenInNewTab()\n                    \n                \n                    \n                        \n                                open graph entity clicks in new tab \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setopenInNewTab(value: boolean)\n                    \n                \n                    \n                        \n                                open graph entity clicks in new tab \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        openInSidePanel\n                    \n                \n\n                \n                    \n                        getopenInSidePanel()\n                    \n                \n                    \n                        \n                                open graph entity clicks in side panel \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setopenInSidePanel(value: boolean)\n                    \n                \n                    \n                        \n                                open graph entity clicks in side panel \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSourceColors\n                    \n                \n\n                \n                    \n                        getdataSourceColors()\n                    \n                \n                    \n                        \n                                colors to apply to entity node when belonging to particular datasources \n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n                \n                    \n                        setdataSourceColors(value: any)\n                    \n                \n                    \n                        \n                                colors to apply to entity node when belonging to particular datasources \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        showMatchKeys\n                    \n                \n\n                \n                    \n                        getshowMatchKeys()\n                    \n                \n                    \n                        \n                                show match keys/edge labels on relationships \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setshowMatchKeys(value: boolean)\n                    \n                \n                    \n                        \n                                show match keys/edge labels on relationships \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        rememberStateOptions\n                    \n                \n\n                \n                    \n                        getrememberStateOptions()\n                    \n                \n                    \n                        \n                                whether or not to publish change events on property value changes.\nuseful for not getting notified on bulk property sets.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setrememberStateOptions(value: boolean)\n                    \n                \n                    \n                        \n                                whether or not to publish change events on property value changes.\nuseful for not getting notified on bulk property sets.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDegreesOfSeparation\n                    \n                \n\n                \n                    \n                        getmaxDegreesOfSeparation()\n                    \n                \n                    \n                        \n                                maximum degrees of separatation between relationships \n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setmaxDegreesOfSeparation(value: number)\n                    \n                \n                    \n                        \n                                maximum degrees of separatation between relationships \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxEntities\n                    \n                \n\n                \n                    \n                        getmaxEntities()\n                    \n                \n                    \n                        \n                                maximum number of entities to show \n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setmaxEntities(value: number)\n                    \n                \n                    \n                        \n                                maximum number of entities to show \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        buildOut\n                    \n                \n\n                \n                    \n                        getbuildOut()\n                    \n                \n                    \n                        \n                                how many nodes away from queried entity to show \n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setbuildOut(value: number)\n                    \n                \n                    \n                        \n                                how many nodes away from queried entity to show \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSourcesFiltered\n                    \n                \n\n                \n                    \n                        getdataSourcesFiltered()\n                    \n                \n                    \n                        \n                                hide any entity node when belonging to particular datasources \n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setdataSourcesFiltered(value: [])\n                    \n                \n                    \n                        \n                                hide any entity node when belonging to particular datasources \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        neverFilterQueriedEntityIds\n                    \n                \n\n                \n                    \n                        getneverFilterQueriedEntityIds()\n                    \n                \n                    \n                        \n                                never filter out the entities that were explicity declared in query \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setneverFilterQueriedEntityIds(value: boolean)\n                    \n                \n                    \n                        \n                                never filter out the entities that were explicity declared in query \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        queriedEntitiesColor\n                    \n                \n\n                \n                    \n                        getqueriedEntitiesColor()\n                    \n                \n                    \n                        \n                                color of active or queried for entity or entitities \n\n\n                                \n                                    Returns :     string | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setqueriedEntitiesColor(value)\n                    \n                \n                    \n                        \n                                color of active or queried for entity or entitities \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SzMatchFields.html":{"url":"interfaces/SzMatchFields.html","title":"interface - SzMatchFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SzMatchFields\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/responces/search-results/match-fields.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        emailAddress\n                                \n                                \n                                        primaryNameLast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emailAddress\n                                    \n                                \n                                \n                                    \n                                        emailAddress:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryNameLast\n                                    \n                                \n                                \n                                    \n                                        primaryNameLast:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SzNetworkGraphInputs.html":{"url":"interfaces/SzNetworkGraphInputs.html","title":"interface - SzNetworkGraphInputs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SzNetworkGraphInputs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/network-graph-inputs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        showLinkLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLinkLabels\n                                    \n                                \n                                \n                                    \n                                        showLinkLabels:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SzPdfUtilService.html":{"url":"injectables/SzPdfUtilService.html","title":"injectable - SzPdfUtilService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SzPdfUtilService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-pdf-util.service.ts\n        \n\n            \n                Description\n            \n            \n                Utility service for creating and manipulating PDF files from components and models.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createPdfFromAttributeSearch\n                            \n                            \n                                    Public\n                                createPdfFromHtmlElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityDataService: EntityDataService, titleCasePipe: TitleCasePipe, configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityDataService\n                                                  \n                                                        \n                                                                    EntityDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleCasePipe\n                                                  \n                                                        \n                                                                        TitleCasePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createPdfFromAttributeSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPdfFromAttributeSearch(data: SzAttributeSearchResult[], searchParams?: SzEntitySearchParams, resultsPerPage: number)\n                \n            \n\n\n\n\n            \n                \n                    Create a downloadable PDF from a attribute search result.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            SzAttributeSearchResult[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    searchParams\n                                    \n                                                SzEntitySearchParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    resultsPerPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createPdfFromHtmlElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPdfFromHtmlElement(node: HTMLElement | any, filename: string)\n                \n            \n\n\n\n\n            \n                \n                    Create a downloadable PDF from an HTMLElement node. Uses canvas as an intermediary.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            HTMLElement | any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'result.pdf'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SzPoweredByComponent.html":{"url":"components/SzPoweredByComponent.html","title":"component - SzPoweredByComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SzPoweredByComponent\n\n\n\n        \n            Info\n        \n        \n            Template\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    src/lib/sz-powered-by/sz-powered-by.component.ts\n\n\n    \n        Description\n    \n    \n        A simple \"powered by senzing\" component.\nUsed for configuration debugging since this does\nnot require any Rest API communication.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sz-powered-by\n            \n\n            \n                styleUrls\n                ./sz-powered-by.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sz-powered-by.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        format\n                    \n                \n                \n                    \n                        Default value : 'small'\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n          powered by\n  \n\n  \n    \n      \n        \n        \n        \n        \n          \n          \n        \n        \n        \n        \n      \n    \n  \n\n  \n    \n      \n        \n        \n        \n        \n          \n          \n        \n        \n        \n        \n      \n    \n  \n\n  \n    \n      \n        \n        \n        \n        \n          \n          \n        \n        \n        \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./sz-powered-by.component.scss\n                \n                \n:host {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 14px;\n  font-size: 14px;\n  margin: 2px 4px;\n\n  span {\n    /* align-self: flex-start;*/\n    margin-right: 7px;\n  }\n\n  svg {\n    align-self: flex-end;\n  }\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  powered by                                                                                                                                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'SzConfigurationAboutComponent', 'selector': 'sz-configuration-about'},{'name': 'SzConfigurationComponent', 'selector': 'sz-configuration'},{'name': 'SzEntityDetailComponent', 'selector': 'sz-entity-detail'},{'name': 'SzEntityDetailGraphFilterComponent', 'selector': 'sz-entity-detail-graph-filter'},{'name': 'SzEntityRecordViewerComponent', 'selector': 'sz-entity-record-viewer'},{'name': 'SzPoweredByComponent', 'selector': 'sz-powered-by'},{'name': 'SzPreferencesComponent', 'selector': 'sz-preferences'},{'name': 'SzSearchByIdComponent', 'selector': 'sz-search-by-id'},{'name': 'SzSearchComponent', 'selector': 'sz-search'},{'name': 'SzSearchResultsComponent', 'selector': 'sz-search-results'},{'name': 'SzStandaloneGraphComponent', 'selector': 'sz-standalone-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SzPoweredByComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SzPrefsService.html":{"url":"injectables/SzPrefsService.html","title":"injectable - SzPrefsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SzPrefsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-prefs.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides a composite UI Event BUS / Preferences datastore.\nevery time a pref in the datastore is changed publishes a\n\"prefsChanged\" rxjs BehaviorSubject  that can be subscribed\nand responded to.\nwhen a component UI event happens(ie: user collapses all nodes in an entity detail section)\nthe component updates the corresponding value through this service.\nrepresentational state is published and responded to through this class.\nit is up to the end consumer what to do with this data. it is not stored anywhere\nother than in memory by default. the third example shows how to load from localstorage.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            // --- subscribe to prefs changes\nconstructor(private prefs: SzPrefsService) {\nthis.prefs.prefsChanged.subscribe((prefs: SzSdkPrefsModel) => { console.log('prefs changed!', prefs); })\n}\n                        \n                        \n                            // --- get current state representation\nconstructor(private prefs: SzPrefsService) {\ncurrentState = this.prefs.toJSONObject();\n}\n                        \n                        \n                            // --- get and set from local storage\nconstructor(private prefs: SzPrefsService, Inject(LOCAL_STORAGE) private storage: StorageService) {\n// get from ls\nlet _ls = this.storage.get(\"name_of_local_storage_store\");\nthis.prefs.fromJSONString( _ls );\n// store in ls\nthis.prefs.prefsChanged.subscribe((prefs: SzSdkPrefsModel) => { this.storage.set(\"name_of_local_storage_store\", prefs); })\n}\n                        \n                        \n                            // --- set graph section in ent detail to collapsed by default\nconstructor(private prefs: SzPrefsService) {\n// set graph to collapsed by default\nthis.prefs.entityDetail.graphSectionCollapsed = true;\n}\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entityDetail\n                            \n                            \n                                    Public\n                                    Optional\n                                graph\n                            \n                            \n                                    Public\n                                prefsChanged\n                            \n                            \n                                    Public\n                                    Optional\n                                searchForm\n                            \n                            \n                                    Public\n                                    Optional\n                                searchResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fromJSONObject\n                            \n                            \n                                    Public\n                                fromJSONString\n                            \n                            \n                                    Public\n                                toJSONObject\n                            \n                            \n                                    Public\n                                toJSONString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fromJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSONObject(value: SzSdkPrefsModel)\n                \n            \n\n\n\n\n            \n                \n                    populate values from JSON. bulk import basically. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                SzSdkPrefsModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fromJSONString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSONString(value: string)\n                \n            \n\n\n\n\n            \n                \n                    populate objects and values from JSON. bulk import basically. example shows bulk importing from local storage.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            // --- use SzPrefsService.fromJSONString() to set/get from localstorage\nconstructor(private prefs: SzPrefsService, Inject(LOCAL_STORAGE) private storage: StorageService) {\n// get from ls\nlet _ls = this.storage.get( name_of_local_storage_store );\nthis.prefs.fromJSONString( _ls );\n// store in ls\nthis.prefs.prefsChanged.subscribe((prefs: SzSdkPrefsModel) =&gt; { this.storage.set( name_of_local_storage_store, prefs); })\n}\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJSONObject()\n                \n            \n\n\n\n\n            \n                \n                    get shallow JSON copy of services object state by calling\nsame method on namespace members.\n\n\n                    \n                        Example :\n                        \n                            constructor(private prefs: SzPrefsService) {\ncurrentState = this.prefs.toJSONObject();\n}\n                        \n                    \n                    \n                        Returns :         SzSdkPrefsModel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJSONString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJSONString()\n                \n            \n\n\n\n\n            \n                \n                    get a serialized JSON string from current instance. bulk export. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityDetail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzEntityDetailPrefs\n\n                        \n                    \n                    \n                        \n                            Default value : new SzEntityDetailPrefs()\n                        \n                    \n\n                \n                    \n                        instance of SzEntityDetailPrefs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzGraphPrefs\n\n                        \n                    \n                    \n                        \n                            Default value : new SzGraphPrefs()\n                        \n                    \n\n                \n                    \n                        instance of SzGraphPrefs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prefsChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject( this.toJSONObject() )\n                        \n                    \n\n                \n                    \n                        subscribe for state change representation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            searchForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzSearchFormPrefs\n\n                        \n                    \n                    \n                        \n                            Default value : new SzSearchFormPrefs()\n                        \n                    \n\n                \n                    \n                        instance of SzSearchFormPrefs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzSearchResultsPrefs\n\n                        \n                    \n                    \n                        \n                            Default value : new SzSearchResultsPrefs()\n                        \n                    \n\n                \n                    \n                        instance of SzSearchResultsPrefs \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SzRawData.html":{"url":"interfaces/SzRawData.html","title":"interface - SzRawData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SzRawData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/responces/search-results/raw-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ADDR_CITY\n                                \n                                \n                                            Optional\n                                        ADDR_LINE1\n                                \n                                \n                                            Optional\n                                        ADDR_LINE2\n                                \n                                \n                                            Optional\n                                        ADDR_POSTAL_CODE\n                                \n                                \n                                            Optional\n                                        ADDR_STATE\n                                \n                                \n                                        DATA_SOURCE\n                                \n                                \n                                        DATE_OF_BIRTH\n                                \n                                \n                                            Optional\n                                        DRIVERS_LICENSE_NUMBER\n                                \n                                \n                                            Optional\n                                        DRIVERS_LICENSE_STATE\n                                \n                                \n                                            Optional\n                                        DSRC_ACTION\n                                \n                                \n                                            Optional\n                                        EMAIL_ADDRESS\n                                \n                                \n                                        ENTITY_KEY\n                                \n                                \n                                        ENTITY_NAME\n                                \n                                \n                                        ENTITY_TYPE\n                                \n                                \n                                        ERRULE_CODE\n                                \n                                \n                                            Optional\n                                        GENDER\n                                \n                                \n                                            Optional\n                                        HOME_ADDR_FULL\n                                \n                                \n                                            Optional\n                                        LENS\n                                \n                                \n                                            Optional\n                                        LOAD_ID\n                                \n                                \n                                        MATCH_KEY\n                                \n                                \n                                        MATCH_LEVEL\n                                \n                                \n                                        MATCH_SCORE\n                                \n                                \n                                            Optional\n                                        NAME_FULL\n                                \n                                \n                                            Optional\n                                        PRIMARY_NAME_FIRST\n                                \n                                \n                                            Optional\n                                        PRIMARY_NAME_LAST\n                                \n                                \n                                            Optional\n                                        PRIMARY_NAME_MIDDLE\n                                \n                                \n                                            Optional\n                                        PRIMARY_PHONE_NUMBER\n                                \n                                \n                                        RECORD_ID\n                                \n                                \n                                        REF_SCORE\n                                \n                                \n                                        SOURCE_ID\n                                \n                                \n                                            Optional\n                                        SSN_NUMBER\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ADDR_CITY\n                                    \n                                \n                                \n                                    \n                                        ADDR_CITY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ADDR_LINE1\n                                    \n                                \n                                \n                                    \n                                        ADDR_LINE1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ADDR_LINE2\n                                    \n                                \n                                \n                                    \n                                        ADDR_LINE2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ADDR_POSTAL_CODE\n                                    \n                                \n                                \n                                    \n                                        ADDR_POSTAL_CODE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ADDR_STATE\n                                    \n                                \n                                \n                                    \n                                        ADDR_STATE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATA_SOURCE\n                                    \n                                \n                                \n                                    \n                                        DATA_SOURCE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DATE_OF_BIRTH\n                                    \n                                \n                                \n                                    \n                                        DATE_OF_BIRTH:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DRIVERS_LICENSE_NUMBER\n                                    \n                                \n                                \n                                    \n                                        DRIVERS_LICENSE_NUMBER:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DRIVERS_LICENSE_STATE\n                                    \n                                \n                                \n                                    \n                                        DRIVERS_LICENSE_STATE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DSRC_ACTION\n                                    \n                                \n                                \n                                    \n                                        DSRC_ACTION:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EMAIL_ADDRESS\n                                    \n                                \n                                \n                                    \n                                        EMAIL_ADDRESS:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENTITY_KEY\n                                    \n                                \n                                \n                                    \n                                        ENTITY_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENTITY_NAME\n                                    \n                                \n                                \n                                    \n                                        ENTITY_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENTITY_TYPE\n                                    \n                                \n                                \n                                    \n                                        ENTITY_TYPE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ERRULE_CODE\n                                    \n                                \n                                \n                                    \n                                        ERRULE_CODE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GENDER\n                                    \n                                \n                                \n                                    \n                                        GENDER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HOME_ADDR_FULL\n                                    \n                                \n                                \n                                    \n                                        HOME_ADDR_FULL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LENS\n                                    \n                                \n                                \n                                    \n                                        LENS:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LOAD_ID\n                                    \n                                \n                                \n                                    \n                                        LOAD_ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MATCH_KEY\n                                    \n                                \n                                \n                                    \n                                        MATCH_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MATCH_LEVEL\n                                    \n                                \n                                \n                                    \n                                        MATCH_LEVEL:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MATCH_SCORE\n                                    \n                                \n                                \n                                    \n                                        MATCH_SCORE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NAME_FULL\n                                    \n                                \n                                \n                                    \n                                        NAME_FULL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PRIMARY_NAME_FIRST\n                                    \n                                \n                                \n                                    \n                                        PRIMARY_NAME_FIRST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PRIMARY_NAME_LAST\n                                    \n                                \n                                \n                                    \n                                        PRIMARY_NAME_LAST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PRIMARY_NAME_MIDDLE\n                                    \n                                \n                                \n                                    \n                                        PRIMARY_NAME_MIDDLE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PRIMARY_PHONE_NUMBER\n                                    \n                                \n                                \n                                    \n                                        PRIMARY_PHONE_NUMBER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RECORD_ID\n                                    \n                                \n                                \n                                    \n                                        RECORD_ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REF_SCORE\n                                    \n                                \n                                \n                                    \n                                        REF_SCORE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SOURCE_ID\n                                    \n                                \n                                \n                                    \n                                        SOURCE_ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SSN_NUMBER\n                                    \n                                \n                                \n                                    \n                                        SSN_NUMBER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SzRawDataMatches.html":{"url":"interfaces/SzRawDataMatches.html","title":"interface - SzRawDataMatches","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SzRawDataMatches\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/responces/search-results/raw-data-matches.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        EMAIL_ADDRESS\n                                \n                                \n                                        PRIMARY_NAME_LAST\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EMAIL_ADDRESS\n                                    \n                                \n                                \n                                    \n                                        EMAIL_ADDRESS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PRIMARY_NAME_LAST\n                                    \n                                \n                                \n                                    \n                                        PRIMARY_NAME_LAST:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzSdkPrefsBase.html":{"url":"classes/SzSdkPrefsBase.html","title":"class - SzSdkPrefsBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzSdkPrefsBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-prefs.service.ts\n        \n\n            \n                Description\n            \n            \n                preferences bus base class. provides common methods for\npublishing and responding to value changes. bulk-set and get.\nused by SzSearchFormPrefs, SzSearchResultsPrefs, SzEntityDetailPrefs, SzGraphPrefs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bulkSet\n                            \n                            \n                                jsonKeys\n                            \n                            \n                                    Public\n                                prefsChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fromJSONObject\n                            \n                            \n                                    Public\n                                toJSONObject\n                            \n                            \n                                    Public\n                                toJSONString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bulkSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n\n                \n                    \n                        during a bulk property set, set this to true to\nnot publish change events on every single value change\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        the keys of member setters or variables in the object\nto output in json, or to take as json input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prefsChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this.toJSONObject())\n                        \n                    \n\n                \n                    \n                        behavior subject that can be subscribed to for change\nnotifications.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fromJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSONObject(value: string)\n                \n            \n\n\n\n\n            \n                \n                    populate values by calling setters with the same names as json keys \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJSONObject()\n                \n            \n\n\n\n\n            \n                \n                    get shallow JSON copy of object state. properties are filtered by members of jsonKeys \n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJSONString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJSONString()\n                \n            \n\n\n\n\n            \n                \n                    get object state representation as a string \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SzSdkPrefsModel.html":{"url":"interfaces/SzSdkPrefsModel.html","title":"interface - SzSdkPrefsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SzSdkPrefsModel\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-prefs.service.ts\n        \n\n            \n                Description\n            \n            \n                top level prefs model used for publishing preference\nevents.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        entityDetail\n                                \n                                \n                                            Optional\n                                        graph\n                                \n                                \n                                            Optional\n                                        searchForm\n                                \n                                \n                                            Optional\n                                        searchResults\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entityDetail\n                                    \n                                \n                                \n                                    \n                                        entityDetail:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                    \n                                \n                                \n                                    \n                                        graph:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchForm\n                                    \n                                \n                                \n                                    \n                                        searchForm:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchResults\n                                    \n                                \n                                \n                                    \n                                        searchResults:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SzSearchEvent.html":{"url":"interfaces/SzSearchEvent.html","title":"interface - SzSearchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SzSearchEvent\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-search.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        params\n                                \n                                \n                                        results\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:         SzEntitySearchParams\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SzEntitySearchParams\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                    \n                                \n                                \n                                    \n                                        results:     SzAttributeSearchResult[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SzAttributeSearchResult[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzSearchFormPrefs.html":{"url":"classes/SzSearchFormPrefs.html","title":"class - SzSearchFormPrefs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzSearchFormPrefs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-prefs.service.ts\n        \n\n            \n                Description\n            \n            \n                search form related preferences bus class.\nused by SzPrefsService to store it's\nsearch form related prefs.\nShould really be used from SzPrefsService context, not on its own.\n\n            \n\n            \n                Extends\n            \n            \n                        SzSdkPrefsBase\n            \n\n\n            \n                Example\n            \n            \n                        \n                            this.prefs.searchForm.allowedTypeAttributes = ['SSN_NUMBER','DRIVERS_LICENSE_NUMBER'];\n                        \n                        \n                            this.prefs.searchResults.prefsChanged.subscribe( (prefs) => { console.log('search form pref change happened.', prefs); })\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jsonKeys\n                            \n                            \n                                    Public\n                                bulkSet\n                            \n                            \n                                jsonKeys\n                            \n                            \n                                    Public\n                                prefsChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fromJSONObject\n                            \n                            \n                                    Public\n                                fromJSONObject\n                            \n                            \n                                    Public\n                                toJSONObject\n                            \n                            \n                                    Public\n                                toJSONString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rememberLastSearches\n                                \n                                \n                                    disableSearchHistory\n                                \n                                \n                                    savedSearches\n                                \n                                \n                                    searchHistory\n                                \n                                \n                                    allowedTypeAttributes\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'rememberLastSearches',\n    'disableSearchHistory',\n    'allowedTypeAttributes',\n    'savedSearches',\n    'searchHistory'\n  ]\n                        \n                    \n\n                \n                    \n                        the keys of member setters or variables in the object\nto output in json, or to take as json input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bulkSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n\n                \n                    \n                        during a bulk property set, set this to true to\nnot publish change events on every single value change\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        the keys of member setters or variables in the object\nto output in json, or to take as json input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prefsChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this.toJSONObject())\n                        \n                    \n\n                \n                    \n                        behavior subject that can be subscribed to for change\nnotifications.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fromJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSONObject(value: string)\n                \n            \n\n\n\n\n            \n                \n                    the search form prefs contain a folio collection that automagically update\nwhen a user executes a search. Because of this additional functionality\nthe usual fromJSONObject needs to perform some special logic to initialize\nthe prefs from JSON like create class instances etc.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fromJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSONObject(value: string)\n                \n            \n\n\n\n\n            \n                \n                    populate values by calling setters with the same names as json keys \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJSONObject()\n                \n            \n\n\n\n\n            \n                \n                    get shallow JSON copy of object state. properties are filtered by members of jsonKeys \n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJSONString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJSONString()\n                \n            \n\n\n\n\n            \n                \n                    get object state representation as a string \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rememberLastSearches\n                    \n                \n\n                \n                    \n                        getrememberLastSearches()\n                    \n                \n                    \n                        \n                                remember last X searches in autofill. \n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setrememberLastSearches(value: number)\n                    \n                \n                    \n                        \n                                remember last X searches in autofill. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSearchHistory\n                    \n                \n\n                \n                    \n                        getdisableSearchHistory()\n                    \n                \n                    \n                        \n                                whether or not to disable search form history drop downs. \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setdisableSearchHistory(value: boolean)\n                    \n                \n                    \n                        \n                                whether or not to disable search form history drop downs. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        savedSearches\n                    \n                \n\n                \n                    \n                        getsavedSearches()\n                    \n                \n                    \n                        \n                                get list of last searches performed. \n\n\n                                \n                                    Returns :         SzSearchParamsFolio[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setsavedSearches(value: [])\n                    \n                \n                    \n                        \n                                update list of last searches performed. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        searchHistory\n                    \n                \n\n                \n                    \n                        getsearchHistory()\n                    \n                \n                    \n                        \n                                get list of last searches performed. \n\n\n                                \n                                    Returns :         SzSearchHistoryFolio\n\n                                \n                        \n                    \n\n                \n                    \n                        setsearchHistory(value)\n                    \n                \n                    \n                        \n                                update list of last searches performed. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        allowedTypeAttributes\n                    \n                \n\n                \n                    \n                        getallowedTypeAttributes()\n                    \n                \n                    \n                        \n                                the allowed identifier types to show in the identifier pulldown \n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setallowedTypeAttributes(value: [])\n                    \n                \n                    \n                        \n                                the allowed identifier types to show in the identifier pulldown \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzSearchHistoryFolio.html":{"url":"classes/SzSearchHistoryFolio.html","title":"class - SzSearchHistoryFolio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzSearchHistoryFolio\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/folio.ts\n        \n\n            \n                Description\n            \n            \n                A specialized SzFolio class used for storing the user's search history.\n\n            \n\n            \n                Extends\n            \n            \n                        SzSearchParamsFolio\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                    Public\n                                maxItems\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                updateMode\n                            \n                            \n                                items\n                            \n                            \n                                name\n                            \n                            \n                                    Abstract\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Abstract\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                exists\n                            \n                            \n                                    Static\n                                FolioItemsFromJSON\n                            \n                            \n                                    Public\n                                fromJSONObject\n                            \n                            \n                                indexOf\n                            \n                            \n                                    Public\n                                toJSONObject\n                            \n                            \n                                    Public\n                                trimItemsTo\n                            \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    history\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items?: SzSearchHistoryFolioItem[])\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    SzSearchHistoryFolioItem[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzSearchHistoryFolioItem[]\n\n                        \n                    \n\n                \n                    \n                        the collection of search parameters used in the last X searches\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maxItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n                \n                    \n                        The number of searches back to store in the folio \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Search History'\n                        \n                    \n\n                \n                    \n                        hardcoded to 'Search History' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n                \n                    \n                        update mode. when a user searches for something that is already\nin the search history should the item be moved to the top of the\nstack, updated in place, or ignored. possible values are -1(ignore), 0(replace), 1(update position)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzSearchParamsFolioItem[]\n\n                        \n                    \n\n                \n                    \n                        the search parameter sets \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        the name of the search set \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzFolioItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        the collection of SzFolioItem's \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        the name of the folio \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzFolioItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        the collection of SzFolioItem's \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        the name of the folio \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(item: SzSearchHistoryFolioItem, overwrite: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Add a new search parameter set to the stack\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SzSearchHistoryFolioItem\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    overwrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \nexists(item: SzSearchHistoryFolioItem)\n                \n            \n\n\n\n\n            \n                \n                    whether or not the folio item passed in already exists in collection \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SzSearchHistoryFolioItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            FolioItemsFromJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    FolioItemsFromJSON(itemsJson)\n                \n            \n\n\n\n\n            \n                \n                    returns an array of \"SzSearchHistoryFolio\" that is created from the\n'items' model that 'toJSONObject' returns.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    itemsJson\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SzSearchHistoryFolioItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fromJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSONObject(data: literal type)\n                \n            \n\n\n\n\n            \n                \n                    set the folios properties via a json model. This is the same model that\nthis.toJSONObject returns \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            indexOf\n                        \n                        \n                    \n                \n            \n            \n                \nindexOf(item: SzSearchHistoryFolioItem)\n                \n            \n\n\n\n\n            \n                \n                    returns the index position of an existing folio item \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SzSearchHistoryFolioItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJSONObject()\n                \n            \n\n\n\n\n            \n                \n                    get a json representation model of this class and its items. \n\n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trimItemsTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trimItemsTo(len: number, items?: SzSearchHistoryFolioItem[])\n                \n            \n\n\n\n\n            \n                \n                    used internally to keep stack at appropriate length \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    len\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    items\n                                    \n                                            SzSearchHistoryFolioItem[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SzSearchHistoryFolioItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(item: SzFolioItem)\n                \n            \n\n\n\n\n            \n                \n                    add a  SzFolioItem to the \"items\" collection \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SzFolioItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(item)\n                \n            \n\n\n\n\n            \n                \n                    remove a SzFolioItem from \"items\" if it exists \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(item: SzFolioItem)\n                \n            \n\n\n\n\n            \n                \n                    add a  SzFolioItem to the \"items\" collection \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SzFolioItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(item)\n                \n            \n\n\n\n\n            \n                \n                    remove a SzFolioItem from \"items\" if it exists \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        history\n                    \n                \n\n                \n                    \n                        gethistory()\n                    \n                \n                    \n                        \n                                gets the history folio items in decending chronological order \n\n\n                                \n                                    Returns :     SzSearchHistoryFolioItem[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzSearchHistoryFolioItem.html":{"url":"classes/SzSearchHistoryFolioItem.html","title":"class - SzSearchHistoryFolioItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzSearchHistoryFolioItem\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/folio.ts\n        \n\n            \n                Description\n            \n            \n                A folio item specific to being used in the search history folio. It\nextends the SzSearchParamsFolioItem class.\n\n            \n\n            \n                Extends\n            \n            \n                        SzSearchParamsFolioItem\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                            \n                                name\n                            \n                            \n                                    Abstract\n                                _data\n                            \n                            \n                                    Abstract\n                                name\n                            \n                            \n                                    Abstract\n                                _data\n                            \n                            \n                                    Abstract\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: SzEntitySearchParams)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        SzEntitySearchParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzEntitySearchParams\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        if set the name should be used when displaying the item to the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        the data representing this folio item \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        the name of the folio item \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        the data representing this folio item \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        the name of the folio item \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzSearchParamsFolio.html":{"url":"classes/SzSearchParamsFolio.html","title":"class - SzSearchParamsFolio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzSearchParamsFolio\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/folio.ts\n        \n\n            \n                Description\n            \n            \n                A folio representing a collection of searches\n\n            \n\n            \n                Extends\n            \n            \n                        SzFolio\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                name\n                            \n                            \n                                    Abstract\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items?: SzSearchParamsFolioItem[])\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    SzSearchParamsFolioItem[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzSearchParamsFolioItem[]\n\n                        \n                    \n\n                \n                    \n                        the search parameter sets \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        the name of the search set \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzFolioItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        the collection of SzFolioItem's \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        the name of the folio \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(item: SzFolioItem)\n                \n            \n\n\n\n\n            \n                \n                    add a  SzFolioItem to the \"items\" collection \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                SzFolioItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(item)\n                \n            \n\n\n\n\n            \n                \n                    remove a SzFolioItem from \"items\" if it exists \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzSearchParamsFolioItem.html":{"url":"classes/SzSearchParamsFolioItem.html","title":"class - SzSearchParamsFolioItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzSearchParamsFolioItem\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/folio.ts\n        \n\n            \n                Description\n            \n            \n                a folio item representing a set of search parameters to save a set of\nsearch parameters in a folio.\n\n            \n\n            \n                Extends\n            \n            \n                        SzFolioItem\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                            \n                                name\n                            \n                            \n                                    Abstract\n                                _data\n                            \n                            \n                                    Abstract\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: SzEntitySearchParams)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        SzEntitySearchParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzEntitySearchParams\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        if set the name should be used when displaying the item to the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        the data representing this folio item \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        the name of the folio item \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n\n                \n                    \n                        setdata(value)\n                    \n                \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SzSearchResultEntityData.html":{"url":"interfaces/SzSearchResultEntityData.html","title":"interface - SzSearchResultEntityData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SzSearchResultEntityData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/responces/search-results/sz-search-result-entity-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        addressDataMatches\n                                \n                                \n                                            Optional\n                                        attributeDataMatches\n                                \n                                \n                                            Optional\n                                        bestName\n                                \n                                \n                                            Optional\n                                        characteristicDataMatches\n                                \n                                \n                                        disclosedRelationships\n                                \n                                \n                                        discoveredRelationships\n                                \n                                \n                                            Optional\n                                        entityDataMatches\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        identifierDataMatches\n                                \n                                \n                                            Optional\n                                        matchScore\n                                \n                                \n                                            Optional\n                                        nameDataMatches\n                                \n                                \n                                            Optional\n                                        otherDataMatches\n                                \n                                \n                                            Optional\n                                        phoneDataMatches\n                                \n                                \n                                        possibleMatches\n                                \n                                \n                                            Optional\n                                        rawDataMatches\n                                \n                                \n                                        relatedEntities\n                                \n                                \n                                            Optional\n                                        relationshipDataMatches\n                                \n                                \n                                        resolvedEntity\n                                \n                                \n                                            Optional\n                                        topAddresses\n                                \n                                \n                                            Optional\n                                        topAttributes\n                                \n                                \n                                            Optional\n                                        topIdentifiers\n                                \n                                \n                                            Optional\n                                        topNames\n                                \n                                \n                                            Optional\n                                        topPhoneNumbers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addressDataMatches\n                                    \n                                \n                                \n                                    \n                                        addressDataMatches:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attributeDataMatches\n                                    \n                                \n                                \n                                    \n                                        attributeDataMatches:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bestName\n                                    \n                                \n                                \n                                    \n                                        bestName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        characteristicDataMatches\n                                    \n                                \n                                \n                                    \n                                        characteristicDataMatches:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disclosedRelationships\n                                    \n                                \n                                \n                                    \n                                        disclosedRelationships:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoveredRelationships\n                                    \n                                \n                                \n                                    \n                                        discoveredRelationships:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDataMatches\n                                    \n                                \n                                \n                                    \n                                        entityDataMatches:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierDataMatches\n                                    \n                                \n                                \n                                    \n                                        identifierDataMatches:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchScore\n                                    \n                                \n                                \n                                    \n                                        matchScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nameDataMatches\n                                    \n                                \n                                \n                                    \n                                        nameDataMatches:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherDataMatches\n                                    \n                                \n                                \n                                    \n                                        otherDataMatches:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneDataMatches\n                                    \n                                \n                                \n                                    \n                                        phoneDataMatches:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        possibleMatches\n                                    \n                                \n                                \n                                    \n                                        possibleMatches:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rawDataMatches\n                                    \n                                \n                                \n                                    \n                                        rawDataMatches:         SzRawDataMatches\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SzRawDataMatches\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relatedEntities\n                                    \n                                \n                                \n                                    \n                                        relatedEntities:     SzRelatedEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SzRelatedEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relationshipDataMatches\n                                    \n                                \n                                \n                                    \n                                        relationshipDataMatches:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolvedEntity\n                                    \n                                \n                                \n                                    \n                                        resolvedEntity:     SzResolvedEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SzResolvedEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topAddresses\n                                    \n                                \n                                \n                                    \n                                        topAddresses:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topAttributes\n                                    \n                                \n                                \n                                    \n                                        topAttributes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topIdentifiers\n                                    \n                                \n                                \n                                    \n                                        topIdentifiers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topNames\n                                    \n                                \n                                \n                                    \n                                        topNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topPhoneNumbers\n                                    \n                                \n                                \n                                    \n                                        topPhoneNumbers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SzSearchResultsComponent.html":{"url":"components/SzSearchResultsComponent.html","title":"component - SzSearchResultsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SzSearchResultsComponent\n\n\n\n        \n            Info\n        \n        \n            Template\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    src/lib/search/sz-search-results/sz-search-results.component.ts\n\n\n    \n        Description\n    \n    \n        Provides a graphical search results component. Data can be provided a number of ways.\nThe simplest of which is to bind the results input setter to the output of the\nSzSearchComponent resultsChange event.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n\n                \n                \n                    \n\n\n\nvar szSearchComponent = document.getElementById('sz-search');\nvar szSearchResultsComponent = document.getElementById('sz-search-results');\nszSearchComponent.addEventListener('resultsChange', (evt) => {\nconsole.log('search results: ', evt);\nszSearchResultsComponent.results = evt.detail;\n});\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sz-search-results\n            \n\n            \n                styleUrls\n                ./sz-search-results.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sz-search-results.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _searchResults\n                            \n                            \n                                    Public\n                                _searchValue\n                            \n                            \n                                    Public\n                                attributeDisplay\n                            \n                            \n                                    Public\n                                searchResultsJSON\n                            \n                            \n                                    Public\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onResultClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                parameters\n                            \n                            \n                                results\n                            \n                            \n                                showDataSources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resultClick\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchResults\n                                \n                                \n                                    matches\n                                \n                                \n                                    possibleMatches\n                                \n                                \n                                    discoveredRelationships\n                                \n                                \n                                    nameOnlyMatches\n                                \n                                \n                                    searchValue\n                                \n                                \n                                    searchResultsTotal\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(titleCasePipe: TitleCasePipe, prefs: SzPrefsService, cd: ChangeDetectorRef)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titleCasePipe\n                                                  \n                                                        \n                                                                        TitleCasePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prefs\n                                                  \n                                                        \n                                                                        SzPrefsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        parameters\n                    \n                \n                \n                    \n                        The current search parameters being used.\nused for displaying the parameters being searched on above result list.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        results\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        The results of a search response to display in the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showDataSources\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Shows or hides the datasource lists in the result items header.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        resultClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Occurs when a search result item is clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n\n\n            \n                \n                    unsubscribe when component is destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onResultClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onResultClick(evt: any, resData: SzAttributeSearchResult)\n                \n            \n\n\n\n\n            \n                \n                    DOM click handler which then triggers the \"resultClick\" event emitter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resData\n                                    \n                                            SzAttributeSearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SzAttributeSearchResult[]\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _searchValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SzEntitySearchParams\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            attributeDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchResultsJSON\n                            \n                        \n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n                \n                    \n                        subscription to notify subscribers to unbind \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchResults\n                    \n                \n\n                \n                    \n                        getsearchResults()\n                    \n                \n                    \n                        \n                                The search results being displayed in the component.\n\n\n                                \n                                \n                                \n                                    Returns :     SzAttributeSearchResult[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setsearchResults(value: [])\n                    \n                \n                    \n                        \n                                The results of a search response to display in the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        matches\n                    \n                \n\n                \n                    \n                        getmatches()\n                    \n                \n                    \n                        \n                                A list of the search results that are matches.\n\n\n                                \n                                \n                                \n                                    Returns :     SzAttributeSearchResult[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        possibleMatches\n                    \n                \n\n                \n                    \n                        getpossibleMatches()\n                    \n                \n                    \n                        \n                                A list of the search results that are possible matches.\n\n\n                                \n                                \n                                \n                                    Returns :     SzAttributeSearchResult[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        discoveredRelationships\n                    \n                \n\n                \n                    \n                        getdiscoveredRelationships()\n                    \n                \n                    \n                        \n                                A list of the search results that are related.\n\n\n                                \n                                \n                                \n                                    Returns :     SzAttributeSearchResult[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nameOnlyMatches\n                    \n                \n\n                \n                    \n                        getnameOnlyMatches()\n                    \n                \n                    \n                        \n                                A list of the search results that are name only matches.\n\n\n                                \n                                \n                                \n                                    Returns :     SzAttributeSearchResult[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        searchValue\n                    \n                \n\n                \n                    \n                        getsearchValue()\n                    \n                \n                    \n                        \n                                The current search parameters being used.\n\n\n                                \n                                \n                                \n                                    Returns :         SzEntitySearchParams\n\n                                \n                        \n                    \n\n                \n                    \n                        setsearchValue(value)\n                    \n                \n                    \n                        \n                                The current search parameters being used.\nused for displaying the parameters being searched on above result list.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        searchResultsTotal\n                    \n                \n\n                \n                    \n                        getsearchResultsTotal()\n                    \n                \n                    \n                        \n                                Total number of search results being displayed.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n\n    \n        \n    \n\n    \n        \n          {{searchResultsTotal}} Results found for\n          \n            {{attribute?.attr}}\n              :\n              {{attribute?.value}}&nbsp;\n            \n          \n        \n    \n\n     0\">Matches\n    \n    \n\n     0\">Possible Match\n    \n    \n\n     0\">Possibly Related\n    \n    \n\n     0\">Name Only Matches\n    \n\n\n    \n\n    \n                \n                    ./sz-search-results.component.scss\n                \n                @import \"../../scss/variables\";\n\n:host {\n  display: block;\n  padding: var(--sz-search-results-padding);\n  color: var(--sz-search-results-color);\n  font-family: var(--sz-search-results-font-family);\n\n  textarea {\n    width: 1000px;\n    height: 400px;\n  }\n  .label-title {\n    text-transform: uppercase;\n  }\n\n  .sz-search-results-total-summary {\n\n    color: var(--sz-search-results-header-color);\n    display: var(--sz-search-results-header-display);\n    justify-content: space-between;\n    align-items: center;\n    padding: var(--sz-search-results-header-padding);\n    margin: var(--sz-search-results-header-margin);\n\n    .sz-search-results-total {\n      font-size: var(--sz-search-results-header-font-size);\n    }\n    .action-buttons__wrapper {\n      display: flex;\n    }\n  }\n\n  .sz-search-results-parameter-value {\n    color: var( --sz-search-results-header-parameter-value-color);\n    font-weight: 600;\n    margin: 0 .5em 0 .5em;\n  }\n\n  .search-result__section-header {\n    display: flex;\n    width: var(--sz-search-results-header-width);\n    font-size: var(--sz-search-results-header-font-size);\n    font-weight: 600;\n    height: 40px;\n    align-items: center;\n    color: var(--sz-search-results-section-header-color);\n    padding: var(--sz-search-results-section-header-padding);\n\n    &.matches {\n      background-color: var(--sz-search-results-matches-header-background-color);\n    }\n    &.possible-match {\n      background-color: var(--sz-search-results-possible-match-header-background-color);\n    }\n    &.possibly-related {\n      background-color: var(--sz-search-results-possibly-related-header-background-color);\n    }\n    &.name-only-matches {\n      background-color: var(--sz-search-results-name-only-matches-header-background-color);\n    }\n  }\n\n  .main-card__label {\n    min-height: 150px;\n    width: 200px;\n    min-width: 200px;\n    text-transform: uppercase;\n    font-weight: 700;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.5em;\n    color: $sz-white;\n    &.search {\n      background-color: $sz-green;\n    }\n    &.insights {\n      background-color: $sz-orange;\n    }\n    &.suggestions {\n      background-color: $sz-brown;\n    }\n    &.data {\n      background-color: $sz-dark2;\n    }\n    &.health {\n      background-color: $sz-dark-blue;\n    }\n  }\n\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{searchResultsTotal}} Results found for                      {{attribute?.attr}}              :              {{attribute?.value}}                                        0\">Matches             0\">Possible Match             0\">Possibly Related             0\">Name Only Matches    '\n    var COMPONENTS = [{'name': 'SzConfigurationAboutComponent', 'selector': 'sz-configuration-about'},{'name': 'SzConfigurationComponent', 'selector': 'sz-configuration'},{'name': 'SzEntityDetailComponent', 'selector': 'sz-entity-detail'},{'name': 'SzEntityDetailGraphFilterComponent', 'selector': 'sz-entity-detail-graph-filter'},{'name': 'SzEntityRecordViewerComponent', 'selector': 'sz-entity-record-viewer'},{'name': 'SzPoweredByComponent', 'selector': 'sz-powered-by'},{'name': 'SzPreferencesComponent', 'selector': 'sz-preferences'},{'name': 'SzSearchByIdComponent', 'selector': 'sz-search-by-id'},{'name': 'SzSearchComponent', 'selector': 'sz-search'},{'name': 'SzSearchResultsComponent', 'selector': 'sz-search-results'},{'name': 'SzStandaloneGraphComponent', 'selector': 'sz-standalone-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SzSearchResultsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzSearchResultsPrefs.html":{"url":"classes/SzSearchResultsPrefs.html","title":"class - SzSearchResultsPrefs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzSearchResultsPrefs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-prefs.service.ts\n        \n\n            \n                Description\n            \n            \n                search results related preferences bus class.\nused by SzPrefsService to store it's\nsearch results related prefs.\nShould really be used from SzPrefsService context, not on its own.\n\n            \n\n            \n                Extends\n            \n            \n                        SzSdkPrefsBase\n            \n\n\n            \n                Example\n            \n            \n                        \n                            this.prefs.searchResults.showOtherData = true;\nthis.prefs.searchResults.truncateOtherDataAt = 3;\nthis.prefs.searchResults.truncateIdentifierDataAt =  2;\n                        \n                        \n                            this.prefs.searchResults.prefsChanged.subscribe( (prefs) => { console.log('search results pref change happened.', prefs); })\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jsonKeys\n                            \n                            \n                                    Public\n                                bulkSet\n                            \n                            \n                                jsonKeys\n                            \n                            \n                                    Public\n                                prefsChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fromJSONObject\n                            \n                            \n                                    Public\n                                toJSONObject\n                            \n                            \n                                    Public\n                                toJSONString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    openInNewTab\n                                \n                                \n                                    showOtherData\n                                \n                                \n                                    showIdentifierData\n                                \n                                \n                                    showCharacteristicData\n                                \n                                \n                                    showRecordIds\n                                \n                                \n                                    truncateRecordsAt\n                                \n                                \n                                    truncateOtherDataAt\n                                \n                                \n                                    truncateCharacteristicDataAt\n                                \n                                \n                                    showEmbeddedGraph\n                                \n                                \n                                    linkToEmbeddedGraph\n                                \n                                \n                                    truncateIdentifierDataAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'openInNewTab',\n    'showOtherData',\n    'showIdentifierData',\n    'showCharacteristicData',\n    'truncateRecordsAt',\n    'truncateOtherDataAt',\n    'truncateCharacteristicDataAt',\n    'showEmbeddedGraph',\n    'showRecordIds',\n    'linkToEmbeddedGraph',\n    'truncateIdentifierDataAt'\n  ]\n                        \n                    \n\n                \n                    \n                        the keys of member setters or variables in the object\nto output in json, or to take as json input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bulkSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n\n                \n                    \n                        during a bulk property set, set this to true to\nnot publish change events on every single value change\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        the keys of member setters or variables in the object\nto output in json, or to take as json input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prefsChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this.toJSONObject())\n                        \n                    \n\n                \n                    \n                        behavior subject that can be subscribed to for change\nnotifications.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fromJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSONObject(value: string)\n                \n            \n\n\n\n\n            \n                \n                    populate values by calling setters with the same names as json keys \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJSONObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJSONObject()\n                \n            \n\n\n\n\n            \n                \n                    get shallow JSON copy of object state. properties are filtered by members of jsonKeys \n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJSONString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJSONString()\n                \n            \n\n\n\n\n            \n                \n                    get object state representation as a string \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        openInNewTab\n                    \n                \n\n                \n                    \n                        getopenInNewTab()\n                    \n                \n                    \n                        \n                                open entity detail in new tab when link clicked \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setopenInNewTab(value: boolean)\n                    \n                \n                    \n                        \n                                open entity detail in new tab when link clicked \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        showOtherData\n                    \n                \n\n                \n                    \n                        getshowOtherData()\n                    \n                \n                    \n                        \n                                show \"other data\" in search results \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setshowOtherData(value: boolean)\n                    \n                \n                    \n                        \n                                show \"other data\" in search results \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        showIdentifierData\n                    \n                \n\n                \n                    \n                        getshowIdentifierData()\n                    \n                \n                    \n                        \n                                show \"other data\" in search results \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setshowIdentifierData(value: boolean)\n                    \n                \n                    \n                        \n                                show \"other data\" in search results \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        showCharacteristicData\n                    \n                \n\n                \n                    \n                        getshowCharacteristicData()\n                    \n                \n                    \n                        \n                                show \"attribute data\" in search results. ie DOB, favorite cat \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setshowCharacteristicData(value: boolean)\n                    \n                \n                    \n                        \n                                show \"attribute data\" in search results. ie DOB, favorite cat \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        showRecordIds\n                    \n                \n\n                \n                    \n                        getshowRecordIds()\n                    \n                \n                    \n                        \n                                show \"record ids\" in search results. currently not implemented in view \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setshowRecordIds(value: boolean)\n                    \n                \n                    \n                        \n                                show \"record ids\" in search results. currently not implemented in view \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        truncateRecordsAt\n                    \n                \n\n                \n                    \n                        gettruncateRecordsAt()\n                    \n                \n                    \n                        \n                                truncate \"records\" shown before ellipsis in search results. currently not implemented in view \n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        settruncateRecordsAt(value: number)\n                    \n                \n                    \n                        \n                                truncate \"records\" shown before ellipsis in search results. currently not implemented in view \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        truncateOtherDataAt\n                    \n                \n\n                \n                    \n                        gettruncateOtherDataAt()\n                    \n                \n                    \n                        \n                                truncate \"other data\" shown before ellipsis in search results. \n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        settruncateOtherDataAt(value: number)\n                    \n                \n                    \n                        \n                                truncate \"other data\" shown before ellipsis in search results. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        truncateCharacteristicDataAt\n                    \n                \n\n                \n                    \n                        gettruncateCharacteristicDataAt()\n                    \n                \n                    \n                        \n                                truncate \"attribute data\" shown before ellipsis in search results. \n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        settruncateCharacteristicDataAt(value: number)\n                    \n                \n                    \n                        \n                                truncate \"attribute data\" shown before ellipsis in search results. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        showEmbeddedGraph\n                    \n                \n\n                \n                    \n                        getshowEmbeddedGraph()\n                    \n                \n                    \n                        \n                                show embedded graph component in search results. currently not implemented \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setshowEmbeddedGraph(value: boolean)\n                    \n                \n                    \n                        \n                                show embedded graph component in search results. currently not implemented \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        linkToEmbeddedGraph\n                    \n                \n\n                \n                    \n                        getlinkToEmbeddedGraph()\n                    \n                \n                    \n                        \n                                clicking on search result highlights in embedded graph. currently not implemented \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setlinkToEmbeddedGraph(value: boolean)\n                    \n                \n                    \n                        \n                                clicking on search result highlights in embedded graph. currently not implemented \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        truncateIdentifierDataAt\n                    \n                \n\n                \n                    \n                        gettruncateIdentifierDataAt()\n                    \n                \n                    \n                        \n                                truncate \"identifier data\" shown before ellipsis in search results. \n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        settruncateIdentifierDataAt(value: number)\n                    \n                \n                    \n                        \n                                truncate \"identifier data\" shown before ellipsis in search results. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SzSearchService.html":{"url":"injectables/SzSearchService.html","title":"injectable - SzSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SzSearchService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-search.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                parametersChanged\n                            \n                            \n                                    Public\n                                resultsChanged\n                            \n                            \n                                    Public\n                                searchPerformed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearCurrentSearchState\n                            \n                            \n                                    Public\n                                getAttributeTypes\n                            \n                            \n                                    Public\n                                getEntityById\n                            \n                            \n                                    Public\n                                getEntityByRecordId\n                            \n                            \n                                    Public\n                                getMappingAttributes\n                            \n                            \n                                    Public\n                                getSearchParams\n                            \n                            \n                                    Public\n                                getSearchResults\n                            \n                            \n                                    Public\n                                searchByAttributes\n                            \n                            \n                                    Public\n                                setSearchParam\n                            \n                            \n                                    Public\n                                setSearchResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityDataService: EntityDataService, configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityDataService\n                                                  \n                                                        \n                                                                    EntityDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearCurrentSearchState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearCurrentSearchState()\n                \n            \n\n\n\n\n            \n                \n                    clears out current search parameters and search results.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAttributeTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAttributeTypes()\n                \n            \n\n\n\n\n            \n                \n                    get list of characteristics as attribute types\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEntityById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityById(entityId: number, withRelated)\n                \n            \n\n\n\n\n            \n                \n                    get an SzEntityData model by providing an entityId.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withRelated\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEntityByRecordId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityByRecordId(dsName: string, recordId: number, withRelated)\n                \n            \n\n\n\n\n            \n                \n                    get an SzEntityData model by providing an datasource and record id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    dsName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    recordId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withRelated\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMappingAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappingAttributes()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSearchParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSearchParams()\n                \n            \n\n\n\n\n            \n                \n                    get the current search params.\n\n\n                    \n                        Returns :         SzEntitySearchParams\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSearchResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSearchResults()\n                \n            \n\n\n\n\n            \n                \n                    get the current search results from the last search.\n\n\n                    \n                        Returns :     [] | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            searchByAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchByAttributes(searchParms: SzEntitySearchParams)\n                \n            \n\n\n\n\n            \n                \n                    perform a search request againt the data source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchParms\n                                    \n                                                SzEntitySearchParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSearchParam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSearchParam(paramName: any, value: any)\n                \n            \n\n\n\n\n            \n                \n                    set an individual search parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paramName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSearchResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSearchResults(results: SzAttributeSearchResult[] | null)\n                \n            \n\n\n\n\n            \n                \n                    set the current search results from the last search.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    results\n                                    \n                                            SzAttributeSearchResult[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parametersChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchPerformed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n\n\n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SzServerError.html":{"url":"classes/SzServerError.html","title":"class - SzServerError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SzServerError\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/server-error.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                critical\n                            \n                            \n                                detail\n                            \n                            \n                                id\n                            \n                            \n                                message\n                            \n                            \n                                timestamp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromServer\n                            \n                            \n                                    Static\n                                fromServerArray\n                            \n                            \n                                    Static\n                                toServer\n                            \n                            \n                                    Static\n                                toServerArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            critical\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromServer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromServer(source: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SzServerError\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromServerArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromServerArray(sourceArray: any[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceArray\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SzServerError[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toServer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toServer(source: SzServerError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                SzServerError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SzServerError\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toServerArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toServerArray(sourceArray: SzServerError[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceArray\n                                    \n                                                SzServerError[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SzServerError[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SzUIEventService.html":{"url":"injectables/SzUIEventService.html","title":"injectable - SzUIEventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SzUIEventService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/sz-ui.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides global level UI eventing.\nUsed for things like hover tooltips, collapse/expand,\nComponent state changes etc.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityDataService: EntityDataService, configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityDataService\n                                                  \n                                                        \n                                                                    EntityDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nmarkdownlint,\nand this project adheres to Semantic Versioning.\n[1.3.0] - 2020-2-6\nAdded to 1.3.0\nAdded in components that can be used for bulk analysis and bulk loading. The components and services are specifically to facilitate admin functionality.\n\nnew components:\nSzBulkDataAnalysisReportComponent\nSzBulkDataAnalysisSummaryComponent\nSzBulkDataAnalysisComponent\nSzBulkDataLoadReportComponent\nSzBulkDataLoadSummaryComponent\nSzBulkDataLoadComponent\n\n\nnew models/classes:\nSzBaseBulkLoadResult\nSzBulkDataAnalysis\nSzBulkDataAnalysisResponse\nSzBulkDataLoadResponse\nSzBulkLoadError\nSzBulkLoadResponse\nSzBulkLoadResult\nSzDataSourceBulkLoadResult\nSzDataSourceRecordAnalysis\nSzEntityTypeBulkLoadResult\nSzEntityTypeRecordAnalysis\n\n\nnew services:\nSzAdminService\nSzBulkDataService\n\n\nnew examples:\nexample/admin-importing\n\n\nrelevant tickets\n#133\n\n\n\n[1.2.0] - 2019-12-11\nAdded to 1.2.0\nNew *\"Search By Id\"* component, *\"record viewer\"* component, search history type-ahead, various bugfixes, rest-client updates, admin service, and basic folio models.\n\nnew components:\nSzSearchByIdComponent Component\nSzEntityRecordViewerComponent\n\n\nnew models/classes:\nSzSearchByIdFormParams interface\nSzAdminService\nSzFolioItem\nSzFolio\nSzSearchParamsFolioItem extends SzFolioItem\nSzSearchParamsFolio extends SzFolio\nSzSearchHistoryFolioItem extends SzSearchParamsFolioItem\nSzSearchHistoryFolio extends SzSearchParamsFolio\n\n\nnew services:\nSzFoliosService\n\n\nnew events:\nSzSearchService.parametersChanged\nSzSearchService.resultsChanged\nSzSearchService.searchPerformed\n\n\nnew dependencies:\nngx-json-viewer\n\n\nnew examples:\nsearch-by-id\n\n\nrelevant tickets\n#109\n#110\n#112\n#114\n#115\n#121\n#123\n#125\n#126\n\n\n\n[1.1.0] - 2019-11-11\nAdded to 1.1.0\n\npop out graph icon\nnew \"example/search-in-graph\" project to show search integrating directly with graph\nnew SzPrefDictComponent for displaying pref(s) that are object/key/value based(ie json object)\nadded dataSourceColors configuration to SzPreferencesComponent\nadded SzEntityDetailGraphFilterComponent\nadded SzStandaloneGraphComponent, a embeddable graph components designed to run in it's own context or near-to.\nadded new SzDataSourcesService class for retrieving the datasources from the api server instance.\nmodified existing SzGraphComponent code, adding all new properties to keep feature parity with SzStandaloneGraphComponent's implementation.\nadded new layout-rail layout for ... well, exactly what it sounds like, a rail version of the entity detail component.\nrelevant tickets\n#105\n#104\n\n\n\n[1.0.9] - 2019-09-23\nAdded to 1.0.9\n\nAdded SzPrefsService\nAdded SzPreferencesComponent\nCSS for responsive breakpoint(s) and/or reflow on narrow width\nVarious UI/UX layout bugfixes\nGraph should reload on entityIdChange\nGraph should collapse on 0 results\nInclude \"other data\" in records area.\nText highlighting no longer triggers click-thru\nSearch identifiers drop-down should auto-update on api config change\nrelevant tickets:\n#102\n#100\n#96\n#94\n#92\n#90\n#88\n#86\n#84\n#82\n#79\n#78\n\n\n\n[1.0.8] - 2019-07-30\nAdded to 1.0.8\n\nGraph decoupling\nGraph enhancements\nBring graph dependency up to 0.0.4\nsmarter entity icon inference\nfix for identifier searches sending the wrong parameter format to the api server\nfix for PDF service ignoring filename parameter\nrelevant issues:\n#74\n#71\n#70\n#65\n#67\n#69\n\n\n\n[1.0.7] - 2019-07-19\nAdded to 1.0.7\n\nAllow title of At a Glance graph component to be set from outside\nAt a Glance now Relationships at a Glance\nConsume version of sdk-graph-components with fixes for node drifting\nChange Relationships at a Glance buildout to 1\n\n[1.0.6] - 2019-07-11\nAdded to 1.0.6\n\nadded \"print to PDF\" service.\nnow uses separate sdk-graph-components package for embedded graphs.\nRemoved all graph components from package and moved code to /deprecated folder. will be removed in future release.\nUpdate all graph component references to use separate package namespace\nChanged default api server port to 8080, this way you can run the services directly against a default docker image of the senzing-api-server. factors in to e2e.\nUpdated documentation to reflect changes\nAdded better css classes to components to allow for more precise e2e test cases\nbugfix for constant redraw issue on \"possible matches\" node #47\nrelevant issues:\n#39\n#47\n#56\n#60\n#63\n\n\n\n[1.0.5] - 2019-06-05\nAdded to 1.0.5\nfixes, features for:\n\n#26\n#38\n#40\n\n\n\nD3 integration in to Entity Detail component as \"At a Glance\"\nSrc Path updates and refactoring to support automated building on windows\nSzRelationshipNetworkInputComponent\nSzRelationshipNetworkLookupComponent component\nSzRelationshipNetworkUploadComponent component\nremove extraneous div in sz-search markup\nremove extra padding/margins from search component wrapper\nadd onKeyEnter handler to submit search when search button is hidden/not present\nAdd New  CSS Theme Variables:\n--sz-search-results-name-color\n--sz-search-results-name-hover-color\n--sz-search-results-name-font-weight\n--sz-search-input-hover-border-color\n--sz-search-input-focus-border-color\n--sz-search-results-color\n--sz-search-results-a-hover-color\n--sz-search-results-name-color\n--sz-search-results-name-hover-color\n--sz-search-results-name-font-weight\n--sz-search-results-name-min-width\n--sz-search-results-transition\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWelcome to the project!\nWe encourage contribution in a manner consistent with the Code of Conduct.\nThe following will guide you through the process.\nThere are a number of ways you can contribute:\n\nAsking questions\nRequesting features\nReporting bugs\nContributing code or documentation\n\nLicense Agreements\nIf your contribution modifies the git repository, the following agreements must be established.\nNote:  License agreements are only needed for adding, modifying, and deleting artifacts kept within the repository.\nIn simple terms, license agreements are needed before pull requests can be accepted.\nA license agreement is not needed for submitting feature request, bug reporting, or other project management.\nIndividual Contributor License Agreement\nIn order to contribute to this repository, an\nIndividual Contributor License Agreement (ICLA)\nmust be completed, submitted and accepted.\nCorporate Contributor License Agreement\nIf the contribution to this repository is on behalf of a company, a\nCorporate Contributor License Agreement (CCLA)\nmust also be completed, submitted and accepted.\nProject License Agreement\nThe license agreement for this repository is stated in the\nLICENSE file.\nQuestions\nPlease do not use the GitHub issue tracker to submit questions.\nTODO: Instead, use ???\n\n??? Slack ???\n??? stackoverflow.com ???\n\nFeature Requests\nAll feature requests are \"GitHub issues\".\nTo request a feature, create a\nGitHub issue\nin this repository.\nWhen creating an issue, there will be a choice to create a \"Bug report\" or a \"Feature request\".\nChoose \"Feature request\".\nBug Reporting\nAll bug reports are \"GitHub issues\".\nBefore reporting on a bug, check to see if it has\nalready been reported.\nTo report a bug, create a\nGitHub issue\nin this repository.\nWhen creating an issue, there will be a choice to create a \"Bug report\" or a \"Feature request\".\nChoose \"Bug report\".\nContributing code or documentation\nTo contribute code or documentation to the repository, you must have\nLicense Agreements in place.\nThis needs to be complete before a Pull Request can be accepted.\nSetting up a development environment\nSet Environment variables\nThese variables may be modified, but do not need to be modified.\nThe variables are used throughout the installation procedure.\nexport GIT_ACCOUNT=senzing\nexport GIT_REPOSITORY=sdk-components-ngSynthesize environment variables.\nexport GIT_ACCOUNT_DIR=~/${GIT_ACCOUNT}.git\nexport GIT_REPOSITORY_DIR=\"${GIT_ACCOUNT_DIR}/${GIT_REPOSITORY}\"\nexport GIT_REPOSITORY_URL=\"git@github.com:${GIT_ACCOUNT}/${GIT_REPOSITORY}.git\"Clone repository\nGet repository.\nmkdir --parents ${GIT_ACCOUNT_DIR}\ncd  ${GIT_ACCOUNT_DIR}\ngit clone ${GIT_REPOSITORY_URL}\ncd ${GIT_REPOSITORY_DIR}Coding conventions\nTODO:\nTesting\nTODO:\nPull Requests\nCode in the master branch is modified via GitHub pull request.\nFollow GitHub's\nCreating a pull request from a branch\nor\nCreating a pull request from a fork instructions.\nAccepting pull requests will be at the discretion of Senzing, Inc. and the repository owner(s).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.1.0\n        \n            @angular/cdk : ^7.1.0\n        \n            @angular/common : ~7.1.0\n        \n            @angular/compiler : ~7.1.0\n        \n            @angular/core : ~7.1.0\n        \n            @angular/elements : ~7.1.0\n        \n            @angular/forms : ~7.1.0\n        \n            @angular/http : ~7.1.0\n        \n            @angular/platform-browser : ~7.1.0\n        \n            @angular/platform-browser-dynamic : ~7.1.0\n        \n            @angular/router : ~7.1.0\n        \n            @senzing/rest-api-client-ng : ^2.0.0\n        \n            @senzing/sdk-graph-components : ^2.0.0\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.9.1\n        \n            document-register-element : 1.8.1\n        \n            html2canvas : ^1.0.0-rc.3\n        \n            http-server : ^0.11.1\n        \n            json-query-string : ^1.0.0\n        \n            jspdf : ^1.5.3\n        \n            ngx-json-viewer : ^2.4.0\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SzBulkLoadStatus   (src/.../data-importing.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/data-importing.ts\n    \n        \n            \n                \n                    \n                        \n                        SzBulkLoadStatus\n                    \n                \n                        \n                            \n                                 NOT_STARTED\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 ABORTED\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JSONScrubber   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/common/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            JSONScrubber\n                        \n                        \n                    \n                \n            \n            \n                \nJSONScrubber(value: any)\n                \n            \n\n\n\n\n            \n                \n                    A reusable function to remove any null or undefined values, and their\nassociated keys from a json object.\nused internally.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@senzing/sdk-components-ng\nOverview\nThis project is for the Senzing® SDK components that can be used in other projects using Angular 7.X.X.\n\n\n\n\nDependencies\nFor building from Source:\n\nNode/NPM.\nAngular CLI\nTypeScript\n\nPlease see the installation instructions for each of these for how to install and setup each one properly.\nInstallation\nShortcuts\nIf you're developing on Windows or macOS, you can make use of the Senzing app\nto help populate an entity repository to test with.  It also gives you an easy way to load and browse data\noutside of the Senzing REST API Sever.  See the instructions\nfor using the Senzing App Integration Scripts\nto start the Senzing REST API Server using your existing projects in the Senzing app.\nREST API Server\nThese components require an implementation of the Senzing REST API\nto function.  You can use the Senzing REST API Server as a default\nimplementation in Java.  Follow the instructions to check out and\nbuild the Senzing REST API Sever from source or download a pre-built\nversion when available.\nSDK Components\nOpen a terminal window to the location of your project and type:\nnpm install @senzing/sdk-components-ng --save\nThe components will be added to your node_modules.\nPlease take note that all the same interfaces, and services from the @senzing/rest-api-client-ng package will also be available for convenience.\nUsage\nJust add the import statement for the particular component, service, or model that you want to use.\nimport {\n  SzEntitySearchParams,\n  SzAttributeSearchResult\n} from '@senzing/sdk-components-ng';Quick Start\n1) Start up an instance of the Senzing REST API Server\nif not currently running.\nSee the README.md for instructions on how\nto start the Senzing REST API Server on the command line or with Docker.\n2) Add the SenzingSDKModule to your angular app's app.module.ts\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SenzingSdkModule } from '@senzing/sdk-components-ng';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    SenzingSdkModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }3) Check that components can be rendered correctly. Add the following to your app.component.html (or any template) and verify the result:\nThe result should be a powered by logo like the following:\n\nIf not then double check that step 2 is correct, and that you remembered to include the\nimport statement as well.\n4) Check that components can communicate with rest api gateway sucessfully. Add the following to your app.component.html(or any template):\nThe result should be a list of service configuration parameters and values.\n5) Load the engine with data to resolve. The easiest way to do this currently is to load a CSV using the\nSenzing app.  This can also be done through the\nSenzing REST API using the Senzing REST API Server.\n6) Verify that the components are working properly. The easiest way to do this is to is to just implement a search box, and a result list. Copy the following to your app.component.html file\n\nnow in your controller class (app.component.ts) add the onSearchResults and onSearchResultClick methods we just referenced above:\nimport { Component } from '@angular/core';\nimport {\n  SzEntitySearchParams,\n  SzAttributeSearchResult\n} from '@senzing/sdk-components-ng';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'senzing-sdk-consumer';\n  public currentSearchResults: SzAttributeSearchResult[];\n  public currentlySelectedEntityId: number;\n  public currentSearchParameters: SzEntitySearchParams;\n\n  onSearchResults(evt: SzAttributeSearchResult[]) {\n    console.log('@senzing/sz-search-results: ', evt);\n    // store on current scope\n    this.currentSearchResults = evt;\n    // results module is bound to this property\n  }\n\n  public onSearchResultClick(entityData: SzAttributeSearchResult) {\n    console.log('@senzing/sz-search-results-click: ', entityData);\n\n    if (entityData && entityData.entityId > 0) {\n      this.currentlySelectedEntityId = entityData.entityId;\n    }\n  }\n}Now, start up your standard Angular dev server (or maybe just restart for fun) via ng serve\nand you should be greeted by a page like with a search box. And search results list right below it.\n\nAnd that's it! At least for the quickstart. There are a ton more options for running the rest server, interacting with the components and services.\nConfiguration & Parameters\nThe SenzingSDKModule accepts a factory method that returns an instance of the\nSzRestConfiguration class. By adding a factory like the following to the forRoot method, you can change services configuration to point to non-default values.\nThe following tells any components to turn on CORS functionality and make all api requests to localhost port 8080 (i.e.: http://localhost:8080/).\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SenzingSdkModule, SzRestConfiguration } from '@senzing/sdk-components-ng';\nimport { AppComponent } from './app.component';\n\n// create exportable factory  \n// for AOT compilation\nexport function SzRestConfigurationFactory() {\n  return new SzRestConfiguration({\n    basePath: 'http://localhost:8080',\n    withCredentials: true\n  });\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    SenzingSdkModule.forRoot( SzRestConfigurationFactory )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Parameters\nSee online documentation for a complete list of configuration parameters that can control the connection behavior of the sdk components.\nDocumentation\nInstallation contains a statically generated API and component references. They can be found in\nnode_modules/@senzing/sdk-components-ng/docs or Online here.\nExamples\nWhen you check out the source for this repository there is a directory of Angular project examples. Please see the Examples Readme for more information on how these work.\nTroubleshooting\nOccasionally something does go wrong (I know, I know right?). Here are some common things we run in to:\n\n  \n    \n      Problem\n      Solution\n      Explanation\n    \n  \n  \n    \n      messages like GET http://attribute-types/ net::ERR_NAME_NOT_RESOLVED are\n      showing up in the developer console\n      \n        Set the api configuration to the address and port your rest server is running at by\n        passing in an instance of SzRestConfiguration to the SenzingSdkModule.forRoot method.\n        \n        Double check and make sure you can connect to your rest server via\n        curl -i http://localhost:8080/heartbeat\n      \n      \n        The api is trying to hit the rest server without an appropriate basepath or the hostname.\n      \n    \n    \n      npm run start throws weird \"No App Module\" error\n      recompile the npm package. \n      npm run build\n      For whatever reason sometimes the builder misses compiling packages. open up dist/@senzing/sdk-components/public_api.d.ts and check to make sure all the packages being referenced actually got compiled.\n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SenzingSdkModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/themes.html":{"url":"additional-documentation/themes.html","title":"additional-page - Themes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nThemes\nBy default things will come unstyled. It's much easier to add styles than it is to remove them. Component styles are opt-in rather than opt-out.\nThe theming of components is handled via CSS Variables. Essentially you add the css-var key and it's css value to which the selector/property combination applies to your documents body styles like below:\nbody {\n        --sz-search-button-submit-padding: 0 30px 0 30px;\n        --sz-search-button-border-radius: 3px;\n        --sz-search-button-clear-font-size: 10px;\n        --sz-search-label-margin: 0 0 10px 4px;\n        --sz-search-input-border-radius: 8px;\n}Pre-Built\nFor a list of precompiled themes and how to use them \nsee the docs for more information.\nCustom\nFor more information about creating a custom theme \nsee the docs for more information.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/themes/pre-built.html":{"url":"additional-documentation/themes/pre-built.html","title":"additional-page - Pre Built","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nPre Defined\nWe've included some pre-built themes for quick usage to get you up and running. You'll almost certainly want to create your own, or tweak things to match your application's styling as needed. The compiled css files are located in the styles/themes directory in the package being used.\nusing SASS\nif you're using sass(and scss processor can reference node_modules), open up your main scss file(src/styles.scss in default angular layout) and include the following.\n@import '@senzing/sdk-components-ng/styles/themes/senzing.css';using CSS\nthere are several different ways to include a pre-built theme in your project.\nYou could just add the stylesheet path to your main html file and include the css reference in the HEAD of your document.\nfor production it is recommended you copy the theme stylesheet you will be using over to a static directory(probably a bad idea to leave node_modules open to the world) and change the above reference to point to it's location. \nAngular projects\nif you're using the sdk components in the scope of an angular project the recommended way is to add the theme file path to your angular.json file for your project.\n\n\nfind the _architect.build.options.styles node in the file, and add the path there. \n\"styles\": [\n  \"src/styles.scss\",\n  \"node_modules/\\\\@senzing/sdk-components-ng/styles/themes/drab.css\"\n],and next time you run or build your angular project it will include the theme file for the sdk components.\n\n  Note*\n  Windows users have to deal with _escaping_ escape charaters when directly accessing npm namespaced paths.\n  (illustrated above) \n\n\n\nThemes\n\n\n\n  \n    Drab\n    location: \n      node_modules/@senzing/sdk-components-ng/styles/themes/drab.css\n      \n  \n  \n    Senzing\n    location: \n      node_modules/@senzing/sdk-components-ng/styles/themes/senzing.css\n      \n  \n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/themes/customizing.html":{"url":"additional-documentation/themes/customizing.html","title":"additional-page - Customizing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCustomizing Themes\nsdk-components-ng and sdk-components-web both make use of CSS Variables for styling. This provides a easy way to modify the existing styles, or make entirely new themes just by editing the values in the dom inspector, and saving the overridden values in a simple stylesheet.\nthe following are the currently supported css variables:\nbody {\n  --sz-font-family: Arial;\n  --sz-color-matches: #0E2863;\n  --sz-color-possible-match: #2B7169;\n  --sz-color-possibly-related: #A09020;\n  --sz-color-name-only-matches: #95989A;\n  --sz-color-possible-matches: #C9741F;\n  --sz-color-disclosed: #2B7169;\n  --sz-color-ambiguous: #7b00ad;\n  --sz-search-button-submit-color: #FFFFFF;\n  --sz-search-button-clear-color: #000000;\n  --sz-search-button-submit-background-color: #0C9BF4;\n  --sz-search-button-clear-background-color: #95989A;\n  --sz-search-button-border: 1px solid #808285;\n  --sz-search-button-submit-border: 1px solid #808285;\n  --sz-search-button-padding: 0 10px 0 10px;\n  --sz-search-button-margin: 0;\n  --sz-search-button-border-radius: 22px;\n  --sz-search-input-color: #95989A;\n  --sz-search-input-background-color: #FFFFFF;\n  --sz-search-input-display: inline-block;\n  --sz-search-input-font-size: 13px;\n  --sz-search-input-padding: 0.25em 0.5em;\n  --sz-search-input-margin: 5px;\n  --sz-search-input-placeholder-color: #95989A;\n  --sz-search-input-border: 1px solid #95989A;\n  --sz-search-input-border-radius: 22px;\n  --sz-search-input-hover-border: 1px solid #808285;\n  --sz-search-input-focus-border: 1px solid #808285;\n  --sz-search-label-color: #5e5e5e;\n  --sz-search-label-padding: 4px;\n  --sz-search-label-margin: 0 0 10px 20px;\n  --sz-search-label-font-size: 8px;\n  --sz-search-label-display: block;\n  --sz-search-results-padding: 20px;\n  --sz-search-results-color: #5e5e5e;\n  --sz-search-results-font-family: Helvetica;\n  --sz-search-results-a-color: #0C9BF4;\n  --sz-search-results-a-cursor: pointer;\n  --sz-search-results-a-font-size: 1.8em;\n  --sz-search-results-header-display: block;\n  --sz-search-results-header-padding: 0;\n  --sz-search-results-header-margin: 20px 0 30px 0;\n  --sz-search-results-header-font-size: 1.5em;\n  --sz-search-results-header-color: #5e5e5e;\n  --sz-search-results-header-parameter-value-color: #0C9BF4;\n  --sz-search-results-section-header-color: #e5e5e5;\n  --sz-search-results-section-header-padding: 2px 20px;\n  --sz-search-results-section-header-padding: 2px 20px;\n  --sz-search-results-matches-header-background-color: var(--sz-color-matches);\n  --sz-search-results-possible-match-header-background-color: var(--sz-color-possible-match);\n  --sz-search-results-possibly-related-header-background-color: var(--sz-color-possibly-related);\n  --sz-search-results-name-only-matches-header-background-color: var(--sz-color-name-only-matches);\n  --sz-search-results-matches-card-border-left: var(--sz-search-results-matches-header-background-color) 10px solid;\n  --sz-search-results-possible-match-card-border-left: var(--sz-search-results-possible-match-header-background-color) 10px solid;\n  --sz-search-results-possibly-related-card-border-left: var(--sz-search-results-possibly-related-header-background-color) 10px solid;\n  --sz-search-results-disclosed-card-border-left: var(--sz-color-disclosed) 10px solid;\n  --sz-search-results-name-only-matches-card-border-left: var(--sz-search-results-name-only-matches-header-background-color) 10px solid;\n  --sz-entity-detail-header-font-size: 1em;\n  --sz-entity-detail-header-font-family: $sz-font-family;\n  --sz-entity-detail-header-color: #5e5e5e;\n  --sz-entity-detail-header-display: flex;\n  --sz-entity-detail-icon-display: block;\n  --sz-entity-detail-icon-height: 175px;\n  --sz-entity-detail-icon-width: 175px;\n  --sz-entity-detail-icon-border: 3px solid #82848647;\n  --sz-entity-detail-icon-border-radius: 50%;\n  --sz-entity-detail-icon-margin: 0 30px 30px 20px;\n  --sz-entity-detail-header-entity-name-font-size: 34px;\n  --sz-entity-detail-header-entity-name-font-weight: 600;\n  --sz-entity-detail-header-section-totals-margin: 0 20px 0 0;\n  --sz-entity-detail-header-section-totals-padding: 0 0 0.5em 0;\n  --sz-entity-detail-header-section-totals-display: flex;\n  --sz-entity-detail-header-section-totals-border: none;\n  --sz-entity-detail-header-section-totals-border-radius: 2px;\n  --sz-entity-detail-header-section-totals-color: #FFFFFF;\n  --sz-entity-detail-header-section-totals-font-size: 60px;\n  --sz-entity-detail-header-section-totals-width: 200px;\n  --sz-entity-detail-header-section-totals-height: 100px;\n  --sz-entity-detail-header-section-totals-icon-width: 48px;\n  --sz-entity-detail-section-header-margin: 1em 0 0;\n  --sz-entity-detail-section-header-padding: 0.4em 1em;\n  --sz-entity-detail-section-header-color: #FFFFFF;\n  --sz-entity-detail-section-header-font-size: 28px;\n  --sz-entity-detail-section-header-font-family: $sz-font-family;\n  --sz-entity-detail-section-header-border-radius: 4px 4px 0 0;\n  --sz-entity-detail-section-color: #808285;\n  --sz-entity-detail-section-font-size: 16px;\n  --sz-entity-detail-section-line-height: 20px;\n  --sz-entity-detail-section-background: #eaeaea;\n  --sz-entity-detail-section-border: 1px solid #ccc;\n  --sz-entity-detail-section-border-radius: 0 0 6px 6px;\n  --sz-entity-detail-section-border-left: 1px solid #ccc;\n  --sz-entity-detail-section-border-right: 1px solid #ccc;\n  --sz-entity-detail-section-border-top: none;\n  --sz-entity-detail-section-border-bottom: 1px solid #dbdbdb;\n  --sz-entity-detail-section-title-font-size: 20px;\n  --sz-entity-detail-section-padding: 0 24px;\n  --sz-entity-detail-section-record-card-display: block;\n  --sz-entity-detail-section-record-card-background-color: #FFFFFF;\n  --sz-entity-detail-section-record-card-margin: 8px;\n  --sz-entity-detail-section-record-card-padding: 15px;\n  --sz-entity-detail-section-record-card-border-radius: 5px;\n  --sz-entity-detail-section-record-card-border: 1px solid #eaeaea;\n  --sz-entity-detail-pill-display: inline-block;\n  --sz-entity-detail-pill-font-size: 20px;\n  --sz-entity-detail-pill-text-transform: uppercase;\n  --sz-entity-detail-pill-padding: 5px 8px;\n  --sz-entity-detail-pill-margin: 0 10px 0 0;\n  --sz-entity-detail-pill-background-color: #808285;\n  --sz-entity-detail-pill-border-radius: 5px;\n}\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
